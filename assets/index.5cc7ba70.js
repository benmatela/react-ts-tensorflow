function VS(t,e){return e.forEach(function(n){n&&typeof n!="string"&&!Array.isArray(n)&&Object.keys(n).forEach(function(r){if(r!=="default"&&!(r in t)){var s=Object.getOwnPropertyDescriptor(n,r);Object.defineProperty(t,r,s.get?s:{enumerable:!0,get:function(){return n[r]}})}})}),Object.freeze(Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}))}const b_=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerpolicy&&(o.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?o.credentials="include":s.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(s){if(s.ep)return;s.ep=!0;const o=n(s);fetch(s.href,o)}};b_();var Ln=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{};function C_(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function WS(t){if(t.__esModule)return t;var e=Object.defineProperty({},"__esModule",{value:!0});return Object.keys(t).forEach(function(n){var r=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,r.get?r:{enumerable:!0,get:function(){return t[n]}})}),e}var oe={exports:{}},_e={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var kc=Symbol.for("react.element"),S_=Symbol.for("react.portal"),$_=Symbol.for("react.fragment"),k_=Symbol.for("react.strict_mode"),I_=Symbol.for("react.profiler"),N_=Symbol.for("react.provider"),T_=Symbol.for("react.context"),E_=Symbol.for("react.forward_ref"),R_=Symbol.for("react.suspense"),__=Symbol.for("react.memo"),D_=Symbol.for("react.lazy"),Cv=Symbol.iterator;function P_(t){return t===null||typeof t!="object"?null:(t=Cv&&t[Cv]||t["@@iterator"],typeof t=="function"?t:null)}var US={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},GS=Object.assign,HS={};function Bi(t,e,n){this.props=t,this.context=e,this.refs=HS,this.updater=n||US}Bi.prototype.isReactComponent={};Bi.prototype.setState=function(t,e){if(typeof t!="object"&&typeof t!="function"&&t!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,e,"setState")};Bi.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")};function jS(){}jS.prototype=Bi.prototype;function T0(t,e,n){this.props=t,this.context=e,this.refs=HS,this.updater=n||US}var E0=T0.prototype=new jS;E0.constructor=T0;GS(E0,Bi.prototype);E0.isPureReactComponent=!0;var Sv=Array.isArray,KS=Object.prototype.hasOwnProperty,R0={current:null},qS={key:!0,ref:!0,__self:!0,__source:!0};function XS(t,e,n){var r,s={},o=null,a=null;if(e!=null)for(r in e.ref!==void 0&&(a=e.ref),e.key!==void 0&&(o=""+e.key),e)KS.call(e,r)&&!qS.hasOwnProperty(r)&&(s[r]=e[r]);var i=arguments.length-2;if(i===1)s.children=n;else if(1<i){for(var u=Array(i),l=0;l<i;l++)u[l]=arguments[l+2];s.children=u}if(t&&t.defaultProps)for(r in i=t.defaultProps,i)s[r]===void 0&&(s[r]=i[r]);return{$$typeof:kc,type:t,key:o,ref:a,props:s,_owner:R0.current}}function A_(t,e){return{$$typeof:kc,type:t.type,key:e,ref:t.ref,props:t.props,_owner:t._owner}}function _0(t){return typeof t=="object"&&t!==null&&t.$$typeof===kc}function O_(t){var e={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,function(n){return e[n]})}var $v=/\/+/g;function Bg(t,e){return typeof t=="object"&&t!==null&&t.key!=null?O_(""+t.key):e.toString(36)}function dh(t,e,n,r,s){var o=typeof t;(o==="undefined"||o==="boolean")&&(t=null);var a=!1;if(t===null)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(t.$$typeof){case kc:case S_:a=!0}}if(a)return a=t,s=s(a),t=r===""?"."+Bg(a,0):r,Sv(s)?(n="",t!=null&&(n=t.replace($v,"$&/")+"/"),dh(s,e,n,"",function(l){return l})):s!=null&&(_0(s)&&(s=A_(s,n+(!s.key||a&&a.key===s.key?"":(""+s.key).replace($v,"$&/")+"/")+t)),e.push(s)),1;if(a=0,r=r===""?".":r+":",Sv(t))for(var i=0;i<t.length;i++){o=t[i];var u=r+Bg(o,i);a+=dh(o,e,n,u,s)}else if(u=P_(t),typeof u=="function")for(t=u.call(t),i=0;!(o=t.next()).done;)o=o.value,u=r+Bg(o,i++),a+=dh(o,e,n,u,s);else if(o==="object")throw e=String(t),Error("Objects are not valid as a React child (found: "+(e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)+"). If you meant to render a collection of children, use an array instead.");return a}function Ap(t,e,n){if(t==null)return t;var r=[],s=0;return dh(t,r,"","",function(o){return e.call(n,o,s++)}),r}function F_(t){if(t._status===-1){var e=t._result;e=e(),e.then(function(n){(t._status===0||t._status===-1)&&(t._status=1,t._result=n)},function(n){(t._status===0||t._status===-1)&&(t._status=2,t._result=n)}),t._status===-1&&(t._status=0,t._result=e)}if(t._status===1)return t._result.default;throw t._result}var hn={current:null},ph={transition:null},L_={ReactCurrentDispatcher:hn,ReactCurrentBatchConfig:ph,ReactCurrentOwner:R0};_e.Children={map:Ap,forEach:function(t,e,n){Ap(t,function(){e.apply(this,arguments)},n)},count:function(t){var e=0;return Ap(t,function(){e++}),e},toArray:function(t){return Ap(t,function(e){return e})||[]},only:function(t){if(!_0(t))throw Error("React.Children.only expected to receive a single React element child.");return t}};_e.Component=Bi;_e.Fragment=$_;_e.Profiler=I_;_e.PureComponent=T0;_e.StrictMode=k_;_e.Suspense=R_;_e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=L_;_e.cloneElement=function(t,e,n){if(t==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+t+".");var r=GS({},t.props),s=t.key,o=t.ref,a=t._owner;if(e!=null){if(e.ref!==void 0&&(o=e.ref,a=R0.current),e.key!==void 0&&(s=""+e.key),t.type&&t.type.defaultProps)var i=t.type.defaultProps;for(u in e)KS.call(e,u)&&!qS.hasOwnProperty(u)&&(r[u]=e[u]===void 0&&i!==void 0?i[u]:e[u])}var u=arguments.length-2;if(u===1)r.children=n;else if(1<u){i=Array(u);for(var l=0;l<u;l++)i[l]=arguments[l+2];r.children=i}return{$$typeof:kc,type:t.type,key:s,ref:o,props:r,_owner:a}};_e.createContext=function(t){return t={$$typeof:T_,_currentValue:t,_currentValue2:t,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},t.Provider={$$typeof:N_,_context:t},t.Consumer=t};_e.createElement=XS;_e.createFactory=function(t){var e=XS.bind(null,t);return e.type=t,e};_e.createRef=function(){return{current:null}};_e.forwardRef=function(t){return{$$typeof:E_,render:t}};_e.isValidElement=_0;_e.lazy=function(t){return{$$typeof:D_,_payload:{_status:-1,_result:t},_init:F_}};_e.memo=function(t,e){return{$$typeof:__,type:t,compare:e===void 0?null:e}};_e.startTransition=function(t){var e=ph.transition;ph.transition={};try{t()}finally{ph.transition=e}};_e.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")};_e.useCallback=function(t,e){return hn.current.useCallback(t,e)};_e.useContext=function(t){return hn.current.useContext(t)};_e.useDebugValue=function(){};_e.useDeferredValue=function(t){return hn.current.useDeferredValue(t)};_e.useEffect=function(t,e){return hn.current.useEffect(t,e)};_e.useId=function(){return hn.current.useId()};_e.useImperativeHandle=function(t,e,n){return hn.current.useImperativeHandle(t,e,n)};_e.useInsertionEffect=function(t,e){return hn.current.useInsertionEffect(t,e)};_e.useLayoutEffect=function(t,e){return hn.current.useLayoutEffect(t,e)};_e.useMemo=function(t,e){return hn.current.useMemo(t,e)};_e.useReducer=function(t,e,n){return hn.current.useReducer(t,e,n)};_e.useRef=function(t){return hn.current.useRef(t)};_e.useState=function(t){return hn.current.useState(t)};_e.useSyncExternalStore=function(t,e,n){return hn.current.useSyncExternalStore(t,e,n)};_e.useTransition=function(){return hn.current.useTransition()};_e.version="18.2.0";oe.exports=_e;var X=oe.exports,Ph=VS({__proto__:null,default:X},[oe.exports]),Ry={},YS={exports:{}},qn={},QS={exports:{}},ZS={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(t){function e(O,U){var j=O.length;O.push(U);e:for(;0<j;){var T=j-1>>>1,A=O[T];if(0<s(A,U))O[T]=U,O[j]=A,j=T;else break e}}function n(O){return O.length===0?null:O[0]}function r(O){if(O.length===0)return null;var U=O[0],j=O.pop();if(j!==U){O[0]=j;e:for(var T=0,A=O.length,_=A>>>1;T<_;){var G=2*(T+1)-1,K=O[G],Q=G+1,Z=O[Q];if(0>s(K,j))Q<A&&0>s(Z,K)?(O[T]=Z,O[Q]=j,T=Q):(O[T]=K,O[G]=j,T=G);else if(Q<A&&0>s(Z,j))O[T]=Z,O[Q]=j,T=Q;else break e}}return U}function s(O,U){var j=O.sortIndex-U.sortIndex;return j!==0?j:O.id-U.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;t.unstable_now=function(){return o.now()}}else{var a=Date,i=a.now();t.unstable_now=function(){return a.now()-i}}var u=[],l=[],c=1,d=null,p=3,h=!1,f=!1,m=!1,y=typeof setTimeout=="function"?setTimeout:null,g=typeof clearTimeout=="function"?clearTimeout:null,x=typeof setImmediate!="undefined"?setImmediate:null;typeof navigator!="undefined"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function w(O){for(var U=n(l);U!==null;){if(U.callback===null)r(l);else if(U.startTime<=O)r(l),U.sortIndex=U.expirationTime,e(u,U);else break;U=n(l)}}function v(O){if(m=!1,w(O),!f)if(n(u)!==null)f=!0,H(b);else{var U=n(l);U!==null&&q(v,U.startTime-O)}}function b(O,U){f=!1,m&&(m=!1,g(N),N=-1),h=!0;var j=p;try{for(w(U),d=n(u);d!==null&&(!(d.expirationTime>U)||O&&!F());){var T=d.callback;if(typeof T=="function"){d.callback=null,p=d.priorityLevel;var A=T(d.expirationTime<=U);U=t.unstable_now(),typeof A=="function"?d.callback=A:d===n(u)&&r(u),w(U)}else r(u);d=n(u)}if(d!==null)var _=!0;else{var G=n(l);G!==null&&q(v,G.startTime-U),_=!1}return _}finally{d=null,p=j,h=!1}}var S=!1,$=null,N=-1,E=5,R=-1;function F(){return!(t.unstable_now()-R<E)}function B(){if($!==null){var O=t.unstable_now();R=O;var U=!0;try{U=$(!0,O)}finally{U?M():(S=!1,$=null)}}else S=!1}var M;if(typeof x=="function")M=function(){x(B)};else if(typeof MessageChannel!="undefined"){var V=new MessageChannel,W=V.port2;V.port1.onmessage=B,M=function(){W.postMessage(null)}}else M=function(){y(B,0)};function H(O){$=O,S||(S=!0,M())}function q(O,U){N=y(function(){O(t.unstable_now())},U)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(O){O.callback=null},t.unstable_continueExecution=function(){f||h||(f=!0,H(b))},t.unstable_forceFrameRate=function(O){0>O||125<O?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):E=0<O?Math.floor(1e3/O):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return n(u)},t.unstable_next=function(O){switch(p){case 1:case 2:case 3:var U=3;break;default:U=p}var j=p;p=U;try{return O()}finally{p=j}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(O,U){switch(O){case 1:case 2:case 3:case 4:case 5:break;default:O=3}var j=p;p=O;try{return U()}finally{p=j}},t.unstable_scheduleCallback=function(O,U,j){var T=t.unstable_now();switch(typeof j=="object"&&j!==null?(j=j.delay,j=typeof j=="number"&&0<j?T+j:T):j=T,O){case 1:var A=-1;break;case 2:A=250;break;case 5:A=1073741823;break;case 4:A=1e4;break;default:A=5e3}return A=j+A,O={id:c++,callback:U,priorityLevel:O,startTime:j,expirationTime:A,sortIndex:-1},j>T?(O.sortIndex=j,e(l,O),n(u)===null&&O===n(l)&&(m?(g(N),N=-1):m=!0,q(v,j-T))):(O.sortIndex=A,e(u,O),f||h||(f=!0,H(b))),O},t.unstable_shouldYield=F,t.unstable_wrapCallback=function(O){var U=p;return function(){var j=p;p=U;try{return O.apply(this,arguments)}finally{p=j}}}})(ZS);QS.exports=ZS;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var JS=oe.exports,Hn=QS.exports;function J(t){for(var e="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)e+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+t+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var e2=new Set,Ll={};function ya(t,e){fi(t,e),fi(t+"Capture",e)}function fi(t,e){for(Ll[t]=e,t=0;t<e.length;t++)e2.add(e[t])}var ws=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),_y=Object.prototype.hasOwnProperty,z_=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,kv={},Iv={};function B_(t){return _y.call(Iv,t)?!0:_y.call(kv,t)?!1:z_.test(t)?Iv[t]=!0:(kv[t]=!0,!1)}function M_(t,e,n,r){if(n!==null&&n.type===0)return!1;switch(typeof e){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(t=t.toLowerCase().slice(0,5),t!=="data-"&&t!=="aria-");default:return!1}}function V_(t,e,n,r){if(e===null||typeof e=="undefined"||M_(t,e,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!e;case 4:return e===!1;case 5:return isNaN(e);case 6:return isNaN(e)||1>e}return!1}function fn(t,e,n,r,s,o,a){this.acceptsBooleans=e===2||e===3||e===4,this.attributeName=r,this.attributeNamespace=s,this.mustUseProperty=n,this.propertyName=t,this.type=e,this.sanitizeURL=o,this.removeEmptyString=a}var Ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(t){Ht[t]=new fn(t,0,!1,t,null,!1,!1)});[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(t){var e=t[0];Ht[e]=new fn(e,1,!1,t[1],null,!1,!1)});["contentEditable","draggable","spellCheck","value"].forEach(function(t){Ht[t]=new fn(t,2,!1,t.toLowerCase(),null,!1,!1)});["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(t){Ht[t]=new fn(t,2,!1,t,null,!1,!1)});"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(t){Ht[t]=new fn(t,3,!1,t.toLowerCase(),null,!1,!1)});["checked","multiple","muted","selected"].forEach(function(t){Ht[t]=new fn(t,3,!0,t,null,!1,!1)});["capture","download"].forEach(function(t){Ht[t]=new fn(t,4,!1,t,null,!1,!1)});["cols","rows","size","span"].forEach(function(t){Ht[t]=new fn(t,6,!1,t,null,!1,!1)});["rowSpan","start"].forEach(function(t){Ht[t]=new fn(t,5,!1,t.toLowerCase(),null,!1,!1)});var D0=/[\-:]([a-z])/g;function P0(t){return t[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(t){var e=t.replace(D0,P0);Ht[e]=new fn(e,1,!1,t,null,!1,!1)});"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(t){var e=t.replace(D0,P0);Ht[e]=new fn(e,1,!1,t,"http://www.w3.org/1999/xlink",!1,!1)});["xml:base","xml:lang","xml:space"].forEach(function(t){var e=t.replace(D0,P0);Ht[e]=new fn(e,1,!1,t,"http://www.w3.org/XML/1998/namespace",!1,!1)});["tabIndex","crossOrigin"].forEach(function(t){Ht[t]=new fn(t,1,!1,t.toLowerCase(),null,!1,!1)});Ht.xlinkHref=new fn("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1);["src","href","action","formAction"].forEach(function(t){Ht[t]=new fn(t,1,!1,t.toLowerCase(),null,!0,!0)});function A0(t,e,n,r){var s=Ht.hasOwnProperty(e)?Ht[e]:null;(s!==null?s.type!==0:r||!(2<e.length)||e[0]!=="o"&&e[0]!=="O"||e[1]!=="n"&&e[1]!=="N")&&(V_(e,n,s,r)&&(n=null),r||s===null?B_(e)&&(n===null?t.removeAttribute(e):t.setAttribute(e,""+n)):s.mustUseProperty?t[s.propertyName]=n===null?s.type===3?!1:"":n:(e=s.attributeName,r=s.attributeNamespace,n===null?t.removeAttribute(e):(s=s.type,n=s===3||s===4&&n===!0?"":""+n,r?t.setAttributeNS(r,e,n):t.setAttribute(e,n))))}var Ns=JS.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,Op=Symbol.for("react.element"),Ga=Symbol.for("react.portal"),Ha=Symbol.for("react.fragment"),O0=Symbol.for("react.strict_mode"),Dy=Symbol.for("react.profiler"),t2=Symbol.for("react.provider"),n2=Symbol.for("react.context"),F0=Symbol.for("react.forward_ref"),Py=Symbol.for("react.suspense"),Ay=Symbol.for("react.suspense_list"),L0=Symbol.for("react.memo"),As=Symbol.for("react.lazy"),r2=Symbol.for("react.offscreen"),Nv=Symbol.iterator;function ol(t){return t===null||typeof t!="object"?null:(t=Nv&&t[Nv]||t["@@iterator"],typeof t=="function"?t:null)}var pt=Object.assign,Mg;function ml(t){if(Mg===void 0)try{throw Error()}catch(n){var e=n.stack.trim().match(/\n( *(at )?)/);Mg=e&&e[1]||""}return`
`+Mg+t}var Vg=!1;function Wg(t,e){if(!t||Vg)return"";Vg=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(e)if(e=function(){throw Error()},Object.defineProperty(e.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(e,[])}catch(l){var r=l}Reflect.construct(t,[],e)}else{try{e.call()}catch(l){r=l}t.call(e.prototype)}else{try{throw Error()}catch(l){r=l}t()}}catch(l){if(l&&r&&typeof l.stack=="string"){for(var s=l.stack.split(`
`),o=r.stack.split(`
`),a=s.length-1,i=o.length-1;1<=a&&0<=i&&s[a]!==o[i];)i--;for(;1<=a&&0<=i;a--,i--)if(s[a]!==o[i]){if(a!==1||i!==1)do if(a--,i--,0>i||s[a]!==o[i]){var u=`
`+s[a].replace(" at new "," at ");return t.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",t.displayName)),u}while(1<=a&&0<=i);break}}}finally{Vg=!1,Error.prepareStackTrace=n}return(t=t?t.displayName||t.name:"")?ml(t):""}function W_(t){switch(t.tag){case 5:return ml(t.type);case 16:return ml("Lazy");case 13:return ml("Suspense");case 19:return ml("SuspenseList");case 0:case 2:case 15:return t=Wg(t.type,!1),t;case 11:return t=Wg(t.type.render,!1),t;case 1:return t=Wg(t.type,!0),t;default:return""}}function Oy(t){if(t==null)return null;if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t;switch(t){case Ha:return"Fragment";case Ga:return"Portal";case Dy:return"Profiler";case O0:return"StrictMode";case Py:return"Suspense";case Ay:return"SuspenseList"}if(typeof t=="object")switch(t.$$typeof){case n2:return(t.displayName||"Context")+".Consumer";case t2:return(t._context.displayName||"Context")+".Provider";case F0:var e=t.render;return t=t.displayName,t||(t=e.displayName||e.name||"",t=t!==""?"ForwardRef("+t+")":"ForwardRef"),t;case L0:return e=t.displayName||null,e!==null?e:Oy(t.type)||"Memo";case As:e=t._payload,t=t._init;try{return Oy(t(e))}catch{}}return null}function U_(t){var e=t.type;switch(t.tag){case 24:return"Cache";case 9:return(e.displayName||"Context")+".Consumer";case 10:return(e._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return t=e.render,t=t.displayName||t.name||"",e.displayName||(t!==""?"ForwardRef("+t+")":"ForwardRef");case 7:return"Fragment";case 5:return e;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Oy(e);case 8:return e===O0?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e}return null}function no(t){switch(typeof t){case"boolean":case"number":case"string":case"undefined":return t;case"object":return t;default:return""}}function s2(t){var e=t.type;return(t=t.nodeName)&&t.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function G_(t){var e=s2(t)?"checked":"value",n=Object.getOwnPropertyDescriptor(t.constructor.prototype,e),r=""+t[e];if(!t.hasOwnProperty(e)&&typeof n!="undefined"&&typeof n.get=="function"&&typeof n.set=="function"){var s=n.get,o=n.set;return Object.defineProperty(t,e,{configurable:!0,get:function(){return s.call(this)},set:function(a){r=""+a,o.call(this,a)}}),Object.defineProperty(t,e,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(a){r=""+a},stopTracking:function(){t._valueTracker=null,delete t[e]}}}}function Fp(t){t._valueTracker||(t._valueTracker=G_(t))}function o2(t){if(!t)return!1;var e=t._valueTracker;if(!e)return!0;var n=e.getValue(),r="";return t&&(r=s2(t)?t.checked?"true":"false":t.value),t=r,t!==n?(e.setValue(t),!0):!1}function Ah(t){if(t=t||(typeof document!="undefined"?document:void 0),typeof t=="undefined")return null;try{return t.activeElement||t.body}catch{return t.body}}function Fy(t,e){var n=e.checked;return pt({},e,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:t._wrapperState.initialChecked})}function Tv(t,e){var n=e.defaultValue==null?"":e.defaultValue,r=e.checked!=null?e.checked:e.defaultChecked;n=no(e.value!=null?e.value:n),t._wrapperState={initialChecked:r,initialValue:n,controlled:e.type==="checkbox"||e.type==="radio"?e.checked!=null:e.value!=null}}function a2(t,e){e=e.checked,e!=null&&A0(t,"checked",e,!1)}function Ly(t,e){a2(t,e);var n=no(e.value),r=e.type;if(n!=null)r==="number"?(n===0&&t.value===""||t.value!=n)&&(t.value=""+n):t.value!==""+n&&(t.value=""+n);else if(r==="submit"||r==="reset"){t.removeAttribute("value");return}e.hasOwnProperty("value")?zy(t,e.type,n):e.hasOwnProperty("defaultValue")&&zy(t,e.type,no(e.defaultValue)),e.checked==null&&e.defaultChecked!=null&&(t.defaultChecked=!!e.defaultChecked)}function Ev(t,e,n){if(e.hasOwnProperty("value")||e.hasOwnProperty("defaultValue")){var r=e.type;if(!(r!=="submit"&&r!=="reset"||e.value!==void 0&&e.value!==null))return;e=""+t._wrapperState.initialValue,n||e===t.value||(t.value=e),t.defaultValue=e}n=t.name,n!==""&&(t.name=""),t.defaultChecked=!!t._wrapperState.initialChecked,n!==""&&(t.name=n)}function zy(t,e,n){(e!=="number"||Ah(t.ownerDocument)!==t)&&(n==null?t.defaultValue=""+t._wrapperState.initialValue:t.defaultValue!==""+n&&(t.defaultValue=""+n))}var gl=Array.isArray;function ri(t,e,n,r){if(t=t.options,e){e={};for(var s=0;s<n.length;s++)e["$"+n[s]]=!0;for(n=0;n<t.length;n++)s=e.hasOwnProperty("$"+t[n].value),t[n].selected!==s&&(t[n].selected=s),s&&r&&(t[n].defaultSelected=!0)}else{for(n=""+no(n),e=null,s=0;s<t.length;s++){if(t[s].value===n){t[s].selected=!0,r&&(t[s].defaultSelected=!0);return}e!==null||t[s].disabled||(e=t[s])}e!==null&&(e.selected=!0)}}function By(t,e){if(e.dangerouslySetInnerHTML!=null)throw Error(J(91));return pt({},e,{value:void 0,defaultValue:void 0,children:""+t._wrapperState.initialValue})}function Rv(t,e){var n=e.value;if(n==null){if(n=e.children,e=e.defaultValue,n!=null){if(e!=null)throw Error(J(92));if(gl(n)){if(1<n.length)throw Error(J(93));n=n[0]}e=n}e==null&&(e=""),n=e}t._wrapperState={initialValue:no(n)}}function i2(t,e){var n=no(e.value),r=no(e.defaultValue);n!=null&&(n=""+n,n!==t.value&&(t.value=n),e.defaultValue==null&&t.defaultValue!==n&&(t.defaultValue=n)),r!=null&&(t.defaultValue=""+r)}function _v(t){var e=t.textContent;e===t._wrapperState.initialValue&&e!==""&&e!==null&&(t.value=e)}function u2(t){switch(t){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function My(t,e){return t==null||t==="http://www.w3.org/1999/xhtml"?u2(e):t==="http://www.w3.org/2000/svg"&&e==="foreignObject"?"http://www.w3.org/1999/xhtml":t}var Lp,l2=function(t){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(e,n,r,s){MSApp.execUnsafeLocalFunction(function(){return t(e,n,r,s)})}:t}(function(t,e){if(t.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in t)t.innerHTML=e;else{for(Lp=Lp||document.createElement("div"),Lp.innerHTML="<svg>"+e.valueOf().toString()+"</svg>",e=Lp.firstChild;t.firstChild;)t.removeChild(t.firstChild);for(;e.firstChild;)t.appendChild(e.firstChild)}});function zl(t,e){if(e){var n=t.firstChild;if(n&&n===t.lastChild&&n.nodeType===3){n.nodeValue=e;return}}t.textContent=e}var Il={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},H_=["Webkit","ms","Moz","O"];Object.keys(Il).forEach(function(t){H_.forEach(function(e){e=e+t.charAt(0).toUpperCase()+t.substring(1),Il[e]=Il[t]})});function c2(t,e,n){return e==null||typeof e=="boolean"||e===""?"":n||typeof e!="number"||e===0||Il.hasOwnProperty(t)&&Il[t]?(""+e).trim():e+"px"}function d2(t,e){t=t.style;for(var n in e)if(e.hasOwnProperty(n)){var r=n.indexOf("--")===0,s=c2(n,e[n],r);n==="float"&&(n="cssFloat"),r?t.setProperty(n,s):t[n]=s}}var j_=pt({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Vy(t,e){if(e){if(j_[t]&&(e.children!=null||e.dangerouslySetInnerHTML!=null))throw Error(J(137,t));if(e.dangerouslySetInnerHTML!=null){if(e.children!=null)throw Error(J(60));if(typeof e.dangerouslySetInnerHTML!="object"||!("__html"in e.dangerouslySetInnerHTML))throw Error(J(61))}if(e.style!=null&&typeof e.style!="object")throw Error(J(62))}}function Wy(t,e){if(t.indexOf("-")===-1)return typeof e.is=="string";switch(t){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Uy=null;function z0(t){return t=t.target||t.srcElement||window,t.correspondingUseElement&&(t=t.correspondingUseElement),t.nodeType===3?t.parentNode:t}var Gy=null,si=null,oi=null;function Dv(t){if(t=Tc(t)){if(typeof Gy!="function")throw Error(J(280));var e=t.stateNode;e&&(e=Uf(e),Gy(t.stateNode,t.type,e))}}function p2(t){si?oi?oi.push(t):oi=[t]:si=t}function h2(){if(si){var t=si,e=oi;if(oi=si=null,Dv(t),e)for(t=0;t<e.length;t++)Dv(e[t])}}function f2(t,e){return t(e)}function m2(){}var Ug=!1;function g2(t,e,n){if(Ug)return t(e,n);Ug=!0;try{return f2(t,e,n)}finally{Ug=!1,(si!==null||oi!==null)&&(m2(),h2())}}function Bl(t,e){var n=t.stateNode;if(n===null)return null;var r=Uf(n);if(r===null)return null;n=r[e];e:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(t=t.type,r=!(t==="button"||t==="input"||t==="select"||t==="textarea")),t=!r;break e;default:t=!1}if(t)return null;if(n&&typeof n!="function")throw Error(J(231,e,typeof n));return n}var Hy=!1;if(ws)try{var al={};Object.defineProperty(al,"passive",{get:function(){Hy=!0}}),window.addEventListener("test",al,al),window.removeEventListener("test",al,al)}catch{Hy=!1}function K_(t,e,n,r,s,o,a,i,u){var l=Array.prototype.slice.call(arguments,3);try{e.apply(n,l)}catch(c){this.onError(c)}}var Nl=!1,Oh=null,Fh=!1,jy=null,q_={onError:function(t){Nl=!0,Oh=t}};function X_(t,e,n,r,s,o,a,i,u){Nl=!1,Oh=null,K_.apply(q_,arguments)}function Y_(t,e,n,r,s,o,a,i,u){if(X_.apply(this,arguments),Nl){if(Nl){var l=Oh;Nl=!1,Oh=null}else throw Error(J(198));Fh||(Fh=!0,jy=l)}}function xa(t){var e=t,n=t;if(t.alternate)for(;e.return;)e=e.return;else{t=e;do e=t,(e.flags&4098)!==0&&(n=e.return),t=e.return;while(t)}return e.tag===3?n:null}function y2(t){if(t.tag===13){var e=t.memoizedState;if(e===null&&(t=t.alternate,t!==null&&(e=t.memoizedState)),e!==null)return e.dehydrated}return null}function Pv(t){if(xa(t)!==t)throw Error(J(188))}function Q_(t){var e=t.alternate;if(!e){if(e=xa(t),e===null)throw Error(J(188));return e!==t?null:t}for(var n=t,r=e;;){var s=n.return;if(s===null)break;var o=s.alternate;if(o===null){if(r=s.return,r!==null){n=r;continue}break}if(s.child===o.child){for(o=s.child;o;){if(o===n)return Pv(s),t;if(o===r)return Pv(s),e;o=o.sibling}throw Error(J(188))}if(n.return!==r.return)n=s,r=o;else{for(var a=!1,i=s.child;i;){if(i===n){a=!0,n=s,r=o;break}if(i===r){a=!0,r=s,n=o;break}i=i.sibling}if(!a){for(i=o.child;i;){if(i===n){a=!0,n=o,r=s;break}if(i===r){a=!0,r=o,n=s;break}i=i.sibling}if(!a)throw Error(J(189))}}if(n.alternate!==r)throw Error(J(190))}if(n.tag!==3)throw Error(J(188));return n.stateNode.current===n?t:e}function x2(t){return t=Q_(t),t!==null?w2(t):null}function w2(t){if(t.tag===5||t.tag===6)return t;for(t=t.child;t!==null;){var e=w2(t);if(e!==null)return e;t=t.sibling}return null}var v2=Hn.unstable_scheduleCallback,Av=Hn.unstable_cancelCallback,Z_=Hn.unstable_shouldYield,J_=Hn.unstable_requestPaint,gt=Hn.unstable_now,eD=Hn.unstable_getCurrentPriorityLevel,B0=Hn.unstable_ImmediatePriority,b2=Hn.unstable_UserBlockingPriority,Lh=Hn.unstable_NormalPriority,tD=Hn.unstable_LowPriority,C2=Hn.unstable_IdlePriority,Bf=null,Xr=null;function nD(t){if(Xr&&typeof Xr.onCommitFiberRoot=="function")try{Xr.onCommitFiberRoot(Bf,t,void 0,(t.current.flags&128)===128)}catch{}}var Tr=Math.clz32?Math.clz32:oD,rD=Math.log,sD=Math.LN2;function oD(t){return t>>>=0,t===0?32:31-(rD(t)/sD|0)|0}var zp=64,Bp=4194304;function yl(t){switch(t&-t){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return t&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return t}}function zh(t,e){var n=t.pendingLanes;if(n===0)return 0;var r=0,s=t.suspendedLanes,o=t.pingedLanes,a=n&268435455;if(a!==0){var i=a&~s;i!==0?r=yl(i):(o&=a,o!==0&&(r=yl(o)))}else a=n&~s,a!==0?r=yl(a):o!==0&&(r=yl(o));if(r===0)return 0;if(e!==0&&e!==r&&(e&s)===0&&(s=r&-r,o=e&-e,s>=o||s===16&&(o&4194240)!==0))return e;if((r&4)!==0&&(r|=n&16),e=t.entangledLanes,e!==0)for(t=t.entanglements,e&=r;0<e;)n=31-Tr(e),s=1<<n,r|=t[n],e&=~s;return r}function aD(t,e){switch(t){case 1:case 2:case 4:return e+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function iD(t,e){for(var n=t.suspendedLanes,r=t.pingedLanes,s=t.expirationTimes,o=t.pendingLanes;0<o;){var a=31-Tr(o),i=1<<a,u=s[a];u===-1?((i&n)===0||(i&r)!==0)&&(s[a]=aD(i,e)):u<=e&&(t.expiredLanes|=i),o&=~i}}function Ky(t){return t=t.pendingLanes&-1073741825,t!==0?t:t&1073741824?1073741824:0}function S2(){var t=zp;return zp<<=1,(zp&4194240)===0&&(zp=64),t}function Gg(t){for(var e=[],n=0;31>n;n++)e.push(t);return e}function Ic(t,e,n){t.pendingLanes|=e,e!==536870912&&(t.suspendedLanes=0,t.pingedLanes=0),t=t.eventTimes,e=31-Tr(e),t[e]=n}function uD(t,e){var n=t.pendingLanes&~e;t.pendingLanes=e,t.suspendedLanes=0,t.pingedLanes=0,t.expiredLanes&=e,t.mutableReadLanes&=e,t.entangledLanes&=e,e=t.entanglements;var r=t.eventTimes;for(t=t.expirationTimes;0<n;){var s=31-Tr(n),o=1<<s;e[s]=0,r[s]=-1,t[s]=-1,n&=~o}}function M0(t,e){var n=t.entangledLanes|=e;for(t=t.entanglements;n;){var r=31-Tr(n),s=1<<r;s&e|t[r]&e&&(t[r]|=e),n&=~s}}var Ve=0;function $2(t){return t&=-t,1<t?4<t?(t&268435455)!==0?16:536870912:4:1}var k2,V0,I2,N2,T2,qy=!1,Mp=[],js=null,Ks=null,qs=null,Ml=new Map,Vl=new Map,Ls=[],lD="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Ov(t,e){switch(t){case"focusin":case"focusout":js=null;break;case"dragenter":case"dragleave":Ks=null;break;case"mouseover":case"mouseout":qs=null;break;case"pointerover":case"pointerout":Ml.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Vl.delete(e.pointerId)}}function il(t,e,n,r,s,o){return t===null||t.nativeEvent!==o?(t={blockedOn:e,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[s]},e!==null&&(e=Tc(e),e!==null&&V0(e)),t):(t.eventSystemFlags|=r,e=t.targetContainers,s!==null&&e.indexOf(s)===-1&&e.push(s),t)}function cD(t,e,n,r,s){switch(e){case"focusin":return js=il(js,t,e,n,r,s),!0;case"dragenter":return Ks=il(Ks,t,e,n,r,s),!0;case"mouseover":return qs=il(qs,t,e,n,r,s),!0;case"pointerover":var o=s.pointerId;return Ml.set(o,il(Ml.get(o)||null,t,e,n,r,s)),!0;case"gotpointercapture":return o=s.pointerId,Vl.set(o,il(Vl.get(o)||null,t,e,n,r,s)),!0}return!1}function E2(t){var e=Mo(t.target);if(e!==null){var n=xa(e);if(n!==null){if(e=n.tag,e===13){if(e=y2(n),e!==null){t.blockedOn=e,T2(t.priority,function(){I2(n)});return}}else if(e===3&&n.stateNode.current.memoizedState.isDehydrated){t.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}t.blockedOn=null}function hh(t){if(t.blockedOn!==null)return!1;for(var e=t.targetContainers;0<e.length;){var n=Xy(t.domEventName,t.eventSystemFlags,e[0],t.nativeEvent);if(n===null){n=t.nativeEvent;var r=new n.constructor(n.type,n);Uy=r,n.target.dispatchEvent(r),Uy=null}else return e=Tc(n),e!==null&&V0(e),t.blockedOn=n,!1;e.shift()}return!0}function Fv(t,e,n){hh(t)&&n.delete(e)}function dD(){qy=!1,js!==null&&hh(js)&&(js=null),Ks!==null&&hh(Ks)&&(Ks=null),qs!==null&&hh(qs)&&(qs=null),Ml.forEach(Fv),Vl.forEach(Fv)}function ul(t,e){t.blockedOn===e&&(t.blockedOn=null,qy||(qy=!0,Hn.unstable_scheduleCallback(Hn.unstable_NormalPriority,dD)))}function Wl(t){function e(s){return ul(s,t)}if(0<Mp.length){ul(Mp[0],t);for(var n=1;n<Mp.length;n++){var r=Mp[n];r.blockedOn===t&&(r.blockedOn=null)}}for(js!==null&&ul(js,t),Ks!==null&&ul(Ks,t),qs!==null&&ul(qs,t),Ml.forEach(e),Vl.forEach(e),n=0;n<Ls.length;n++)r=Ls[n],r.blockedOn===t&&(r.blockedOn=null);for(;0<Ls.length&&(n=Ls[0],n.blockedOn===null);)E2(n),n.blockedOn===null&&Ls.shift()}var ai=Ns.ReactCurrentBatchConfig,Bh=!0;function pD(t,e,n,r){var s=Ve,o=ai.transition;ai.transition=null;try{Ve=1,W0(t,e,n,r)}finally{Ve=s,ai.transition=o}}function hD(t,e,n,r){var s=Ve,o=ai.transition;ai.transition=null;try{Ve=4,W0(t,e,n,r)}finally{Ve=s,ai.transition=o}}function W0(t,e,n,r){if(Bh){var s=Xy(t,e,n,r);if(s===null)ey(t,e,r,Mh,n),Ov(t,r);else if(cD(s,t,e,n,r))r.stopPropagation();else if(Ov(t,r),e&4&&-1<lD.indexOf(t)){for(;s!==null;){var o=Tc(s);if(o!==null&&k2(o),o=Xy(t,e,n,r),o===null&&ey(t,e,r,Mh,n),o===s)break;s=o}s!==null&&r.stopPropagation()}else ey(t,e,r,null,n)}}var Mh=null;function Xy(t,e,n,r){if(Mh=null,t=z0(r),t=Mo(t),t!==null)if(e=xa(t),e===null)t=null;else if(n=e.tag,n===13){if(t=y2(e),t!==null)return t;t=null}else if(n===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;t=null}else e!==t&&(t=null);return Mh=t,null}function R2(t){switch(t){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(eD()){case B0:return 1;case b2:return 4;case Lh:case tD:return 16;case C2:return 536870912;default:return 16}default:return 16}}var Ms=null,U0=null,fh=null;function _2(){if(fh)return fh;var t,e=U0,n=e.length,r,s="value"in Ms?Ms.value:Ms.textContent,o=s.length;for(t=0;t<n&&e[t]===s[t];t++);var a=n-t;for(r=1;r<=a&&e[n-r]===s[o-r];r++);return fh=s.slice(t,1<r?1-r:void 0)}function mh(t){var e=t.keyCode;return"charCode"in t?(t=t.charCode,t===0&&e===13&&(t=13)):t=e,t===10&&(t=13),32<=t||t===13?t:0}function Vp(){return!0}function Lv(){return!1}function Xn(t){function e(n,r,s,o,a){this._reactName=n,this._targetInst=s,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null;for(var i in t)t.hasOwnProperty(i)&&(n=t[i],this[i]=n?n(o):o[i]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Vp:Lv,this.isPropagationStopped=Lv,this}return pt(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=Vp)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=Vp)},persist:function(){},isPersistent:Vp}),e}var Mi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(t){return t.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},G0=Xn(Mi),Nc=pt({},Mi,{view:0,detail:0}),fD=Xn(Nc),Hg,jg,ll,Mf=pt({},Nc,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:H0,button:0,buttons:0,relatedTarget:function(t){return t.relatedTarget===void 0?t.fromElement===t.srcElement?t.toElement:t.fromElement:t.relatedTarget},movementX:function(t){return"movementX"in t?t.movementX:(t!==ll&&(ll&&t.type==="mousemove"?(Hg=t.screenX-ll.screenX,jg=t.screenY-ll.screenY):jg=Hg=0,ll=t),Hg)},movementY:function(t){return"movementY"in t?t.movementY:jg}}),zv=Xn(Mf),mD=pt({},Mf,{dataTransfer:0}),gD=Xn(mD),yD=pt({},Nc,{relatedTarget:0}),Kg=Xn(yD),xD=pt({},Mi,{animationName:0,elapsedTime:0,pseudoElement:0}),wD=Xn(xD),vD=pt({},Mi,{clipboardData:function(t){return"clipboardData"in t?t.clipboardData:window.clipboardData}}),bD=Xn(vD),CD=pt({},Mi,{data:0}),Bv=Xn(CD),SD={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},$D={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},kD={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ID(t){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(t):(t=kD[t])?!!e[t]:!1}function H0(){return ID}var ND=pt({},Nc,{key:function(t){if(t.key){var e=SD[t.key]||t.key;if(e!=="Unidentified")return e}return t.type==="keypress"?(t=mh(t),t===13?"Enter":String.fromCharCode(t)):t.type==="keydown"||t.type==="keyup"?$D[t.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:H0,charCode:function(t){return t.type==="keypress"?mh(t):0},keyCode:function(t){return t.type==="keydown"||t.type==="keyup"?t.keyCode:0},which:function(t){return t.type==="keypress"?mh(t):t.type==="keydown"||t.type==="keyup"?t.keyCode:0}}),TD=Xn(ND),ED=pt({},Mf,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Mv=Xn(ED),RD=pt({},Nc,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:H0}),_D=Xn(RD),DD=pt({},Mi,{propertyName:0,elapsedTime:0,pseudoElement:0}),PD=Xn(DD),AD=pt({},Mf,{deltaX:function(t){return"deltaX"in t?t.deltaX:"wheelDeltaX"in t?-t.wheelDeltaX:0},deltaY:function(t){return"deltaY"in t?t.deltaY:"wheelDeltaY"in t?-t.wheelDeltaY:"wheelDelta"in t?-t.wheelDelta:0},deltaZ:0,deltaMode:0}),OD=Xn(AD),FD=[9,13,27,32],j0=ws&&"CompositionEvent"in window,Tl=null;ws&&"documentMode"in document&&(Tl=document.documentMode);var LD=ws&&"TextEvent"in window&&!Tl,D2=ws&&(!j0||Tl&&8<Tl&&11>=Tl),Vv=String.fromCharCode(32),Wv=!1;function P2(t,e){switch(t){case"keyup":return FD.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function A2(t){return t=t.detail,typeof t=="object"&&"data"in t?t.data:null}var ja=!1;function zD(t,e){switch(t){case"compositionend":return A2(e);case"keypress":return e.which!==32?null:(Wv=!0,Vv);case"textInput":return t=e.data,t===Vv&&Wv?null:t;default:return null}}function BD(t,e){if(ja)return t==="compositionend"||!j0&&P2(t,e)?(t=_2(),fh=U0=Ms=null,ja=!1,t):null;switch(t){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return D2&&e.locale!=="ko"?null:e.data;default:return null}}var MD={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Uv(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e==="input"?!!MD[t.type]:e==="textarea"}function O2(t,e,n,r){p2(r),e=Vh(e,"onChange"),0<e.length&&(n=new G0("onChange","change",null,n,r),t.push({event:n,listeners:e}))}var El=null,Ul=null;function VD(t){j2(t,0)}function Vf(t){var e=Xa(t);if(o2(e))return t}function WD(t,e){if(t==="change")return e}var F2=!1;if(ws){var qg;if(ws){var Xg="oninput"in document;if(!Xg){var Gv=document.createElement("div");Gv.setAttribute("oninput","return;"),Xg=typeof Gv.oninput=="function"}qg=Xg}else qg=!1;F2=qg&&(!document.documentMode||9<document.documentMode)}function Hv(){El&&(El.detachEvent("onpropertychange",L2),Ul=El=null)}function L2(t){if(t.propertyName==="value"&&Vf(Ul)){var e=[];O2(e,Ul,t,z0(t)),g2(VD,e)}}function UD(t,e,n){t==="focusin"?(Hv(),El=e,Ul=n,El.attachEvent("onpropertychange",L2)):t==="focusout"&&Hv()}function GD(t){if(t==="selectionchange"||t==="keyup"||t==="keydown")return Vf(Ul)}function HD(t,e){if(t==="click")return Vf(e)}function jD(t,e){if(t==="input"||t==="change")return Vf(e)}function KD(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Or=typeof Object.is=="function"?Object.is:KD;function Gl(t,e){if(Or(t,e))return!0;if(typeof t!="object"||t===null||typeof e!="object"||e===null)return!1;var n=Object.keys(t),r=Object.keys(e);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var s=n[r];if(!_y.call(e,s)||!Or(t[s],e[s]))return!1}return!0}function jv(t){for(;t&&t.firstChild;)t=t.firstChild;return t}function Kv(t,e){var n=jv(t);t=0;for(var r;n;){if(n.nodeType===3){if(r=t+n.textContent.length,t<=e&&r>=e)return{node:n,offset:e-t};t=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=jv(n)}}function z2(t,e){return t&&e?t===e?!0:t&&t.nodeType===3?!1:e&&e.nodeType===3?z2(t,e.parentNode):"contains"in t?t.contains(e):t.compareDocumentPosition?!!(t.compareDocumentPosition(e)&16):!1:!1}function B2(){for(var t=window,e=Ah();e instanceof t.HTMLIFrameElement;){try{var n=typeof e.contentWindow.location.href=="string"}catch{n=!1}if(n)t=e.contentWindow;else break;e=Ah(t.document)}return e}function K0(t){var e=t&&t.nodeName&&t.nodeName.toLowerCase();return e&&(e==="input"&&(t.type==="text"||t.type==="search"||t.type==="tel"||t.type==="url"||t.type==="password")||e==="textarea"||t.contentEditable==="true")}function qD(t){var e=B2(),n=t.focusedElem,r=t.selectionRange;if(e!==n&&n&&n.ownerDocument&&z2(n.ownerDocument.documentElement,n)){if(r!==null&&K0(n)){if(e=r.start,t=r.end,t===void 0&&(t=e),"selectionStart"in n)n.selectionStart=e,n.selectionEnd=Math.min(t,n.value.length);else if(t=(e=n.ownerDocument||document)&&e.defaultView||window,t.getSelection){t=t.getSelection();var s=n.textContent.length,o=Math.min(r.start,s);r=r.end===void 0?o:Math.min(r.end,s),!t.extend&&o>r&&(s=r,r=o,o=s),s=Kv(n,o);var a=Kv(n,r);s&&a&&(t.rangeCount!==1||t.anchorNode!==s.node||t.anchorOffset!==s.offset||t.focusNode!==a.node||t.focusOffset!==a.offset)&&(e=e.createRange(),e.setStart(s.node,s.offset),t.removeAllRanges(),o>r?(t.addRange(e),t.extend(a.node,a.offset)):(e.setEnd(a.node,a.offset),t.addRange(e)))}}for(e=[],t=n;t=t.parentNode;)t.nodeType===1&&e.push({element:t,left:t.scrollLeft,top:t.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<e.length;n++)t=e[n],t.element.scrollLeft=t.left,t.element.scrollTop=t.top}}var XD=ws&&"documentMode"in document&&11>=document.documentMode,Ka=null,Yy=null,Rl=null,Qy=!1;function qv(t,e,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Qy||Ka==null||Ka!==Ah(r)||(r=Ka,"selectionStart"in r&&K0(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Rl&&Gl(Rl,r)||(Rl=r,r=Vh(Yy,"onSelect"),0<r.length&&(e=new G0("onSelect","select",null,e,n),t.push({event:e,listeners:r}),e.target=Ka)))}function Wp(t,e){var n={};return n[t.toLowerCase()]=e.toLowerCase(),n["Webkit"+t]="webkit"+e,n["Moz"+t]="moz"+e,n}var qa={animationend:Wp("Animation","AnimationEnd"),animationiteration:Wp("Animation","AnimationIteration"),animationstart:Wp("Animation","AnimationStart"),transitionend:Wp("Transition","TransitionEnd")},Yg={},M2={};ws&&(M2=document.createElement("div").style,"AnimationEvent"in window||(delete qa.animationend.animation,delete qa.animationiteration.animation,delete qa.animationstart.animation),"TransitionEvent"in window||delete qa.transitionend.transition);function Wf(t){if(Yg[t])return Yg[t];if(!qa[t])return t;var e=qa[t],n;for(n in e)if(e.hasOwnProperty(n)&&n in M2)return Yg[t]=e[n];return t}var V2=Wf("animationend"),W2=Wf("animationiteration"),U2=Wf("animationstart"),G2=Wf("transitionend"),H2=new Map,Xv="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function fo(t,e){H2.set(t,e),ya(e,[t])}for(var Qg=0;Qg<Xv.length;Qg++){var Zg=Xv[Qg],YD=Zg.toLowerCase(),QD=Zg[0].toUpperCase()+Zg.slice(1);fo(YD,"on"+QD)}fo(V2,"onAnimationEnd");fo(W2,"onAnimationIteration");fo(U2,"onAnimationStart");fo("dblclick","onDoubleClick");fo("focusin","onFocus");fo("focusout","onBlur");fo(G2,"onTransitionEnd");fi("onMouseEnter",["mouseout","mouseover"]);fi("onMouseLeave",["mouseout","mouseover"]);fi("onPointerEnter",["pointerout","pointerover"]);fi("onPointerLeave",["pointerout","pointerover"]);ya("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));ya("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));ya("onBeforeInput",["compositionend","keypress","textInput","paste"]);ya("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));ya("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));ya("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xl="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ZD=new Set("cancel close invalid load scroll toggle".split(" ").concat(xl));function Yv(t,e,n){var r=t.type||"unknown-event";t.currentTarget=n,Y_(r,e,void 0,t),t.currentTarget=null}function j2(t,e){e=(e&4)!==0;for(var n=0;n<t.length;n++){var r=t[n],s=r.event;r=r.listeners;e:{var o=void 0;if(e)for(var a=r.length-1;0<=a;a--){var i=r[a],u=i.instance,l=i.currentTarget;if(i=i.listener,u!==o&&s.isPropagationStopped())break e;Yv(s,i,l),o=u}else for(a=0;a<r.length;a++){if(i=r[a],u=i.instance,l=i.currentTarget,i=i.listener,u!==o&&s.isPropagationStopped())break e;Yv(s,i,l),o=u}}}if(Fh)throw t=jy,Fh=!1,jy=null,t}function nt(t,e){var n=e[nx];n===void 0&&(n=e[nx]=new Set);var r=t+"__bubble";n.has(r)||(K2(e,t,2,!1),n.add(r))}function Jg(t,e,n){var r=0;e&&(r|=4),K2(n,t,r,e)}var Up="_reactListening"+Math.random().toString(36).slice(2);function Hl(t){if(!t[Up]){t[Up]=!0,e2.forEach(function(n){n!=="selectionchange"&&(ZD.has(n)||Jg(n,!1,t),Jg(n,!0,t))});var e=t.nodeType===9?t:t.ownerDocument;e===null||e[Up]||(e[Up]=!0,Jg("selectionchange",!1,e))}}function K2(t,e,n,r){switch(R2(e)){case 1:var s=pD;break;case 4:s=hD;break;default:s=W0}n=s.bind(null,e,n,t),s=void 0,!Hy||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(s=!0),r?s!==void 0?t.addEventListener(e,n,{capture:!0,passive:s}):t.addEventListener(e,n,!0):s!==void 0?t.addEventListener(e,n,{passive:s}):t.addEventListener(e,n,!1)}function ey(t,e,n,r,s){var o=r;if((e&1)===0&&(e&2)===0&&r!==null)e:for(;;){if(r===null)return;var a=r.tag;if(a===3||a===4){var i=r.stateNode.containerInfo;if(i===s||i.nodeType===8&&i.parentNode===s)break;if(a===4)for(a=r.return;a!==null;){var u=a.tag;if((u===3||u===4)&&(u=a.stateNode.containerInfo,u===s||u.nodeType===8&&u.parentNode===s))return;a=a.return}for(;i!==null;){if(a=Mo(i),a===null)return;if(u=a.tag,u===5||u===6){r=o=a;continue e}i=i.parentNode}}r=r.return}g2(function(){var l=o,c=z0(n),d=[];e:{var p=H2.get(t);if(p!==void 0){var h=G0,f=t;switch(t){case"keypress":if(mh(n)===0)break e;case"keydown":case"keyup":h=TD;break;case"focusin":f="focus",h=Kg;break;case"focusout":f="blur",h=Kg;break;case"beforeblur":case"afterblur":h=Kg;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":h=zv;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":h=gD;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":h=_D;break;case V2:case W2:case U2:h=wD;break;case G2:h=PD;break;case"scroll":h=fD;break;case"wheel":h=OD;break;case"copy":case"cut":case"paste":h=bD;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":h=Mv}var m=(e&4)!==0,y=!m&&t==="scroll",g=m?p!==null?p+"Capture":null:p;m=[];for(var x=l,w;x!==null;){w=x;var v=w.stateNode;if(w.tag===5&&v!==null&&(w=v,g!==null&&(v=Bl(x,g),v!=null&&m.push(jl(x,v,w)))),y)break;x=x.return}0<m.length&&(p=new h(p,f,null,n,c),d.push({event:p,listeners:m}))}}if((e&7)===0){e:{if(p=t==="mouseover"||t==="pointerover",h=t==="mouseout"||t==="pointerout",p&&n!==Uy&&(f=n.relatedTarget||n.fromElement)&&(Mo(f)||f[vs]))break e;if((h||p)&&(p=c.window===c?c:(p=c.ownerDocument)?p.defaultView||p.parentWindow:window,h?(f=n.relatedTarget||n.toElement,h=l,f=f?Mo(f):null,f!==null&&(y=xa(f),f!==y||f.tag!==5&&f.tag!==6)&&(f=null)):(h=null,f=l),h!==f)){if(m=zv,v="onMouseLeave",g="onMouseEnter",x="mouse",(t==="pointerout"||t==="pointerover")&&(m=Mv,v="onPointerLeave",g="onPointerEnter",x="pointer"),y=h==null?p:Xa(h),w=f==null?p:Xa(f),p=new m(v,x+"leave",h,n,c),p.target=y,p.relatedTarget=w,v=null,Mo(c)===l&&(m=new m(g,x+"enter",f,n,c),m.target=w,m.relatedTarget=y,v=m),y=v,h&&f)t:{for(m=h,g=f,x=0,w=m;w;w=za(w))x++;for(w=0,v=g;v;v=za(v))w++;for(;0<x-w;)m=za(m),x--;for(;0<w-x;)g=za(g),w--;for(;x--;){if(m===g||g!==null&&m===g.alternate)break t;m=za(m),g=za(g)}m=null}else m=null;h!==null&&Qv(d,p,h,m,!1),f!==null&&y!==null&&Qv(d,y,f,m,!0)}}e:{if(p=l?Xa(l):window,h=p.nodeName&&p.nodeName.toLowerCase(),h==="select"||h==="input"&&p.type==="file")var b=WD;else if(Uv(p))if(F2)b=jD;else{b=GD;var S=UD}else(h=p.nodeName)&&h.toLowerCase()==="input"&&(p.type==="checkbox"||p.type==="radio")&&(b=HD);if(b&&(b=b(t,l))){O2(d,b,n,c);break e}S&&S(t,p,l),t==="focusout"&&(S=p._wrapperState)&&S.controlled&&p.type==="number"&&zy(p,"number",p.value)}switch(S=l?Xa(l):window,t){case"focusin":(Uv(S)||S.contentEditable==="true")&&(Ka=S,Yy=l,Rl=null);break;case"focusout":Rl=Yy=Ka=null;break;case"mousedown":Qy=!0;break;case"contextmenu":case"mouseup":case"dragend":Qy=!1,qv(d,n,c);break;case"selectionchange":if(XD)break;case"keydown":case"keyup":qv(d,n,c)}var $;if(j0)e:{switch(t){case"compositionstart":var N="onCompositionStart";break e;case"compositionend":N="onCompositionEnd";break e;case"compositionupdate":N="onCompositionUpdate";break e}N=void 0}else ja?P2(t,n)&&(N="onCompositionEnd"):t==="keydown"&&n.keyCode===229&&(N="onCompositionStart");N&&(D2&&n.locale!=="ko"&&(ja||N!=="onCompositionStart"?N==="onCompositionEnd"&&ja&&($=_2()):(Ms=c,U0="value"in Ms?Ms.value:Ms.textContent,ja=!0)),S=Vh(l,N),0<S.length&&(N=new Bv(N,t,null,n,c),d.push({event:N,listeners:S}),$?N.data=$:($=A2(n),$!==null&&(N.data=$)))),($=LD?zD(t,n):BD(t,n))&&(l=Vh(l,"onBeforeInput"),0<l.length&&(c=new Bv("onBeforeInput","beforeinput",null,n,c),d.push({event:c,listeners:l}),c.data=$))}j2(d,e)})}function jl(t,e,n){return{instance:t,listener:e,currentTarget:n}}function Vh(t,e){for(var n=e+"Capture",r=[];t!==null;){var s=t,o=s.stateNode;s.tag===5&&o!==null&&(s=o,o=Bl(t,n),o!=null&&r.unshift(jl(t,o,s)),o=Bl(t,e),o!=null&&r.push(jl(t,o,s))),t=t.return}return r}function za(t){if(t===null)return null;do t=t.return;while(t&&t.tag!==5);return t||null}function Qv(t,e,n,r,s){for(var o=e._reactName,a=[];n!==null&&n!==r;){var i=n,u=i.alternate,l=i.stateNode;if(u!==null&&u===r)break;i.tag===5&&l!==null&&(i=l,s?(u=Bl(n,o),u!=null&&a.unshift(jl(n,u,i))):s||(u=Bl(n,o),u!=null&&a.push(jl(n,u,i)))),n=n.return}a.length!==0&&t.push({event:e,listeners:a})}var JD=/\r\n?/g,eP=/\u0000|\uFFFD/g;function Zv(t){return(typeof t=="string"?t:""+t).replace(JD,`
`).replace(eP,"")}function Gp(t,e,n){if(e=Zv(e),Zv(t)!==e&&n)throw Error(J(425))}function Wh(){}var Zy=null,Jy=null;function ex(t,e){return t==="textarea"||t==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var tx=typeof setTimeout=="function"?setTimeout:void 0,tP=typeof clearTimeout=="function"?clearTimeout:void 0,Jv=typeof Promise=="function"?Promise:void 0,nP=typeof queueMicrotask=="function"?queueMicrotask:typeof Jv!="undefined"?function(t){return Jv.resolve(null).then(t).catch(rP)}:tx;function rP(t){setTimeout(function(){throw t})}function ty(t,e){var n=e,r=0;do{var s=n.nextSibling;if(t.removeChild(n),s&&s.nodeType===8)if(n=s.data,n==="/$"){if(r===0){t.removeChild(s),Wl(e);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=s}while(n);Wl(e)}function Xs(t){for(;t!=null;t=t.nextSibling){var e=t.nodeType;if(e===1||e===3)break;if(e===8){if(e=t.data,e==="$"||e==="$!"||e==="$?")break;if(e==="/$")return null}}return t}function eb(t){t=t.previousSibling;for(var e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="$"||n==="$!"||n==="$?"){if(e===0)return t;e--}else n==="/$"&&e++}t=t.previousSibling}return null}var Vi=Math.random().toString(36).slice(2),Kr="__reactFiber$"+Vi,Kl="__reactProps$"+Vi,vs="__reactContainer$"+Vi,nx="__reactEvents$"+Vi,sP="__reactListeners$"+Vi,oP="__reactHandles$"+Vi;function Mo(t){var e=t[Kr];if(e)return e;for(var n=t.parentNode;n;){if(e=n[vs]||n[Kr]){if(n=e.alternate,e.child!==null||n!==null&&n.child!==null)for(t=eb(t);t!==null;){if(n=t[Kr])return n;t=eb(t)}return e}t=n,n=t.parentNode}return null}function Tc(t){return t=t[Kr]||t[vs],!t||t.tag!==5&&t.tag!==6&&t.tag!==13&&t.tag!==3?null:t}function Xa(t){if(t.tag===5||t.tag===6)return t.stateNode;throw Error(J(33))}function Uf(t){return t[Kl]||null}var rx=[],Ya=-1;function mo(t){return{current:t}}function rt(t){0>Ya||(t.current=rx[Ya],rx[Ya]=null,Ya--)}function Je(t,e){Ya++,rx[Ya]=t.current,t.current=e}var ro={},nn=mo(ro),In=mo(!1),ta=ro;function mi(t,e){var n=t.type.contextTypes;if(!n)return ro;var r=t.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===e)return r.__reactInternalMemoizedMaskedChildContext;var s={},o;for(o in n)s[o]=e[o];return r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=e,t.__reactInternalMemoizedMaskedChildContext=s),s}function Nn(t){return t=t.childContextTypes,t!=null}function Uh(){rt(In),rt(nn)}function tb(t,e,n){if(nn.current!==ro)throw Error(J(168));Je(nn,e),Je(In,n)}function q2(t,e,n){var r=t.stateNode;if(e=e.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var s in r)if(!(s in e))throw Error(J(108,U_(t)||"Unknown",s));return pt({},n,r)}function Gh(t){return t=(t=t.stateNode)&&t.__reactInternalMemoizedMergedChildContext||ro,ta=nn.current,Je(nn,t),Je(In,In.current),!0}function nb(t,e,n){var r=t.stateNode;if(!r)throw Error(J(169));n?(t=q2(t,e,ta),r.__reactInternalMemoizedMergedChildContext=t,rt(In),rt(nn),Je(nn,t)):rt(In),Je(In,n)}var is=null,Gf=!1,ny=!1;function X2(t){is===null?is=[t]:is.push(t)}function aP(t){Gf=!0,X2(t)}function go(){if(!ny&&is!==null){ny=!0;var t=0,e=Ve;try{var n=is;for(Ve=1;t<n.length;t++){var r=n[t];do r=r(!0);while(r!==null)}is=null,Gf=!1}catch(s){throw is!==null&&(is=is.slice(t+1)),v2(B0,go),s}finally{Ve=e,ny=!1}}return null}var Qa=[],Za=0,Hh=null,jh=0,rr=[],sr=0,na=null,hs=1,fs="";function Ro(t,e){Qa[Za++]=jh,Qa[Za++]=Hh,Hh=t,jh=e}function Y2(t,e,n){rr[sr++]=hs,rr[sr++]=fs,rr[sr++]=na,na=t;var r=hs;t=fs;var s=32-Tr(r)-1;r&=~(1<<s),n+=1;var o=32-Tr(e)+s;if(30<o){var a=s-s%5;o=(r&(1<<a)-1).toString(32),r>>=a,s-=a,hs=1<<32-Tr(e)+s|n<<s|r,fs=o+t}else hs=1<<o|n<<s|r,fs=t}function q0(t){t.return!==null&&(Ro(t,1),Y2(t,1,0))}function X0(t){for(;t===Hh;)Hh=Qa[--Za],Qa[Za]=null,jh=Qa[--Za],Qa[Za]=null;for(;t===na;)na=rr[--sr],rr[sr]=null,fs=rr[--sr],rr[sr]=null,hs=rr[--sr],rr[sr]=null}var Un=null,Bn=null,at=!1,Cr=null;function Q2(t,e){var n=or(5,null,null,0);n.elementType="DELETED",n.stateNode=e,n.return=t,e=t.deletions,e===null?(t.deletions=[n],t.flags|=16):e.push(n)}function rb(t,e){switch(t.tag){case 5:var n=t.type;return e=e.nodeType!==1||n.toLowerCase()!==e.nodeName.toLowerCase()?null:e,e!==null?(t.stateNode=e,Un=t,Bn=Xs(e.firstChild),!0):!1;case 6:return e=t.pendingProps===""||e.nodeType!==3?null:e,e!==null?(t.stateNode=e,Un=t,Bn=null,!0):!1;case 13:return e=e.nodeType!==8?null:e,e!==null?(n=na!==null?{id:hs,overflow:fs}:null,t.memoizedState={dehydrated:e,treeContext:n,retryLane:1073741824},n=or(18,null,null,0),n.stateNode=e,n.return=t,t.child=n,Un=t,Bn=null,!0):!1;default:return!1}}function sx(t){return(t.mode&1)!==0&&(t.flags&128)===0}function ox(t){if(at){var e=Bn;if(e){var n=e;if(!rb(t,e)){if(sx(t))throw Error(J(418));e=Xs(n.nextSibling);var r=Un;e&&rb(t,e)?Q2(r,n):(t.flags=t.flags&-4097|2,at=!1,Un=t)}}else{if(sx(t))throw Error(J(418));t.flags=t.flags&-4097|2,at=!1,Un=t}}}function sb(t){for(t=t.return;t!==null&&t.tag!==5&&t.tag!==3&&t.tag!==13;)t=t.return;Un=t}function Hp(t){if(t!==Un)return!1;if(!at)return sb(t),at=!0,!1;var e;if((e=t.tag!==3)&&!(e=t.tag!==5)&&(e=t.type,e=e!=="head"&&e!=="body"&&!ex(t.type,t.memoizedProps)),e&&(e=Bn)){if(sx(t))throw Z2(),Error(J(418));for(;e;)Q2(t,e),e=Xs(e.nextSibling)}if(sb(t),t.tag===13){if(t=t.memoizedState,t=t!==null?t.dehydrated:null,!t)throw Error(J(317));e:{for(t=t.nextSibling,e=0;t;){if(t.nodeType===8){var n=t.data;if(n==="/$"){if(e===0){Bn=Xs(t.nextSibling);break e}e--}else n!=="$"&&n!=="$!"&&n!=="$?"||e++}t=t.nextSibling}Bn=null}}else Bn=Un?Xs(t.stateNode.nextSibling):null;return!0}function Z2(){for(var t=Bn;t;)t=Xs(t.nextSibling)}function gi(){Bn=Un=null,at=!1}function Y0(t){Cr===null?Cr=[t]:Cr.push(t)}var iP=Ns.ReactCurrentBatchConfig;function vr(t,e){if(t&&t.defaultProps){e=pt({},e),t=t.defaultProps;for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e}return e}var Kh=mo(null),qh=null,Ja=null,Q0=null;function Z0(){Q0=Ja=qh=null}function J0(t){var e=Kh.current;rt(Kh),t._currentValue=e}function ax(t,e,n){for(;t!==null;){var r=t.alternate;if((t.childLanes&e)!==e?(t.childLanes|=e,r!==null&&(r.childLanes|=e)):r!==null&&(r.childLanes&e)!==e&&(r.childLanes|=e),t===n)break;t=t.return}}function ii(t,e){qh=t,Q0=Ja=null,t=t.dependencies,t!==null&&t.firstContext!==null&&((t.lanes&e)!==0&&($n=!0),t.firstContext=null)}function pr(t){var e=t._currentValue;if(Q0!==t)if(t={context:t,memoizedValue:e,next:null},Ja===null){if(qh===null)throw Error(J(308));Ja=t,qh.dependencies={lanes:0,firstContext:t}}else Ja=Ja.next=t;return e}var Vo=null;function e1(t){Vo===null?Vo=[t]:Vo.push(t)}function J2(t,e,n,r){var s=e.interleaved;return s===null?(n.next=n,e1(e)):(n.next=s.next,s.next=n),e.interleaved=n,bs(t,r)}function bs(t,e){t.lanes|=e;var n=t.alternate;for(n!==null&&(n.lanes|=e),n=t,t=t.return;t!==null;)t.childLanes|=e,n=t.alternate,n!==null&&(n.childLanes|=e),n=t,t=t.return;return n.tag===3?n.stateNode:null}var Os=!1;function t1(t){t.updateQueue={baseState:t.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function e$(t,e){t=t.updateQueue,e.updateQueue===t&&(e.updateQueue={baseState:t.baseState,firstBaseUpdate:t.firstBaseUpdate,lastBaseUpdate:t.lastBaseUpdate,shared:t.shared,effects:t.effects})}function ms(t,e){return{eventTime:t,lane:e,tag:0,payload:null,callback:null,next:null}}function Ys(t,e,n){var r=t.updateQueue;if(r===null)return null;if(r=r.shared,(Fe&2)!==0){var s=r.pending;return s===null?e.next=e:(e.next=s.next,s.next=e),r.pending=e,bs(t,n)}return s=r.interleaved,s===null?(e.next=e,e1(r)):(e.next=s.next,s.next=e),r.interleaved=e,bs(t,n)}function gh(t,e,n){if(e=e.updateQueue,e!==null&&(e=e.shared,(n&4194240)!==0)){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,M0(t,n)}}function ob(t,e){var n=t.updateQueue,r=t.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var s=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?s=o=a:o=o.next=a,n=n.next}while(n!==null);o===null?s=o=e:o=o.next=e}else s=o=e;n={baseState:r.baseState,firstBaseUpdate:s,lastBaseUpdate:o,shared:r.shared,effects:r.effects},t.updateQueue=n;return}t=n.lastBaseUpdate,t===null?n.firstBaseUpdate=e:t.next=e,n.lastBaseUpdate=e}function Xh(t,e,n,r){var s=t.updateQueue;Os=!1;var o=s.firstBaseUpdate,a=s.lastBaseUpdate,i=s.shared.pending;if(i!==null){s.shared.pending=null;var u=i,l=u.next;u.next=null,a===null?o=l:a.next=l,a=u;var c=t.alternate;c!==null&&(c=c.updateQueue,i=c.lastBaseUpdate,i!==a&&(i===null?c.firstBaseUpdate=l:i.next=l,c.lastBaseUpdate=u))}if(o!==null){var d=s.baseState;a=0,c=l=u=null,i=o;do{var p=i.lane,h=i.eventTime;if((r&p)===p){c!==null&&(c=c.next={eventTime:h,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=t,m=i;switch(p=e,h=n,m.tag){case 1:if(f=m.payload,typeof f=="function"){d=f.call(h,d,p);break e}d=f;break e;case 3:f.flags=f.flags&-65537|128;case 0:if(f=m.payload,p=typeof f=="function"?f.call(h,d,p):f,p==null)break e;d=pt({},d,p);break e;case 2:Os=!0}}i.callback!==null&&i.lane!==0&&(t.flags|=64,p=s.effects,p===null?s.effects=[i]:p.push(i))}else h={eventTime:h,lane:p,tag:i.tag,payload:i.payload,callback:i.callback,next:null},c===null?(l=c=h,u=d):c=c.next=h,a|=p;if(i=i.next,i===null){if(i=s.shared.pending,i===null)break;p=i,i=p.next,p.next=null,s.lastBaseUpdate=p,s.shared.pending=null}}while(1);if(c===null&&(u=d),s.baseState=u,s.firstBaseUpdate=l,s.lastBaseUpdate=c,e=s.shared.interleaved,e!==null){s=e;do a|=s.lane,s=s.next;while(s!==e)}else o===null&&(s.shared.lanes=0);sa|=a,t.lanes=a,t.memoizedState=d}}function ab(t,e,n){if(t=e.effects,e.effects=null,t!==null)for(e=0;e<t.length;e++){var r=t[e],s=r.callback;if(s!==null){if(r.callback=null,r=n,typeof s!="function")throw Error(J(191,s));s.call(r)}}}var t$=new JS.Component().refs;function ix(t,e,n,r){e=t.memoizedState,n=n(r,e),n=n==null?e:pt({},e,n),t.memoizedState=n,t.lanes===0&&(t.updateQueue.baseState=n)}var Hf={isMounted:function(t){return(t=t._reactInternals)?xa(t)===t:!1},enqueueSetState:function(t,e,n){t=t._reactInternals;var r=un(),s=Zs(t),o=ms(r,s);o.payload=e,n!=null&&(o.callback=n),e=Ys(t,o,s),e!==null&&(Er(e,t,s,r),gh(e,t,s))},enqueueReplaceState:function(t,e,n){t=t._reactInternals;var r=un(),s=Zs(t),o=ms(r,s);o.tag=1,o.payload=e,n!=null&&(o.callback=n),e=Ys(t,o,s),e!==null&&(Er(e,t,s,r),gh(e,t,s))},enqueueForceUpdate:function(t,e){t=t._reactInternals;var n=un(),r=Zs(t),s=ms(n,r);s.tag=2,e!=null&&(s.callback=e),e=Ys(t,s,r),e!==null&&(Er(e,t,r,n),gh(e,t,r))}};function ib(t,e,n,r,s,o,a){return t=t.stateNode,typeof t.shouldComponentUpdate=="function"?t.shouldComponentUpdate(r,o,a):e.prototype&&e.prototype.isPureReactComponent?!Gl(n,r)||!Gl(s,o):!0}function n$(t,e,n){var r=!1,s=ro,o=e.contextType;return typeof o=="object"&&o!==null?o=pr(o):(s=Nn(e)?ta:nn.current,r=e.contextTypes,o=(r=r!=null)?mi(t,s):ro),e=new e(n,o),t.memoizedState=e.state!==null&&e.state!==void 0?e.state:null,e.updater=Hf,t.stateNode=e,e._reactInternals=t,r&&(t=t.stateNode,t.__reactInternalMemoizedUnmaskedChildContext=s,t.__reactInternalMemoizedMaskedChildContext=o),e}function ub(t,e,n,r){t=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(n,r),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(n,r),e.state!==t&&Hf.enqueueReplaceState(e,e.state,null)}function ux(t,e,n,r){var s=t.stateNode;s.props=n,s.state=t.memoizedState,s.refs=t$,t1(t);var o=e.contextType;typeof o=="object"&&o!==null?s.context=pr(o):(o=Nn(e)?ta:nn.current,s.context=mi(t,o)),s.state=t.memoizedState,o=e.getDerivedStateFromProps,typeof o=="function"&&(ix(t,e,o,n),s.state=t.memoizedState),typeof e.getDerivedStateFromProps=="function"||typeof s.getSnapshotBeforeUpdate=="function"||typeof s.UNSAFE_componentWillMount!="function"&&typeof s.componentWillMount!="function"||(e=s.state,typeof s.componentWillMount=="function"&&s.componentWillMount(),typeof s.UNSAFE_componentWillMount=="function"&&s.UNSAFE_componentWillMount(),e!==s.state&&Hf.enqueueReplaceState(s,s.state,null),Xh(t,n,s,r),s.state=t.memoizedState),typeof s.componentDidMount=="function"&&(t.flags|=4194308)}function cl(t,e,n){if(t=n.ref,t!==null&&typeof t!="function"&&typeof t!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(J(309));var r=n.stateNode}if(!r)throw Error(J(147,t));var s=r,o=""+t;return e!==null&&e.ref!==null&&typeof e.ref=="function"&&e.ref._stringRef===o?e.ref:(e=function(a){var i=s.refs;i===t$&&(i=s.refs={}),a===null?delete i[o]:i[o]=a},e._stringRef=o,e)}if(typeof t!="string")throw Error(J(284));if(!n._owner)throw Error(J(290,t))}return t}function jp(t,e){throw t=Object.prototype.toString.call(e),Error(J(31,t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t))}function lb(t){var e=t._init;return e(t._payload)}function r$(t){function e(g,x){if(t){var w=g.deletions;w===null?(g.deletions=[x],g.flags|=16):w.push(x)}}function n(g,x){if(!t)return null;for(;x!==null;)e(g,x),x=x.sibling;return null}function r(g,x){for(g=new Map;x!==null;)x.key!==null?g.set(x.key,x):g.set(x.index,x),x=x.sibling;return g}function s(g,x){return g=Js(g,x),g.index=0,g.sibling=null,g}function o(g,x,w){return g.index=w,t?(w=g.alternate,w!==null?(w=w.index,w<x?(g.flags|=2,x):w):(g.flags|=2,x)):(g.flags|=1048576,x)}function a(g){return t&&g.alternate===null&&(g.flags|=2),g}function i(g,x,w,v){return x===null||x.tag!==6?(x=ly(w,g.mode,v),x.return=g,x):(x=s(x,w),x.return=g,x)}function u(g,x,w,v){var b=w.type;return b===Ha?c(g,x,w.props.children,v,w.key):x!==null&&(x.elementType===b||typeof b=="object"&&b!==null&&b.$$typeof===As&&lb(b)===x.type)?(v=s(x,w.props),v.ref=cl(g,x,w),v.return=g,v):(v=Ch(w.type,w.key,w.props,null,g.mode,v),v.ref=cl(g,x,w),v.return=g,v)}function l(g,x,w,v){return x===null||x.tag!==4||x.stateNode.containerInfo!==w.containerInfo||x.stateNode.implementation!==w.implementation?(x=cy(w,g.mode,v),x.return=g,x):(x=s(x,w.children||[]),x.return=g,x)}function c(g,x,w,v,b){return x===null||x.tag!==7?(x=Xo(w,g.mode,v,b),x.return=g,x):(x=s(x,w),x.return=g,x)}function d(g,x,w){if(typeof x=="string"&&x!==""||typeof x=="number")return x=ly(""+x,g.mode,w),x.return=g,x;if(typeof x=="object"&&x!==null){switch(x.$$typeof){case Op:return w=Ch(x.type,x.key,x.props,null,g.mode,w),w.ref=cl(g,null,x),w.return=g,w;case Ga:return x=cy(x,g.mode,w),x.return=g,x;case As:var v=x._init;return d(g,v(x._payload),w)}if(gl(x)||ol(x))return x=Xo(x,g.mode,w,null),x.return=g,x;jp(g,x)}return null}function p(g,x,w,v){var b=x!==null?x.key:null;if(typeof w=="string"&&w!==""||typeof w=="number")return b!==null?null:i(g,x,""+w,v);if(typeof w=="object"&&w!==null){switch(w.$$typeof){case Op:return w.key===b?u(g,x,w,v):null;case Ga:return w.key===b?l(g,x,w,v):null;case As:return b=w._init,p(g,x,b(w._payload),v)}if(gl(w)||ol(w))return b!==null?null:c(g,x,w,v,null);jp(g,w)}return null}function h(g,x,w,v,b){if(typeof v=="string"&&v!==""||typeof v=="number")return g=g.get(w)||null,i(x,g,""+v,b);if(typeof v=="object"&&v!==null){switch(v.$$typeof){case Op:return g=g.get(v.key===null?w:v.key)||null,u(x,g,v,b);case Ga:return g=g.get(v.key===null?w:v.key)||null,l(x,g,v,b);case As:var S=v._init;return h(g,x,w,S(v._payload),b)}if(gl(v)||ol(v))return g=g.get(w)||null,c(x,g,v,b,null);jp(x,v)}return null}function f(g,x,w,v){for(var b=null,S=null,$=x,N=x=0,E=null;$!==null&&N<w.length;N++){$.index>N?(E=$,$=null):E=$.sibling;var R=p(g,$,w[N],v);if(R===null){$===null&&($=E);break}t&&$&&R.alternate===null&&e(g,$),x=o(R,x,N),S===null?b=R:S.sibling=R,S=R,$=E}if(N===w.length)return n(g,$),at&&Ro(g,N),b;if($===null){for(;N<w.length;N++)$=d(g,w[N],v),$!==null&&(x=o($,x,N),S===null?b=$:S.sibling=$,S=$);return at&&Ro(g,N),b}for($=r(g,$);N<w.length;N++)E=h($,g,N,w[N],v),E!==null&&(t&&E.alternate!==null&&$.delete(E.key===null?N:E.key),x=o(E,x,N),S===null?b=E:S.sibling=E,S=E);return t&&$.forEach(function(F){return e(g,F)}),at&&Ro(g,N),b}function m(g,x,w,v){var b=ol(w);if(typeof b!="function")throw Error(J(150));if(w=b.call(w),w==null)throw Error(J(151));for(var S=b=null,$=x,N=x=0,E=null,R=w.next();$!==null&&!R.done;N++,R=w.next()){$.index>N?(E=$,$=null):E=$.sibling;var F=p(g,$,R.value,v);if(F===null){$===null&&($=E);break}t&&$&&F.alternate===null&&e(g,$),x=o(F,x,N),S===null?b=F:S.sibling=F,S=F,$=E}if(R.done)return n(g,$),at&&Ro(g,N),b;if($===null){for(;!R.done;N++,R=w.next())R=d(g,R.value,v),R!==null&&(x=o(R,x,N),S===null?b=R:S.sibling=R,S=R);return at&&Ro(g,N),b}for($=r(g,$);!R.done;N++,R=w.next())R=h($,g,N,R.value,v),R!==null&&(t&&R.alternate!==null&&$.delete(R.key===null?N:R.key),x=o(R,x,N),S===null?b=R:S.sibling=R,S=R);return t&&$.forEach(function(B){return e(g,B)}),at&&Ro(g,N),b}function y(g,x,w,v){if(typeof w=="object"&&w!==null&&w.type===Ha&&w.key===null&&(w=w.props.children),typeof w=="object"&&w!==null){switch(w.$$typeof){case Op:e:{for(var b=w.key,S=x;S!==null;){if(S.key===b){if(b=w.type,b===Ha){if(S.tag===7){n(g,S.sibling),x=s(S,w.props.children),x.return=g,g=x;break e}}else if(S.elementType===b||typeof b=="object"&&b!==null&&b.$$typeof===As&&lb(b)===S.type){n(g,S.sibling),x=s(S,w.props),x.ref=cl(g,S,w),x.return=g,g=x;break e}n(g,S);break}else e(g,S);S=S.sibling}w.type===Ha?(x=Xo(w.props.children,g.mode,v,w.key),x.return=g,g=x):(v=Ch(w.type,w.key,w.props,null,g.mode,v),v.ref=cl(g,x,w),v.return=g,g=v)}return a(g);case Ga:e:{for(S=w.key;x!==null;){if(x.key===S)if(x.tag===4&&x.stateNode.containerInfo===w.containerInfo&&x.stateNode.implementation===w.implementation){n(g,x.sibling),x=s(x,w.children||[]),x.return=g,g=x;break e}else{n(g,x);break}else e(g,x);x=x.sibling}x=cy(w,g.mode,v),x.return=g,g=x}return a(g);case As:return S=w._init,y(g,x,S(w._payload),v)}if(gl(w))return f(g,x,w,v);if(ol(w))return m(g,x,w,v);jp(g,w)}return typeof w=="string"&&w!==""||typeof w=="number"?(w=""+w,x!==null&&x.tag===6?(n(g,x.sibling),x=s(x,w),x.return=g,g=x):(n(g,x),x=ly(w,g.mode,v),x.return=g,g=x),a(g)):n(g,x)}return y}var yi=r$(!0),s$=r$(!1),Ec={},Yr=mo(Ec),ql=mo(Ec),Xl=mo(Ec);function Wo(t){if(t===Ec)throw Error(J(174));return t}function n1(t,e){switch(Je(Xl,e),Je(ql,t),Je(Yr,Ec),t=e.nodeType,t){case 9:case 11:e=(e=e.documentElement)?e.namespaceURI:My(null,"");break;default:t=t===8?e.parentNode:e,e=t.namespaceURI||null,t=t.tagName,e=My(e,t)}rt(Yr),Je(Yr,e)}function xi(){rt(Yr),rt(ql),rt(Xl)}function o$(t){Wo(Xl.current);var e=Wo(Yr.current),n=My(e,t.type);e!==n&&(Je(ql,t),Je(Yr,n))}function r1(t){ql.current===t&&(rt(Yr),rt(ql))}var lt=mo(0);function Yh(t){for(var e=t;e!==null;){if(e.tag===13){var n=e.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}var ry=[];function s1(){for(var t=0;t<ry.length;t++)ry[t]._workInProgressVersionPrimary=null;ry.length=0}var yh=Ns.ReactCurrentDispatcher,sy=Ns.ReactCurrentBatchConfig,ra=0,dt=null,It=null,At=null,Qh=!1,_l=!1,Yl=0,uP=0;function qt(){throw Error(J(321))}function o1(t,e){if(e===null)return!1;for(var n=0;n<e.length&&n<t.length;n++)if(!Or(t[n],e[n]))return!1;return!0}function a1(t,e,n,r,s,o){if(ra=o,dt=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,yh.current=t===null||t.memoizedState===null?pP:hP,t=n(r,s),_l){o=0;do{if(_l=!1,Yl=0,25<=o)throw Error(J(301));o+=1,At=It=null,e.updateQueue=null,yh.current=fP,t=n(r,s)}while(_l)}if(yh.current=Zh,e=It!==null&&It.next!==null,ra=0,At=It=dt=null,Qh=!1,e)throw Error(J(300));return t}function i1(){var t=Yl!==0;return Yl=0,t}function Hr(){var t={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return At===null?dt.memoizedState=At=t:At=At.next=t,At}function hr(){if(It===null){var t=dt.alternate;t=t!==null?t.memoizedState:null}else t=It.next;var e=At===null?dt.memoizedState:At.next;if(e!==null)At=e,It=t;else{if(t===null)throw Error(J(310));It=t,t={memoizedState:It.memoizedState,baseState:It.baseState,baseQueue:It.baseQueue,queue:It.queue,next:null},At===null?dt.memoizedState=At=t:At=At.next=t}return At}function Ql(t,e){return typeof e=="function"?e(t):e}function oy(t){var e=hr(),n=e.queue;if(n===null)throw Error(J(311));n.lastRenderedReducer=t;var r=It,s=r.baseQueue,o=n.pending;if(o!==null){if(s!==null){var a=s.next;s.next=o.next,o.next=a}r.baseQueue=s=o,n.pending=null}if(s!==null){o=s.next,r=r.baseState;var i=a=null,u=null,l=o;do{var c=l.lane;if((ra&c)===c)u!==null&&(u=u.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),r=l.hasEagerState?l.eagerState:t(r,l.action);else{var d={lane:c,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null};u===null?(i=u=d,a=r):u=u.next=d,dt.lanes|=c,sa|=c}l=l.next}while(l!==null&&l!==o);u===null?a=r:u.next=i,Or(r,e.memoizedState)||($n=!0),e.memoizedState=r,e.baseState=a,e.baseQueue=u,n.lastRenderedState=r}if(t=n.interleaved,t!==null){s=t;do o=s.lane,dt.lanes|=o,sa|=o,s=s.next;while(s!==t)}else s===null&&(n.lanes=0);return[e.memoizedState,n.dispatch]}function ay(t){var e=hr(),n=e.queue;if(n===null)throw Error(J(311));n.lastRenderedReducer=t;var r=n.dispatch,s=n.pending,o=e.memoizedState;if(s!==null){n.pending=null;var a=s=s.next;do o=t(o,a.action),a=a.next;while(a!==s);Or(o,e.memoizedState)||($n=!0),e.memoizedState=o,e.baseQueue===null&&(e.baseState=o),n.lastRenderedState=o}return[o,r]}function a$(){}function i$(t,e){var n=dt,r=hr(),s=e(),o=!Or(r.memoizedState,s);if(o&&(r.memoizedState=s,$n=!0),r=r.queue,u1(c$.bind(null,n,r,t),[t]),r.getSnapshot!==e||o||At!==null&&At.memoizedState.tag&1){if(n.flags|=2048,Zl(9,l$.bind(null,n,r,s,e),void 0,null),Lt===null)throw Error(J(349));(ra&30)!==0||u$(n,e,s)}return s}function u$(t,e,n){t.flags|=16384,t={getSnapshot:e,value:n},e=dt.updateQueue,e===null?(e={lastEffect:null,stores:null},dt.updateQueue=e,e.stores=[t]):(n=e.stores,n===null?e.stores=[t]:n.push(t))}function l$(t,e,n,r){e.value=n,e.getSnapshot=r,d$(e)&&p$(t)}function c$(t,e,n){return n(function(){d$(e)&&p$(t)})}function d$(t){var e=t.getSnapshot;t=t.value;try{var n=e();return!Or(t,n)}catch{return!0}}function p$(t){var e=bs(t,1);e!==null&&Er(e,t,1,-1)}function cb(t){var e=Hr();return typeof t=="function"&&(t=t()),e.memoizedState=e.baseState=t,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ql,lastRenderedState:t},e.queue=t,t=t.dispatch=dP.bind(null,dt,t),[e.memoizedState,t]}function Zl(t,e,n,r){return t={tag:t,create:e,destroy:n,deps:r,next:null},e=dt.updateQueue,e===null?(e={lastEffect:null,stores:null},dt.updateQueue=e,e.lastEffect=t.next=t):(n=e.lastEffect,n===null?e.lastEffect=t.next=t:(r=n.next,n.next=t,t.next=r,e.lastEffect=t)),t}function h$(){return hr().memoizedState}function xh(t,e,n,r){var s=Hr();dt.flags|=t,s.memoizedState=Zl(1|e,n,void 0,r===void 0?null:r)}function jf(t,e,n,r){var s=hr();r=r===void 0?null:r;var o=void 0;if(It!==null){var a=It.memoizedState;if(o=a.destroy,r!==null&&o1(r,a.deps)){s.memoizedState=Zl(e,n,o,r);return}}dt.flags|=t,s.memoizedState=Zl(1|e,n,o,r)}function db(t,e){return xh(8390656,8,t,e)}function u1(t,e){return jf(2048,8,t,e)}function f$(t,e){return jf(4,2,t,e)}function m$(t,e){return jf(4,4,t,e)}function g$(t,e){if(typeof e=="function")return t=t(),e(t),function(){e(null)};if(e!=null)return t=t(),e.current=t,function(){e.current=null}}function y$(t,e,n){return n=n!=null?n.concat([t]):null,jf(4,4,g$.bind(null,e,t),n)}function l1(){}function x$(t,e){var n=hr();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&o1(e,r[1])?r[0]:(n.memoizedState=[t,e],t)}function w$(t,e){var n=hr();e=e===void 0?null:e;var r=n.memoizedState;return r!==null&&e!==null&&o1(e,r[1])?r[0]:(t=t(),n.memoizedState=[t,e],t)}function v$(t,e,n){return(ra&21)===0?(t.baseState&&(t.baseState=!1,$n=!0),t.memoizedState=n):(Or(n,e)||(n=S2(),dt.lanes|=n,sa|=n,t.baseState=!0),e)}function lP(t,e){var n=Ve;Ve=n!==0&&4>n?n:4,t(!0);var r=sy.transition;sy.transition={};try{t(!1),e()}finally{Ve=n,sy.transition=r}}function b$(){return hr().memoizedState}function cP(t,e,n){var r=Zs(t);if(n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},C$(t))S$(e,n);else if(n=J2(t,e,n,r),n!==null){var s=un();Er(n,t,r,s),$$(n,e,r)}}function dP(t,e,n){var r=Zs(t),s={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(C$(t))S$(e,s);else{var o=t.alternate;if(t.lanes===0&&(o===null||o.lanes===0)&&(o=e.lastRenderedReducer,o!==null))try{var a=e.lastRenderedState,i=o(a,n);if(s.hasEagerState=!0,s.eagerState=i,Or(i,a)){var u=e.interleaved;u===null?(s.next=s,e1(e)):(s.next=u.next,u.next=s),e.interleaved=s;return}}catch{}finally{}n=J2(t,e,s,r),n!==null&&(s=un(),Er(n,t,r,s),$$(n,e,r))}}function C$(t){var e=t.alternate;return t===dt||e!==null&&e===dt}function S$(t,e){_l=Qh=!0;var n=t.pending;n===null?e.next=e:(e.next=n.next,n.next=e),t.pending=e}function $$(t,e,n){if((n&4194240)!==0){var r=e.lanes;r&=t.pendingLanes,n|=r,e.lanes=n,M0(t,n)}}var Zh={readContext:pr,useCallback:qt,useContext:qt,useEffect:qt,useImperativeHandle:qt,useInsertionEffect:qt,useLayoutEffect:qt,useMemo:qt,useReducer:qt,useRef:qt,useState:qt,useDebugValue:qt,useDeferredValue:qt,useTransition:qt,useMutableSource:qt,useSyncExternalStore:qt,useId:qt,unstable_isNewReconciler:!1},pP={readContext:pr,useCallback:function(t,e){return Hr().memoizedState=[t,e===void 0?null:e],t},useContext:pr,useEffect:db,useImperativeHandle:function(t,e,n){return n=n!=null?n.concat([t]):null,xh(4194308,4,g$.bind(null,e,t),n)},useLayoutEffect:function(t,e){return xh(4194308,4,t,e)},useInsertionEffect:function(t,e){return xh(4,2,t,e)},useMemo:function(t,e){var n=Hr();return e=e===void 0?null:e,t=t(),n.memoizedState=[t,e],t},useReducer:function(t,e,n){var r=Hr();return e=n!==void 0?n(e):e,r.memoizedState=r.baseState=e,t={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:t,lastRenderedState:e},r.queue=t,t=t.dispatch=cP.bind(null,dt,t),[r.memoizedState,t]},useRef:function(t){var e=Hr();return t={current:t},e.memoizedState=t},useState:cb,useDebugValue:l1,useDeferredValue:function(t){return Hr().memoizedState=t},useTransition:function(){var t=cb(!1),e=t[0];return t=lP.bind(null,t[1]),Hr().memoizedState=t,[e,t]},useMutableSource:function(){},useSyncExternalStore:function(t,e,n){var r=dt,s=Hr();if(at){if(n===void 0)throw Error(J(407));n=n()}else{if(n=e(),Lt===null)throw Error(J(349));(ra&30)!==0||u$(r,e,n)}s.memoizedState=n;var o={value:n,getSnapshot:e};return s.queue=o,db(c$.bind(null,r,o,t),[t]),r.flags|=2048,Zl(9,l$.bind(null,r,o,n,e),void 0,null),n},useId:function(){var t=Hr(),e=Lt.identifierPrefix;if(at){var n=fs,r=hs;n=(r&~(1<<32-Tr(r)-1)).toString(32)+n,e=":"+e+"R"+n,n=Yl++,0<n&&(e+="H"+n.toString(32)),e+=":"}else n=uP++,e=":"+e+"r"+n.toString(32)+":";return t.memoizedState=e},unstable_isNewReconciler:!1},hP={readContext:pr,useCallback:x$,useContext:pr,useEffect:u1,useImperativeHandle:y$,useInsertionEffect:f$,useLayoutEffect:m$,useMemo:w$,useReducer:oy,useRef:h$,useState:function(){return oy(Ql)},useDebugValue:l1,useDeferredValue:function(t){var e=hr();return v$(e,It.memoizedState,t)},useTransition:function(){var t=oy(Ql)[0],e=hr().memoizedState;return[t,e]},useMutableSource:a$,useSyncExternalStore:i$,useId:b$,unstable_isNewReconciler:!1},fP={readContext:pr,useCallback:x$,useContext:pr,useEffect:u1,useImperativeHandle:y$,useInsertionEffect:f$,useLayoutEffect:m$,useMemo:w$,useReducer:ay,useRef:h$,useState:function(){return ay(Ql)},useDebugValue:l1,useDeferredValue:function(t){var e=hr();return It===null?e.memoizedState=t:v$(e,It.memoizedState,t)},useTransition:function(){var t=ay(Ql)[0],e=hr().memoizedState;return[t,e]},useMutableSource:a$,useSyncExternalStore:i$,useId:b$,unstable_isNewReconciler:!1};function wi(t,e){try{var n="",r=e;do n+=W_(r),r=r.return;while(r);var s=n}catch(o){s=`
Error generating stack: `+o.message+`
`+o.stack}return{value:t,source:e,stack:s,digest:null}}function iy(t,e,n){return{value:t,source:null,stack:n!=null?n:null,digest:e!=null?e:null}}function lx(t,e){try{console.error(e.value)}catch(n){setTimeout(function(){throw n})}}var mP=typeof WeakMap=="function"?WeakMap:Map;function k$(t,e,n){n=ms(-1,n),n.tag=3,n.payload={element:null};var r=e.value;return n.callback=function(){ef||(ef=!0,wx=r),lx(t,e)},n}function I$(t,e,n){n=ms(-1,n),n.tag=3;var r=t.type.getDerivedStateFromError;if(typeof r=="function"){var s=e.value;n.payload=function(){return r(s)},n.callback=function(){lx(t,e)}}var o=t.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){lx(t,e),typeof r!="function"&&(Qs===null?Qs=new Set([this]):Qs.add(this));var a=e.stack;this.componentDidCatch(e.value,{componentStack:a!==null?a:""})}),n}function pb(t,e,n){var r=t.pingCache;if(r===null){r=t.pingCache=new mP;var s=new Set;r.set(e,s)}else s=r.get(e),s===void 0&&(s=new Set,r.set(e,s));s.has(n)||(s.add(n),t=EP.bind(null,t,e,n),e.then(t,t))}function hb(t){do{var e;if((e=t.tag===13)&&(e=t.memoizedState,e=e!==null?e.dehydrated!==null:!0),e)return t;t=t.return}while(t!==null);return null}function fb(t,e,n,r,s){return(t.mode&1)===0?(t===e?t.flags|=65536:(t.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(e=ms(-1,1),e.tag=2,Ys(n,e,1))),n.lanes|=1),t):(t.flags|=65536,t.lanes=s,t)}var gP=Ns.ReactCurrentOwner,$n=!1;function an(t,e,n,r){e.child=t===null?s$(e,null,n,r):yi(e,t.child,n,r)}function mb(t,e,n,r,s){n=n.render;var o=e.ref;return ii(e,s),r=a1(t,e,n,r,o,s),n=i1(),t!==null&&!$n?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~s,Cs(t,e,s)):(at&&n&&q0(e),e.flags|=1,an(t,e,r,s),e.child)}function gb(t,e,n,r,s){if(t===null){var o=n.type;return typeof o=="function"&&!y1(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(e.tag=15,e.type=o,N$(t,e,o,r,s)):(t=Ch(n.type,null,r,e,e.mode,s),t.ref=e.ref,t.return=e,e.child=t)}if(o=t.child,(t.lanes&s)===0){var a=o.memoizedProps;if(n=n.compare,n=n!==null?n:Gl,n(a,r)&&t.ref===e.ref)return Cs(t,e,s)}return e.flags|=1,t=Js(o,r),t.ref=e.ref,t.return=e,e.child=t}function N$(t,e,n,r,s){if(t!==null){var o=t.memoizedProps;if(Gl(o,r)&&t.ref===e.ref)if($n=!1,e.pendingProps=r=o,(t.lanes&s)!==0)(t.flags&131072)!==0&&($n=!0);else return e.lanes=t.lanes,Cs(t,e,s)}return cx(t,e,n,r,s)}function T$(t,e,n){var r=e.pendingProps,s=r.children,o=t!==null?t.memoizedState:null;if(r.mode==="hidden")if((e.mode&1)===0)e.memoizedState={baseLanes:0,cachePool:null,transitions:null},Je(ti,Fn),Fn|=n;else{if((n&1073741824)===0)return t=o!==null?o.baseLanes|n:n,e.lanes=e.childLanes=1073741824,e.memoizedState={baseLanes:t,cachePool:null,transitions:null},e.updateQueue=null,Je(ti,Fn),Fn|=t,null;e.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,Je(ti,Fn),Fn|=r}else o!==null?(r=o.baseLanes|n,e.memoizedState=null):r=n,Je(ti,Fn),Fn|=r;return an(t,e,s,n),e.child}function E$(t,e){var n=e.ref;(t===null&&n!==null||t!==null&&t.ref!==n)&&(e.flags|=512,e.flags|=2097152)}function cx(t,e,n,r,s){var o=Nn(n)?ta:nn.current;return o=mi(e,o),ii(e,s),n=a1(t,e,n,r,o,s),r=i1(),t!==null&&!$n?(e.updateQueue=t.updateQueue,e.flags&=-2053,t.lanes&=~s,Cs(t,e,s)):(at&&r&&q0(e),e.flags|=1,an(t,e,n,s),e.child)}function yb(t,e,n,r,s){if(Nn(n)){var o=!0;Gh(e)}else o=!1;if(ii(e,s),e.stateNode===null)wh(t,e),n$(e,n,r),ux(e,n,r,s),r=!0;else if(t===null){var a=e.stateNode,i=e.memoizedProps;a.props=i;var u=a.context,l=n.contextType;typeof l=="object"&&l!==null?l=pr(l):(l=Nn(n)?ta:nn.current,l=mi(e,l));var c=n.getDerivedStateFromProps,d=typeof c=="function"||typeof a.getSnapshotBeforeUpdate=="function";d||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(i!==r||u!==l)&&ub(e,a,r,l),Os=!1;var p=e.memoizedState;a.state=p,Xh(e,r,a,s),u=e.memoizedState,i!==r||p!==u||In.current||Os?(typeof c=="function"&&(ix(e,n,c,r),u=e.memoizedState),(i=Os||ib(e,n,i,r,p,u,l))?(d||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount()),typeof a.componentDidMount=="function"&&(e.flags|=4194308)):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=r,e.memoizedState=u),a.props=r,a.state=u,a.context=l,r=i):(typeof a.componentDidMount=="function"&&(e.flags|=4194308),r=!1)}else{a=e.stateNode,e$(t,e),i=e.memoizedProps,l=e.type===e.elementType?i:vr(e.type,i),a.props=l,d=e.pendingProps,p=a.context,u=n.contextType,typeof u=="object"&&u!==null?u=pr(u):(u=Nn(n)?ta:nn.current,u=mi(e,u));var h=n.getDerivedStateFromProps;(c=typeof h=="function"||typeof a.getSnapshotBeforeUpdate=="function")||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(i!==d||p!==u)&&ub(e,a,r,u),Os=!1,p=e.memoizedState,a.state=p,Xh(e,r,a,s);var f=e.memoizedState;i!==d||p!==f||In.current||Os?(typeof h=="function"&&(ix(e,n,h,r),f=e.memoizedState),(l=Os||ib(e,n,l,r,p,f,u)||!1)?(c||typeof a.UNSAFE_componentWillUpdate!="function"&&typeof a.componentWillUpdate!="function"||(typeof a.componentWillUpdate=="function"&&a.componentWillUpdate(r,f,u),typeof a.UNSAFE_componentWillUpdate=="function"&&a.UNSAFE_componentWillUpdate(r,f,u)),typeof a.componentDidUpdate=="function"&&(e.flags|=4),typeof a.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof a.componentDidUpdate!="function"||i===t.memoizedProps&&p===t.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&p===t.memoizedState||(e.flags|=1024),e.memoizedProps=r,e.memoizedState=f),a.props=r,a.state=f,a.context=u,r=l):(typeof a.componentDidUpdate!="function"||i===t.memoizedProps&&p===t.memoizedState||(e.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||i===t.memoizedProps&&p===t.memoizedState||(e.flags|=1024),r=!1)}return dx(t,e,n,r,o,s)}function dx(t,e,n,r,s,o){E$(t,e);var a=(e.flags&128)!==0;if(!r&&!a)return s&&nb(e,n,!1),Cs(t,e,o);r=e.stateNode,gP.current=e;var i=a&&typeof n.getDerivedStateFromError!="function"?null:r.render();return e.flags|=1,t!==null&&a?(e.child=yi(e,t.child,null,o),e.child=yi(e,null,i,o)):an(t,e,i,o),e.memoizedState=r.state,s&&nb(e,n,!0),e.child}function R$(t){var e=t.stateNode;e.pendingContext?tb(t,e.pendingContext,e.pendingContext!==e.context):e.context&&tb(t,e.context,!1),n1(t,e.containerInfo)}function xb(t,e,n,r,s){return gi(),Y0(s),e.flags|=256,an(t,e,n,r),e.child}var px={dehydrated:null,treeContext:null,retryLane:0};function hx(t){return{baseLanes:t,cachePool:null,transitions:null}}function _$(t,e,n){var r=e.pendingProps,s=lt.current,o=!1,a=(e.flags&128)!==0,i;if((i=a)||(i=t!==null&&t.memoizedState===null?!1:(s&2)!==0),i?(o=!0,e.flags&=-129):(t===null||t.memoizedState!==null)&&(s|=1),Je(lt,s&1),t===null)return ox(e),t=e.memoizedState,t!==null&&(t=t.dehydrated,t!==null)?((e.mode&1)===0?e.lanes=1:t.data==="$!"?e.lanes=8:e.lanes=1073741824,null):(a=r.children,t=r.fallback,o?(r=e.mode,o=e.child,a={mode:"hidden",children:a},(r&1)===0&&o!==null?(o.childLanes=0,o.pendingProps=a):o=Xf(a,r,0,null),t=Xo(t,r,n,null),o.return=e,t.return=e,o.sibling=t,e.child=o,e.child.memoizedState=hx(n),e.memoizedState=px,t):c1(e,a));if(s=t.memoizedState,s!==null&&(i=s.dehydrated,i!==null))return yP(t,e,a,r,i,s,n);if(o){o=r.fallback,a=e.mode,s=t.child,i=s.sibling;var u={mode:"hidden",children:r.children};return(a&1)===0&&e.child!==s?(r=e.child,r.childLanes=0,r.pendingProps=u,e.deletions=null):(r=Js(s,u),r.subtreeFlags=s.subtreeFlags&14680064),i!==null?o=Js(i,o):(o=Xo(o,a,n,null),o.flags|=2),o.return=e,r.return=e,r.sibling=o,e.child=r,r=o,o=e.child,a=t.child.memoizedState,a=a===null?hx(n):{baseLanes:a.baseLanes|n,cachePool:null,transitions:a.transitions},o.memoizedState=a,o.childLanes=t.childLanes&~n,e.memoizedState=px,r}return o=t.child,t=o.sibling,r=Js(o,{mode:"visible",children:r.children}),(e.mode&1)===0&&(r.lanes=n),r.return=e,r.sibling=null,t!==null&&(n=e.deletions,n===null?(e.deletions=[t],e.flags|=16):n.push(t)),e.child=r,e.memoizedState=null,r}function c1(t,e){return e=Xf({mode:"visible",children:e},t.mode,0,null),e.return=t,t.child=e}function Kp(t,e,n,r){return r!==null&&Y0(r),yi(e,t.child,null,n),t=c1(e,e.pendingProps.children),t.flags|=2,e.memoizedState=null,t}function yP(t,e,n,r,s,o,a){if(n)return e.flags&256?(e.flags&=-257,r=iy(Error(J(422))),Kp(t,e,a,r)):e.memoizedState!==null?(e.child=t.child,e.flags|=128,null):(o=r.fallback,s=e.mode,r=Xf({mode:"visible",children:r.children},s,0,null),o=Xo(o,s,a,null),o.flags|=2,r.return=e,o.return=e,r.sibling=o,e.child=r,(e.mode&1)!==0&&yi(e,t.child,null,a),e.child.memoizedState=hx(a),e.memoizedState=px,o);if((e.mode&1)===0)return Kp(t,e,a,null);if(s.data==="$!"){if(r=s.nextSibling&&s.nextSibling.dataset,r)var i=r.dgst;return r=i,o=Error(J(419)),r=iy(o,r,void 0),Kp(t,e,a,r)}if(i=(a&t.childLanes)!==0,$n||i){if(r=Lt,r!==null){switch(a&-a){case 4:s=2;break;case 16:s=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:s=32;break;case 536870912:s=268435456;break;default:s=0}s=(s&(r.suspendedLanes|a))!==0?0:s,s!==0&&s!==o.retryLane&&(o.retryLane=s,bs(t,s),Er(r,t,s,-1))}return g1(),r=iy(Error(J(421))),Kp(t,e,a,r)}return s.data==="$?"?(e.flags|=128,e.child=t.child,e=RP.bind(null,t),s._reactRetry=e,null):(t=o.treeContext,Bn=Xs(s.nextSibling),Un=e,at=!0,Cr=null,t!==null&&(rr[sr++]=hs,rr[sr++]=fs,rr[sr++]=na,hs=t.id,fs=t.overflow,na=e),e=c1(e,r.children),e.flags|=4096,e)}function wb(t,e,n){t.lanes|=e;var r=t.alternate;r!==null&&(r.lanes|=e),ax(t.return,e,n)}function uy(t,e,n,r,s){var o=t.memoizedState;o===null?t.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:s}:(o.isBackwards=e,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=s)}function D$(t,e,n){var r=e.pendingProps,s=r.revealOrder,o=r.tail;if(an(t,e,r.children,n),r=lt.current,(r&2)!==0)r=r&1|2,e.flags|=128;else{if(t!==null&&(t.flags&128)!==0)e:for(t=e.child;t!==null;){if(t.tag===13)t.memoizedState!==null&&wb(t,n,e);else if(t.tag===19)wb(t,n,e);else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;t=t.return}t.sibling.return=t.return,t=t.sibling}r&=1}if(Je(lt,r),(e.mode&1)===0)e.memoizedState=null;else switch(s){case"forwards":for(n=e.child,s=null;n!==null;)t=n.alternate,t!==null&&Yh(t)===null&&(s=n),n=n.sibling;n=s,n===null?(s=e.child,e.child=null):(s=n.sibling,n.sibling=null),uy(e,!1,s,n,o);break;case"backwards":for(n=null,s=e.child,e.child=null;s!==null;){if(t=s.alternate,t!==null&&Yh(t)===null){e.child=s;break}t=s.sibling,s.sibling=n,n=s,s=t}uy(e,!0,n,null,o);break;case"together":uy(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function wh(t,e){(e.mode&1)===0&&t!==null&&(t.alternate=null,e.alternate=null,e.flags|=2)}function Cs(t,e,n){if(t!==null&&(e.dependencies=t.dependencies),sa|=e.lanes,(n&e.childLanes)===0)return null;if(t!==null&&e.child!==t.child)throw Error(J(153));if(e.child!==null){for(t=e.child,n=Js(t,t.pendingProps),e.child=n,n.return=e;t.sibling!==null;)t=t.sibling,n=n.sibling=Js(t,t.pendingProps),n.return=e;n.sibling=null}return e.child}function xP(t,e,n){switch(e.tag){case 3:R$(e),gi();break;case 5:o$(e);break;case 1:Nn(e.type)&&Gh(e);break;case 4:n1(e,e.stateNode.containerInfo);break;case 10:var r=e.type._context,s=e.memoizedProps.value;Je(Kh,r._currentValue),r._currentValue=s;break;case 13:if(r=e.memoizedState,r!==null)return r.dehydrated!==null?(Je(lt,lt.current&1),e.flags|=128,null):(n&e.child.childLanes)!==0?_$(t,e,n):(Je(lt,lt.current&1),t=Cs(t,e,n),t!==null?t.sibling:null);Je(lt,lt.current&1);break;case 19:if(r=(n&e.childLanes)!==0,(t.flags&128)!==0){if(r)return D$(t,e,n);e.flags|=128}if(s=e.memoizedState,s!==null&&(s.rendering=null,s.tail=null,s.lastEffect=null),Je(lt,lt.current),r)break;return null;case 22:case 23:return e.lanes=0,T$(t,e,n)}return Cs(t,e,n)}var P$,fx,A$,O$;P$=function(t,e){for(var n=e.child;n!==null;){if(n.tag===5||n.tag===6)t.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===e)break;for(;n.sibling===null;){if(n.return===null||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}};fx=function(){};A$=function(t,e,n,r){var s=t.memoizedProps;if(s!==r){t=e.stateNode,Wo(Yr.current);var o=null;switch(n){case"input":s=Fy(t,s),r=Fy(t,r),o=[];break;case"select":s=pt({},s,{value:void 0}),r=pt({},r,{value:void 0}),o=[];break;case"textarea":s=By(t,s),r=By(t,r),o=[];break;default:typeof s.onClick!="function"&&typeof r.onClick=="function"&&(t.onclick=Wh)}Vy(n,r);var a;n=null;for(l in s)if(!r.hasOwnProperty(l)&&s.hasOwnProperty(l)&&s[l]!=null)if(l==="style"){var i=s[l];for(a in i)i.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else l!=="dangerouslySetInnerHTML"&&l!=="children"&&l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&l!=="autoFocus"&&(Ll.hasOwnProperty(l)?o||(o=[]):(o=o||[]).push(l,null));for(l in r){var u=r[l];if(i=s!=null?s[l]:void 0,r.hasOwnProperty(l)&&u!==i&&(u!=null||i!=null))if(l==="style")if(i){for(a in i)!i.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in u)u.hasOwnProperty(a)&&i[a]!==u[a]&&(n||(n={}),n[a]=u[a])}else n||(o||(o=[]),o.push(l,n)),n=u;else l==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,i=i?i.__html:void 0,u!=null&&i!==u&&(o=o||[]).push(l,u)):l==="children"?typeof u!="string"&&typeof u!="number"||(o=o||[]).push(l,""+u):l!=="suppressContentEditableWarning"&&l!=="suppressHydrationWarning"&&(Ll.hasOwnProperty(l)?(u!=null&&l==="onScroll"&&nt("scroll",t),o||i===u||(o=[])):(o=o||[]).push(l,u))}n&&(o=o||[]).push("style",n);var l=o;(e.updateQueue=l)&&(e.flags|=4)}};O$=function(t,e,n,r){n!==r&&(e.flags|=4)};function dl(t,e){if(!at)switch(t.tailMode){case"hidden":e=t.tail;for(var n=null;e!==null;)e.alternate!==null&&(n=e),e=e.sibling;n===null?t.tail=null:n.sibling=null;break;case"collapsed":n=t.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?e||t.tail===null?t.tail=null:t.tail.sibling=null:r.sibling=null}}function Xt(t){var e=t.alternate!==null&&t.alternate.child===t.child,n=0,r=0;if(e)for(var s=t.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags&14680064,r|=s.flags&14680064,s.return=t,s=s.sibling;else for(s=t.child;s!==null;)n|=s.lanes|s.childLanes,r|=s.subtreeFlags,r|=s.flags,s.return=t,s=s.sibling;return t.subtreeFlags|=r,t.childLanes=n,e}function wP(t,e,n){var r=e.pendingProps;switch(X0(e),e.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Xt(e),null;case 1:return Nn(e.type)&&Uh(),Xt(e),null;case 3:return r=e.stateNode,xi(),rt(In),rt(nn),s1(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(t===null||t.child===null)&&(Hp(e)?e.flags|=4:t===null||t.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,Cr!==null&&(Cx(Cr),Cr=null))),fx(t,e),Xt(e),null;case 5:r1(e);var s=Wo(Xl.current);if(n=e.type,t!==null&&e.stateNode!=null)A$(t,e,n,r,s),t.ref!==e.ref&&(e.flags|=512,e.flags|=2097152);else{if(!r){if(e.stateNode===null)throw Error(J(166));return Xt(e),null}if(t=Wo(Yr.current),Hp(e)){r=e.stateNode,n=e.type;var o=e.memoizedProps;switch(r[Kr]=e,r[Kl]=o,t=(e.mode&1)!==0,n){case"dialog":nt("cancel",r),nt("close",r);break;case"iframe":case"object":case"embed":nt("load",r);break;case"video":case"audio":for(s=0;s<xl.length;s++)nt(xl[s],r);break;case"source":nt("error",r);break;case"img":case"image":case"link":nt("error",r),nt("load",r);break;case"details":nt("toggle",r);break;case"input":Tv(r,o),nt("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},nt("invalid",r);break;case"textarea":Rv(r,o),nt("invalid",r)}Vy(n,o),s=null;for(var a in o)if(o.hasOwnProperty(a)){var i=o[a];a==="children"?typeof i=="string"?r.textContent!==i&&(o.suppressHydrationWarning!==!0&&Gp(r.textContent,i,t),s=["children",i]):typeof i=="number"&&r.textContent!==""+i&&(o.suppressHydrationWarning!==!0&&Gp(r.textContent,i,t),s=["children",""+i]):Ll.hasOwnProperty(a)&&i!=null&&a==="onScroll"&&nt("scroll",r)}switch(n){case"input":Fp(r),Ev(r,o,!0);break;case"textarea":Fp(r),_v(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=Wh)}r=s,e.updateQueue=r,r!==null&&(e.flags|=4)}else{a=s.nodeType===9?s:s.ownerDocument,t==="http://www.w3.org/1999/xhtml"&&(t=u2(n)),t==="http://www.w3.org/1999/xhtml"?n==="script"?(t=a.createElement("div"),t.innerHTML="<script><\/script>",t=t.removeChild(t.firstChild)):typeof r.is=="string"?t=a.createElement(n,{is:r.is}):(t=a.createElement(n),n==="select"&&(a=t,r.multiple?a.multiple=!0:r.size&&(a.size=r.size))):t=a.createElementNS(t,n),t[Kr]=e,t[Kl]=r,P$(t,e,!1,!1),e.stateNode=t;e:{switch(a=Wy(n,r),n){case"dialog":nt("cancel",t),nt("close",t),s=r;break;case"iframe":case"object":case"embed":nt("load",t),s=r;break;case"video":case"audio":for(s=0;s<xl.length;s++)nt(xl[s],t);s=r;break;case"source":nt("error",t),s=r;break;case"img":case"image":case"link":nt("error",t),nt("load",t),s=r;break;case"details":nt("toggle",t),s=r;break;case"input":Tv(t,r),s=Fy(t,r),nt("invalid",t);break;case"option":s=r;break;case"select":t._wrapperState={wasMultiple:!!r.multiple},s=pt({},r,{value:void 0}),nt("invalid",t);break;case"textarea":Rv(t,r),s=By(t,r),nt("invalid",t);break;default:s=r}Vy(n,s),i=s;for(o in i)if(i.hasOwnProperty(o)){var u=i[o];o==="style"?d2(t,u):o==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,u!=null&&l2(t,u)):o==="children"?typeof u=="string"?(n!=="textarea"||u!=="")&&zl(t,u):typeof u=="number"&&zl(t,""+u):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(Ll.hasOwnProperty(o)?u!=null&&o==="onScroll"&&nt("scroll",t):u!=null&&A0(t,o,u,a))}switch(n){case"input":Fp(t),Ev(t,r,!1);break;case"textarea":Fp(t),_v(t);break;case"option":r.value!=null&&t.setAttribute("value",""+no(r.value));break;case"select":t.multiple=!!r.multiple,o=r.value,o!=null?ri(t,!!r.multiple,o,!1):r.defaultValue!=null&&ri(t,!!r.multiple,r.defaultValue,!0);break;default:typeof s.onClick=="function"&&(t.onclick=Wh)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(e.flags|=4)}e.ref!==null&&(e.flags|=512,e.flags|=2097152)}return Xt(e),null;case 6:if(t&&e.stateNode!=null)O$(t,e,t.memoizedProps,r);else{if(typeof r!="string"&&e.stateNode===null)throw Error(J(166));if(n=Wo(Xl.current),Wo(Yr.current),Hp(e)){if(r=e.stateNode,n=e.memoizedProps,r[Kr]=e,(o=r.nodeValue!==n)&&(t=Un,t!==null))switch(t.tag){case 3:Gp(r.nodeValue,n,(t.mode&1)!==0);break;case 5:t.memoizedProps.suppressHydrationWarning!==!0&&Gp(r.nodeValue,n,(t.mode&1)!==0)}o&&(e.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[Kr]=e,e.stateNode=r}return Xt(e),null;case 13:if(rt(lt),r=e.memoizedState,t===null||t.memoizedState!==null&&t.memoizedState.dehydrated!==null){if(at&&Bn!==null&&(e.mode&1)!==0&&(e.flags&128)===0)Z2(),gi(),e.flags|=98560,o=!1;else if(o=Hp(e),r!==null&&r.dehydrated!==null){if(t===null){if(!o)throw Error(J(318));if(o=e.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(J(317));o[Kr]=e}else gi(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;Xt(e),o=!1}else Cr!==null&&(Cx(Cr),Cr=null),o=!0;if(!o)return e.flags&65536?e:null}return(e.flags&128)!==0?(e.lanes=n,e):(r=r!==null,r!==(t!==null&&t.memoizedState!==null)&&r&&(e.child.flags|=8192,(e.mode&1)!==0&&(t===null||(lt.current&1)!==0?Et===0&&(Et=3):g1())),e.updateQueue!==null&&(e.flags|=4),Xt(e),null);case 4:return xi(),fx(t,e),t===null&&Hl(e.stateNode.containerInfo),Xt(e),null;case 10:return J0(e.type._context),Xt(e),null;case 17:return Nn(e.type)&&Uh(),Xt(e),null;case 19:if(rt(lt),o=e.memoizedState,o===null)return Xt(e),null;if(r=(e.flags&128)!==0,a=o.rendering,a===null)if(r)dl(o,!1);else{if(Et!==0||t!==null&&(t.flags&128)!==0)for(t=e.child;t!==null;){if(a=Yh(t),a!==null){for(e.flags|=128,dl(o,!1),r=a.updateQueue,r!==null&&(e.updateQueue=r,e.flags|=4),e.subtreeFlags=0,r=n,n=e.child;n!==null;)o=n,t=r,o.flags&=14680066,a=o.alternate,a===null?(o.childLanes=0,o.lanes=t,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=a.childLanes,o.lanes=a.lanes,o.child=a.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=a.memoizedProps,o.memoizedState=a.memoizedState,o.updateQueue=a.updateQueue,o.type=a.type,t=a.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),n=n.sibling;return Je(lt,lt.current&1|2),e.child}t=t.sibling}o.tail!==null&&gt()>vi&&(e.flags|=128,r=!0,dl(o,!1),e.lanes=4194304)}else{if(!r)if(t=Yh(a),t!==null){if(e.flags|=128,r=!0,n=t.updateQueue,n!==null&&(e.updateQueue=n,e.flags|=4),dl(o,!0),o.tail===null&&o.tailMode==="hidden"&&!a.alternate&&!at)return Xt(e),null}else 2*gt()-o.renderingStartTime>vi&&n!==1073741824&&(e.flags|=128,r=!0,dl(o,!1),e.lanes=4194304);o.isBackwards?(a.sibling=e.child,e.child=a):(n=o.last,n!==null?n.sibling=a:e.child=a,o.last=a)}return o.tail!==null?(e=o.tail,o.rendering=e,o.tail=e.sibling,o.renderingStartTime=gt(),e.sibling=null,n=lt.current,Je(lt,r?n&1|2:n&1),e):(Xt(e),null);case 22:case 23:return m1(),r=e.memoizedState!==null,t!==null&&t.memoizedState!==null!==r&&(e.flags|=8192),r&&(e.mode&1)!==0?(Fn&1073741824)!==0&&(Xt(e),e.subtreeFlags&6&&(e.flags|=8192)):Xt(e),null;case 24:return null;case 25:return null}throw Error(J(156,e.tag))}function vP(t,e){switch(X0(e),e.tag){case 1:return Nn(e.type)&&Uh(),t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 3:return xi(),rt(In),rt(nn),s1(),t=e.flags,(t&65536)!==0&&(t&128)===0?(e.flags=t&-65537|128,e):null;case 5:return r1(e),null;case 13:if(rt(lt),t=e.memoizedState,t!==null&&t.dehydrated!==null){if(e.alternate===null)throw Error(J(340));gi()}return t=e.flags,t&65536?(e.flags=t&-65537|128,e):null;case 19:return rt(lt),null;case 4:return xi(),null;case 10:return J0(e.type._context),null;case 22:case 23:return m1(),null;case 24:return null;default:return null}}var qp=!1,Qt=!1,bP=typeof WeakSet=="function"?WeakSet:Set,ce=null;function ei(t,e){var n=t.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){ht(t,e,r)}else n.current=null}function mx(t,e,n){try{n()}catch(r){ht(t,e,r)}}var vb=!1;function CP(t,e){if(Zy=Bh,t=B2(),K0(t)){if("selectionStart"in t)var n={start:t.selectionStart,end:t.selectionEnd};else e:{n=(n=t.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var s=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var a=0,i=-1,u=-1,l=0,c=0,d=t,p=null;t:for(;;){for(var h;d!==n||s!==0&&d.nodeType!==3||(i=a+s),d!==o||r!==0&&d.nodeType!==3||(u=a+r),d.nodeType===3&&(a+=d.nodeValue.length),(h=d.firstChild)!==null;)p=d,d=h;for(;;){if(d===t)break t;if(p===n&&++l===s&&(i=a),p===o&&++c===r&&(u=a),(h=d.nextSibling)!==null)break;d=p,p=d.parentNode}d=h}n=i===-1||u===-1?null:{start:i,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(Jy={focusedElem:t,selectionRange:n},Bh=!1,ce=e;ce!==null;)if(e=ce,t=e.child,(e.subtreeFlags&1028)!==0&&t!==null)t.return=e,ce=t;else for(;ce!==null;){e=ce;try{var f=e.alternate;if((e.flags&1024)!==0)switch(e.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var m=f.memoizedProps,y=f.memoizedState,g=e.stateNode,x=g.getSnapshotBeforeUpdate(e.elementType===e.type?m:vr(e.type,m),y);g.__reactInternalSnapshotBeforeUpdate=x}break;case 3:var w=e.stateNode.containerInfo;w.nodeType===1?w.textContent="":w.nodeType===9&&w.documentElement&&w.removeChild(w.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(J(163))}}catch(v){ht(e,e.return,v)}if(t=e.sibling,t!==null){t.return=e.return,ce=t;break}ce=e.return}return f=vb,vb=!1,f}function Dl(t,e,n){var r=e.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var s=r=r.next;do{if((s.tag&t)===t){var o=s.destroy;s.destroy=void 0,o!==void 0&&mx(e,n,o)}s=s.next}while(s!==r)}}function Kf(t,e){if(e=e.updateQueue,e=e!==null?e.lastEffect:null,e!==null){var n=e=e.next;do{if((n.tag&t)===t){var r=n.create;n.destroy=r()}n=n.next}while(n!==e)}}function gx(t){var e=t.ref;if(e!==null){var n=t.stateNode;switch(t.tag){case 5:t=n;break;default:t=n}typeof e=="function"?e(t):e.current=t}}function F$(t){var e=t.alternate;e!==null&&(t.alternate=null,F$(e)),t.child=null,t.deletions=null,t.sibling=null,t.tag===5&&(e=t.stateNode,e!==null&&(delete e[Kr],delete e[Kl],delete e[nx],delete e[sP],delete e[oP])),t.stateNode=null,t.return=null,t.dependencies=null,t.memoizedProps=null,t.memoizedState=null,t.pendingProps=null,t.stateNode=null,t.updateQueue=null}function L$(t){return t.tag===5||t.tag===3||t.tag===4}function bb(t){e:for(;;){for(;t.sibling===null;){if(t.return===null||L$(t.return))return null;t=t.return}for(t.sibling.return=t.return,t=t.sibling;t.tag!==5&&t.tag!==6&&t.tag!==18;){if(t.flags&2||t.child===null||t.tag===4)continue e;t.child.return=t,t=t.child}if(!(t.flags&2))return t.stateNode}}function yx(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.nodeType===8?n.parentNode.insertBefore(t,e):n.insertBefore(t,e):(n.nodeType===8?(e=n.parentNode,e.insertBefore(t,n)):(e=n,e.appendChild(t)),n=n._reactRootContainer,n!=null||e.onclick!==null||(e.onclick=Wh));else if(r!==4&&(t=t.child,t!==null))for(yx(t,e,n),t=t.sibling;t!==null;)yx(t,e,n),t=t.sibling}function xx(t,e,n){var r=t.tag;if(r===5||r===6)t=t.stateNode,e?n.insertBefore(t,e):n.appendChild(t);else if(r!==4&&(t=t.child,t!==null))for(xx(t,e,n),t=t.sibling;t!==null;)xx(t,e,n),t=t.sibling}var Wt=null,br=!1;function Ps(t,e,n){for(n=n.child;n!==null;)z$(t,e,n),n=n.sibling}function z$(t,e,n){if(Xr&&typeof Xr.onCommitFiberUnmount=="function")try{Xr.onCommitFiberUnmount(Bf,n)}catch{}switch(n.tag){case 5:Qt||ei(n,e);case 6:var r=Wt,s=br;Wt=null,Ps(t,e,n),Wt=r,br=s,Wt!==null&&(br?(t=Wt,n=n.stateNode,t.nodeType===8?t.parentNode.removeChild(n):t.removeChild(n)):Wt.removeChild(n.stateNode));break;case 18:Wt!==null&&(br?(t=Wt,n=n.stateNode,t.nodeType===8?ty(t.parentNode,n):t.nodeType===1&&ty(t,n),Wl(t)):ty(Wt,n.stateNode));break;case 4:r=Wt,s=br,Wt=n.stateNode.containerInfo,br=!0,Ps(t,e,n),Wt=r,br=s;break;case 0:case 11:case 14:case 15:if(!Qt&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){s=r=r.next;do{var o=s,a=o.destroy;o=o.tag,a!==void 0&&((o&2)!==0||(o&4)!==0)&&mx(n,e,a),s=s.next}while(s!==r)}Ps(t,e,n);break;case 1:if(!Qt&&(ei(n,e),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(i){ht(n,e,i)}Ps(t,e,n);break;case 21:Ps(t,e,n);break;case 22:n.mode&1?(Qt=(r=Qt)||n.memoizedState!==null,Ps(t,e,n),Qt=r):Ps(t,e,n);break;default:Ps(t,e,n)}}function Cb(t){var e=t.updateQueue;if(e!==null){t.updateQueue=null;var n=t.stateNode;n===null&&(n=t.stateNode=new bP),e.forEach(function(r){var s=_P.bind(null,t,r);n.has(r)||(n.add(r),r.then(s,s))})}}function wr(t,e){var n=e.deletions;if(n!==null)for(var r=0;r<n.length;r++){var s=n[r];try{var o=t,a=e,i=a;e:for(;i!==null;){switch(i.tag){case 5:Wt=i.stateNode,br=!1;break e;case 3:Wt=i.stateNode.containerInfo,br=!0;break e;case 4:Wt=i.stateNode.containerInfo,br=!0;break e}i=i.return}if(Wt===null)throw Error(J(160));z$(o,a,s),Wt=null,br=!1;var u=s.alternate;u!==null&&(u.return=null),s.return=null}catch(l){ht(s,e,l)}}if(e.subtreeFlags&12854)for(e=e.child;e!==null;)B$(e,t),e=e.sibling}function B$(t,e){var n=t.alternate,r=t.flags;switch(t.tag){case 0:case 11:case 14:case 15:if(wr(e,t),Gr(t),r&4){try{Dl(3,t,t.return),Kf(3,t)}catch(m){ht(t,t.return,m)}try{Dl(5,t,t.return)}catch(m){ht(t,t.return,m)}}break;case 1:wr(e,t),Gr(t),r&512&&n!==null&&ei(n,n.return);break;case 5:if(wr(e,t),Gr(t),r&512&&n!==null&&ei(n,n.return),t.flags&32){var s=t.stateNode;try{zl(s,"")}catch(m){ht(t,t.return,m)}}if(r&4&&(s=t.stateNode,s!=null)){var o=t.memoizedProps,a=n!==null?n.memoizedProps:o,i=t.type,u=t.updateQueue;if(t.updateQueue=null,u!==null)try{i==="input"&&o.type==="radio"&&o.name!=null&&a2(s,o),Wy(i,a);var l=Wy(i,o);for(a=0;a<u.length;a+=2){var c=u[a],d=u[a+1];c==="style"?d2(s,d):c==="dangerouslySetInnerHTML"?l2(s,d):c==="children"?zl(s,d):A0(s,c,d,l)}switch(i){case"input":Ly(s,o);break;case"textarea":i2(s,o);break;case"select":var p=s._wrapperState.wasMultiple;s._wrapperState.wasMultiple=!!o.multiple;var h=o.value;h!=null?ri(s,!!o.multiple,h,!1):p!==!!o.multiple&&(o.defaultValue!=null?ri(s,!!o.multiple,o.defaultValue,!0):ri(s,!!o.multiple,o.multiple?[]:"",!1))}s[Kl]=o}catch(m){ht(t,t.return,m)}}break;case 6:if(wr(e,t),Gr(t),r&4){if(t.stateNode===null)throw Error(J(162));s=t.stateNode,o=t.memoizedProps;try{s.nodeValue=o}catch(m){ht(t,t.return,m)}}break;case 3:if(wr(e,t),Gr(t),r&4&&n!==null&&n.memoizedState.isDehydrated)try{Wl(e.containerInfo)}catch(m){ht(t,t.return,m)}break;case 4:wr(e,t),Gr(t);break;case 13:wr(e,t),Gr(t),s=t.child,s.flags&8192&&(o=s.memoizedState!==null,s.stateNode.isHidden=o,!o||s.alternate!==null&&s.alternate.memoizedState!==null||(h1=gt())),r&4&&Cb(t);break;case 22:if(c=n!==null&&n.memoizedState!==null,t.mode&1?(Qt=(l=Qt)||c,wr(e,t),Qt=l):wr(e,t),Gr(t),r&8192){if(l=t.memoizedState!==null,(t.stateNode.isHidden=l)&&!c&&(t.mode&1)!==0)for(ce=t,c=t.child;c!==null;){for(d=ce=c;ce!==null;){switch(p=ce,h=p.child,p.tag){case 0:case 11:case 14:case 15:Dl(4,p,p.return);break;case 1:ei(p,p.return);var f=p.stateNode;if(typeof f.componentWillUnmount=="function"){r=p,n=p.return;try{e=r,f.props=e.memoizedProps,f.state=e.memoizedState,f.componentWillUnmount()}catch(m){ht(r,n,m)}}break;case 5:ei(p,p.return);break;case 22:if(p.memoizedState!==null){$b(d);continue}}h!==null?(h.return=p,ce=h):$b(d)}c=c.sibling}e:for(c=null,d=t;;){if(d.tag===5){if(c===null){c=d;try{s=d.stateNode,l?(o=s.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(i=d.stateNode,u=d.memoizedProps.style,a=u!=null&&u.hasOwnProperty("display")?u.display:null,i.style.display=c2("display",a))}catch(m){ht(t,t.return,m)}}}else if(d.tag===6){if(c===null)try{d.stateNode.nodeValue=l?"":d.memoizedProps}catch(m){ht(t,t.return,m)}}else if((d.tag!==22&&d.tag!==23||d.memoizedState===null||d===t)&&d.child!==null){d.child.return=d,d=d.child;continue}if(d===t)break e;for(;d.sibling===null;){if(d.return===null||d.return===t)break e;c===d&&(c=null),d=d.return}c===d&&(c=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:wr(e,t),Gr(t),r&4&&Cb(t);break;case 21:break;default:wr(e,t),Gr(t)}}function Gr(t){var e=t.flags;if(e&2){try{e:{for(var n=t.return;n!==null;){if(L$(n)){var r=n;break e}n=n.return}throw Error(J(160))}switch(r.tag){case 5:var s=r.stateNode;r.flags&32&&(zl(s,""),r.flags&=-33);var o=bb(t);xx(t,o,s);break;case 3:case 4:var a=r.stateNode.containerInfo,i=bb(t);yx(t,i,a);break;default:throw Error(J(161))}}catch(u){ht(t,t.return,u)}t.flags&=-3}e&4096&&(t.flags&=-4097)}function SP(t,e,n){ce=t,M$(t)}function M$(t,e,n){for(var r=(t.mode&1)!==0;ce!==null;){var s=ce,o=s.child;if(s.tag===22&&r){var a=s.memoizedState!==null||qp;if(!a){var i=s.alternate,u=i!==null&&i.memoizedState!==null||Qt;i=qp;var l=Qt;if(qp=a,(Qt=u)&&!l)for(ce=s;ce!==null;)a=ce,u=a.child,a.tag===22&&a.memoizedState!==null?kb(s):u!==null?(u.return=a,ce=u):kb(s);for(;o!==null;)ce=o,M$(o),o=o.sibling;ce=s,qp=i,Qt=l}Sb(t)}else(s.subtreeFlags&8772)!==0&&o!==null?(o.return=s,ce=o):Sb(t)}}function Sb(t){for(;ce!==null;){var e=ce;if((e.flags&8772)!==0){var n=e.alternate;try{if((e.flags&8772)!==0)switch(e.tag){case 0:case 11:case 15:Qt||Kf(5,e);break;case 1:var r=e.stateNode;if(e.flags&4&&!Qt)if(n===null)r.componentDidMount();else{var s=e.elementType===e.type?n.memoizedProps:vr(e.type,n.memoizedProps);r.componentDidUpdate(s,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=e.updateQueue;o!==null&&ab(e,o,r);break;case 3:var a=e.updateQueue;if(a!==null){if(n=null,e.child!==null)switch(e.child.tag){case 5:n=e.child.stateNode;break;case 1:n=e.child.stateNode}ab(e,a,n)}break;case 5:var i=e.stateNode;if(n===null&&e.flags&4){n=i;var u=e.memoizedProps;switch(e.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(e.memoizedState===null){var l=e.alternate;if(l!==null){var c=l.memoizedState;if(c!==null){var d=c.dehydrated;d!==null&&Wl(d)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(J(163))}Qt||e.flags&512&&gx(e)}catch(p){ht(e,e.return,p)}}if(e===t){ce=null;break}if(n=e.sibling,n!==null){n.return=e.return,ce=n;break}ce=e.return}}function $b(t){for(;ce!==null;){var e=ce;if(e===t){ce=null;break}var n=e.sibling;if(n!==null){n.return=e.return,ce=n;break}ce=e.return}}function kb(t){for(;ce!==null;){var e=ce;try{switch(e.tag){case 0:case 11:case 15:var n=e.return;try{Kf(4,e)}catch(u){ht(e,n,u)}break;case 1:var r=e.stateNode;if(typeof r.componentDidMount=="function"){var s=e.return;try{r.componentDidMount()}catch(u){ht(e,s,u)}}var o=e.return;try{gx(e)}catch(u){ht(e,o,u)}break;case 5:var a=e.return;try{gx(e)}catch(u){ht(e,a,u)}}}catch(u){ht(e,e.return,u)}if(e===t){ce=null;break}var i=e.sibling;if(i!==null){i.return=e.return,ce=i;break}ce=e.return}}var $P=Math.ceil,Jh=Ns.ReactCurrentDispatcher,d1=Ns.ReactCurrentOwner,cr=Ns.ReactCurrentBatchConfig,Fe=0,Lt=null,Ct=null,Ut=0,Fn=0,ti=mo(0),Et=0,Jl=null,sa=0,qf=0,p1=0,Pl=null,Cn=null,h1=0,vi=1/0,as=null,ef=!1,wx=null,Qs=null,Xp=!1,Vs=null,tf=0,Al=0,vx=null,vh=-1,bh=0;function un(){return(Fe&6)!==0?gt():vh!==-1?vh:vh=gt()}function Zs(t){return(t.mode&1)===0?1:(Fe&2)!==0&&Ut!==0?Ut&-Ut:iP.transition!==null?(bh===0&&(bh=S2()),bh):(t=Ve,t!==0||(t=window.event,t=t===void 0?16:R2(t.type)),t)}function Er(t,e,n,r){if(50<Al)throw Al=0,vx=null,Error(J(185));Ic(t,n,r),((Fe&2)===0||t!==Lt)&&(t===Lt&&((Fe&2)===0&&(qf|=n),Et===4&&zs(t,Ut)),Tn(t,r),n===1&&Fe===0&&(e.mode&1)===0&&(vi=gt()+500,Gf&&go()))}function Tn(t,e){var n=t.callbackNode;iD(t,e);var r=zh(t,t===Lt?Ut:0);if(r===0)n!==null&&Av(n),t.callbackNode=null,t.callbackPriority=0;else if(e=r&-r,t.callbackPriority!==e){if(n!=null&&Av(n),e===1)t.tag===0?aP(Ib.bind(null,t)):X2(Ib.bind(null,t)),nP(function(){(Fe&6)===0&&go()}),n=null;else{switch($2(r)){case 1:n=B0;break;case 4:n=b2;break;case 16:n=Lh;break;case 536870912:n=C2;break;default:n=Lh}n=q$(n,V$.bind(null,t))}t.callbackPriority=e,t.callbackNode=n}}function V$(t,e){if(vh=-1,bh=0,(Fe&6)!==0)throw Error(J(327));var n=t.callbackNode;if(ui()&&t.callbackNode!==n)return null;var r=zh(t,t===Lt?Ut:0);if(r===0)return null;if((r&30)!==0||(r&t.expiredLanes)!==0||e)e=nf(t,r);else{e=r;var s=Fe;Fe|=2;var o=U$();(Lt!==t||Ut!==e)&&(as=null,vi=gt()+500,qo(t,e));do try{NP();break}catch(i){W$(t,i)}while(1);Z0(),Jh.current=o,Fe=s,Ct!==null?e=0:(Lt=null,Ut=0,e=Et)}if(e!==0){if(e===2&&(s=Ky(t),s!==0&&(r=s,e=bx(t,s))),e===1)throw n=Jl,qo(t,0),zs(t,r),Tn(t,gt()),n;if(e===6)zs(t,r);else{if(s=t.current.alternate,(r&30)===0&&!kP(s)&&(e=nf(t,r),e===2&&(o=Ky(t),o!==0&&(r=o,e=bx(t,o))),e===1))throw n=Jl,qo(t,0),zs(t,r),Tn(t,gt()),n;switch(t.finishedWork=s,t.finishedLanes=r,e){case 0:case 1:throw Error(J(345));case 2:_o(t,Cn,as);break;case 3:if(zs(t,r),(r&130023424)===r&&(e=h1+500-gt(),10<e)){if(zh(t,0)!==0)break;if(s=t.suspendedLanes,(s&r)!==r){un(),t.pingedLanes|=t.suspendedLanes&s;break}t.timeoutHandle=tx(_o.bind(null,t,Cn,as),e);break}_o(t,Cn,as);break;case 4:if(zs(t,r),(r&4194240)===r)break;for(e=t.eventTimes,s=-1;0<r;){var a=31-Tr(r);o=1<<a,a=e[a],a>s&&(s=a),r&=~o}if(r=s,r=gt()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*$P(r/1960))-r,10<r){t.timeoutHandle=tx(_o.bind(null,t,Cn,as),r);break}_o(t,Cn,as);break;case 5:_o(t,Cn,as);break;default:throw Error(J(329))}}}return Tn(t,gt()),t.callbackNode===n?V$.bind(null,t):null}function bx(t,e){var n=Pl;return t.current.memoizedState.isDehydrated&&(qo(t,e).flags|=256),t=nf(t,e),t!==2&&(e=Cn,Cn=n,e!==null&&Cx(e)),t}function Cx(t){Cn===null?Cn=t:Cn.push.apply(Cn,t)}function kP(t){for(var e=t;;){if(e.flags&16384){var n=e.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var s=n[r],o=s.getSnapshot;s=s.value;try{if(!Or(o(),s))return!1}catch{return!1}}}if(n=e.child,e.subtreeFlags&16384&&n!==null)n.return=e,e=n;else{if(e===t)break;for(;e.sibling===null;){if(e.return===null||e.return===t)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function zs(t,e){for(e&=~p1,e&=~qf,t.suspendedLanes|=e,t.pingedLanes&=~e,t=t.expirationTimes;0<e;){var n=31-Tr(e),r=1<<n;t[n]=-1,e&=~r}}function Ib(t){if((Fe&6)!==0)throw Error(J(327));ui();var e=zh(t,0);if((e&1)===0)return Tn(t,gt()),null;var n=nf(t,e);if(t.tag!==0&&n===2){var r=Ky(t);r!==0&&(e=r,n=bx(t,r))}if(n===1)throw n=Jl,qo(t,0),zs(t,e),Tn(t,gt()),n;if(n===6)throw Error(J(345));return t.finishedWork=t.current.alternate,t.finishedLanes=e,_o(t,Cn,as),Tn(t,gt()),null}function f1(t,e){var n=Fe;Fe|=1;try{return t(e)}finally{Fe=n,Fe===0&&(vi=gt()+500,Gf&&go())}}function oa(t){Vs!==null&&Vs.tag===0&&(Fe&6)===0&&ui();var e=Fe;Fe|=1;var n=cr.transition,r=Ve;try{if(cr.transition=null,Ve=1,t)return t()}finally{Ve=r,cr.transition=n,Fe=e,(Fe&6)===0&&go()}}function m1(){Fn=ti.current,rt(ti)}function qo(t,e){t.finishedWork=null,t.finishedLanes=0;var n=t.timeoutHandle;if(n!==-1&&(t.timeoutHandle=-1,tP(n)),Ct!==null)for(n=Ct.return;n!==null;){var r=n;switch(X0(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&Uh();break;case 3:xi(),rt(In),rt(nn),s1();break;case 5:r1(r);break;case 4:xi();break;case 13:rt(lt);break;case 19:rt(lt);break;case 10:J0(r.type._context);break;case 22:case 23:m1()}n=n.return}if(Lt=t,Ct=t=Js(t.current,null),Ut=Fn=e,Et=0,Jl=null,p1=qf=sa=0,Cn=Pl=null,Vo!==null){for(e=0;e<Vo.length;e++)if(n=Vo[e],r=n.interleaved,r!==null){n.interleaved=null;var s=r.next,o=n.pending;if(o!==null){var a=o.next;o.next=s,r.next=a}n.pending=r}Vo=null}return t}function W$(t,e){do{var n=Ct;try{if(Z0(),yh.current=Zh,Qh){for(var r=dt.memoizedState;r!==null;){var s=r.queue;s!==null&&(s.pending=null),r=r.next}Qh=!1}if(ra=0,At=It=dt=null,_l=!1,Yl=0,d1.current=null,n===null||n.return===null){Et=1,Jl=e,Ct=null;break}e:{var o=t,a=n.return,i=n,u=e;if(e=Ut,i.flags|=32768,u!==null&&typeof u=="object"&&typeof u.then=="function"){var l=u,c=i,d=c.tag;if((c.mode&1)===0&&(d===0||d===11||d===15)){var p=c.alternate;p?(c.updateQueue=p.updateQueue,c.memoizedState=p.memoizedState,c.lanes=p.lanes):(c.updateQueue=null,c.memoizedState=null)}var h=hb(a);if(h!==null){h.flags&=-257,fb(h,a,i,o,e),h.mode&1&&pb(o,l,e),e=h,u=l;var f=e.updateQueue;if(f===null){var m=new Set;m.add(u),e.updateQueue=m}else f.add(u);break e}else{if((e&1)===0){pb(o,l,e),g1();break e}u=Error(J(426))}}else if(at&&i.mode&1){var y=hb(a);if(y!==null){(y.flags&65536)===0&&(y.flags|=256),fb(y,a,i,o,e),Y0(wi(u,i));break e}}o=u=wi(u,i),Et!==4&&(Et=2),Pl===null?Pl=[o]:Pl.push(o),o=a;do{switch(o.tag){case 3:o.flags|=65536,e&=-e,o.lanes|=e;var g=k$(o,u,e);ob(o,g);break e;case 1:i=u;var x=o.type,w=o.stateNode;if((o.flags&128)===0&&(typeof x.getDerivedStateFromError=="function"||w!==null&&typeof w.componentDidCatch=="function"&&(Qs===null||!Qs.has(w)))){o.flags|=65536,e&=-e,o.lanes|=e;var v=I$(o,i,e);ob(o,v);break e}}o=o.return}while(o!==null)}H$(n)}catch(b){e=b,Ct===n&&n!==null&&(Ct=n=n.return);continue}break}while(1)}function U$(){var t=Jh.current;return Jh.current=Zh,t===null?Zh:t}function g1(){(Et===0||Et===3||Et===2)&&(Et=4),Lt===null||(sa&268435455)===0&&(qf&268435455)===0||zs(Lt,Ut)}function nf(t,e){var n=Fe;Fe|=2;var r=U$();(Lt!==t||Ut!==e)&&(as=null,qo(t,e));do try{IP();break}catch(s){W$(t,s)}while(1);if(Z0(),Fe=n,Jh.current=r,Ct!==null)throw Error(J(261));return Lt=null,Ut=0,Et}function IP(){for(;Ct!==null;)G$(Ct)}function NP(){for(;Ct!==null&&!Z_();)G$(Ct)}function G$(t){var e=K$(t.alternate,t,Fn);t.memoizedProps=t.pendingProps,e===null?H$(t):Ct=e,d1.current=null}function H$(t){var e=t;do{var n=e.alternate;if(t=e.return,(e.flags&32768)===0){if(n=wP(n,e,Fn),n!==null){Ct=n;return}}else{if(n=vP(n,e),n!==null){n.flags&=32767,Ct=n;return}if(t!==null)t.flags|=32768,t.subtreeFlags=0,t.deletions=null;else{Et=6,Ct=null;return}}if(e=e.sibling,e!==null){Ct=e;return}Ct=e=t}while(e!==null);Et===0&&(Et=5)}function _o(t,e,n){var r=Ve,s=cr.transition;try{cr.transition=null,Ve=1,TP(t,e,n,r)}finally{cr.transition=s,Ve=r}return null}function TP(t,e,n,r){do ui();while(Vs!==null);if((Fe&6)!==0)throw Error(J(327));n=t.finishedWork;var s=t.finishedLanes;if(n===null)return null;if(t.finishedWork=null,t.finishedLanes=0,n===t.current)throw Error(J(177));t.callbackNode=null,t.callbackPriority=0;var o=n.lanes|n.childLanes;if(uD(t,o),t===Lt&&(Ct=Lt=null,Ut=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||Xp||(Xp=!0,q$(Lh,function(){return ui(),null})),o=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||o){o=cr.transition,cr.transition=null;var a=Ve;Ve=1;var i=Fe;Fe|=4,d1.current=null,CP(t,n),B$(n,t),qD(Jy),Bh=!!Zy,Jy=Zy=null,t.current=n,SP(n),J_(),Fe=i,Ve=a,cr.transition=o}else t.current=n;if(Xp&&(Xp=!1,Vs=t,tf=s),o=t.pendingLanes,o===0&&(Qs=null),nD(n.stateNode),Tn(t,gt()),e!==null)for(r=t.onRecoverableError,n=0;n<e.length;n++)s=e[n],r(s.value,{componentStack:s.stack,digest:s.digest});if(ef)throw ef=!1,t=wx,wx=null,t;return(tf&1)!==0&&t.tag!==0&&ui(),o=t.pendingLanes,(o&1)!==0?t===vx?Al++:(Al=0,vx=t):Al=0,go(),null}function ui(){if(Vs!==null){var t=$2(tf),e=cr.transition,n=Ve;try{if(cr.transition=null,Ve=16>t?16:t,Vs===null)var r=!1;else{if(t=Vs,Vs=null,tf=0,(Fe&6)!==0)throw Error(J(331));var s=Fe;for(Fe|=4,ce=t.current;ce!==null;){var o=ce,a=o.child;if((ce.flags&16)!==0){var i=o.deletions;if(i!==null){for(var u=0;u<i.length;u++){var l=i[u];for(ce=l;ce!==null;){var c=ce;switch(c.tag){case 0:case 11:case 15:Dl(8,c,o)}var d=c.child;if(d!==null)d.return=c,ce=d;else for(;ce!==null;){c=ce;var p=c.sibling,h=c.return;if(F$(c),c===l){ce=null;break}if(p!==null){p.return=h,ce=p;break}ce=h}}}var f=o.alternate;if(f!==null){var m=f.child;if(m!==null){f.child=null;do{var y=m.sibling;m.sibling=null,m=y}while(m!==null)}}ce=o}}if((o.subtreeFlags&2064)!==0&&a!==null)a.return=o,ce=a;else e:for(;ce!==null;){if(o=ce,(o.flags&2048)!==0)switch(o.tag){case 0:case 11:case 15:Dl(9,o,o.return)}var g=o.sibling;if(g!==null){g.return=o.return,ce=g;break e}ce=o.return}}var x=t.current;for(ce=x;ce!==null;){a=ce;var w=a.child;if((a.subtreeFlags&2064)!==0&&w!==null)w.return=a,ce=w;else e:for(a=x;ce!==null;){if(i=ce,(i.flags&2048)!==0)try{switch(i.tag){case 0:case 11:case 15:Kf(9,i)}}catch(b){ht(i,i.return,b)}if(i===a){ce=null;break e}var v=i.sibling;if(v!==null){v.return=i.return,ce=v;break e}ce=i.return}}if(Fe=s,go(),Xr&&typeof Xr.onPostCommitFiberRoot=="function")try{Xr.onPostCommitFiberRoot(Bf,t)}catch{}r=!0}return r}finally{Ve=n,cr.transition=e}}return!1}function Nb(t,e,n){e=wi(n,e),e=k$(t,e,1),t=Ys(t,e,1),e=un(),t!==null&&(Ic(t,1,e),Tn(t,e))}function ht(t,e,n){if(t.tag===3)Nb(t,t,n);else for(;e!==null;){if(e.tag===3){Nb(e,t,n);break}else if(e.tag===1){var r=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Qs===null||!Qs.has(r))){t=wi(n,t),t=I$(e,t,1),e=Ys(e,t,1),t=un(),e!==null&&(Ic(e,1,t),Tn(e,t));break}}e=e.return}}function EP(t,e,n){var r=t.pingCache;r!==null&&r.delete(e),e=un(),t.pingedLanes|=t.suspendedLanes&n,Lt===t&&(Ut&n)===n&&(Et===4||Et===3&&(Ut&130023424)===Ut&&500>gt()-h1?qo(t,0):p1|=n),Tn(t,e)}function j$(t,e){e===0&&((t.mode&1)===0?e=1:(e=Bp,Bp<<=1,(Bp&130023424)===0&&(Bp=4194304)));var n=un();t=bs(t,e),t!==null&&(Ic(t,e,n),Tn(t,n))}function RP(t){var e=t.memoizedState,n=0;e!==null&&(n=e.retryLane),j$(t,n)}function _P(t,e){var n=0;switch(t.tag){case 13:var r=t.stateNode,s=t.memoizedState;s!==null&&(n=s.retryLane);break;case 19:r=t.stateNode;break;default:throw Error(J(314))}r!==null&&r.delete(e),j$(t,n)}var K$;K$=function(t,e,n){if(t!==null)if(t.memoizedProps!==e.pendingProps||In.current)$n=!0;else{if((t.lanes&n)===0&&(e.flags&128)===0)return $n=!1,xP(t,e,n);$n=(t.flags&131072)!==0}else $n=!1,at&&(e.flags&1048576)!==0&&Y2(e,jh,e.index);switch(e.lanes=0,e.tag){case 2:var r=e.type;wh(t,e),t=e.pendingProps;var s=mi(e,nn.current);ii(e,n),s=a1(null,e,r,t,s,n);var o=i1();return e.flags|=1,typeof s=="object"&&s!==null&&typeof s.render=="function"&&s.$$typeof===void 0?(e.tag=1,e.memoizedState=null,e.updateQueue=null,Nn(r)?(o=!0,Gh(e)):o=!1,e.memoizedState=s.state!==null&&s.state!==void 0?s.state:null,t1(e),s.updater=Hf,e.stateNode=s,s._reactInternals=e,ux(e,r,t,n),e=dx(null,e,r,!0,o,n)):(e.tag=0,at&&o&&q0(e),an(null,e,s,n),e=e.child),e;case 16:r=e.elementType;e:{switch(wh(t,e),t=e.pendingProps,s=r._init,r=s(r._payload),e.type=r,s=e.tag=PP(r),t=vr(r,t),s){case 0:e=cx(null,e,r,t,n);break e;case 1:e=yb(null,e,r,t,n);break e;case 11:e=mb(null,e,r,t,n);break e;case 14:e=gb(null,e,r,vr(r.type,t),n);break e}throw Error(J(306,r,""))}return e;case 0:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:vr(r,s),cx(t,e,r,s,n);case 1:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:vr(r,s),yb(t,e,r,s,n);case 3:e:{if(R$(e),t===null)throw Error(J(387));r=e.pendingProps,o=e.memoizedState,s=o.element,e$(t,e),Xh(e,r,null,n);var a=e.memoizedState;if(r=a.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},e.updateQueue.baseState=o,e.memoizedState=o,e.flags&256){s=wi(Error(J(423)),e),e=xb(t,e,r,n,s);break e}else if(r!==s){s=wi(Error(J(424)),e),e=xb(t,e,r,n,s);break e}else for(Bn=Xs(e.stateNode.containerInfo.firstChild),Un=e,at=!0,Cr=null,n=s$(e,null,r,n),e.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(gi(),r===s){e=Cs(t,e,n);break e}an(t,e,r,n)}e=e.child}return e;case 5:return o$(e),t===null&&ox(e),r=e.type,s=e.pendingProps,o=t!==null?t.memoizedProps:null,a=s.children,ex(r,s)?a=null:o!==null&&ex(r,o)&&(e.flags|=32),E$(t,e),an(t,e,a,n),e.child;case 6:return t===null&&ox(e),null;case 13:return _$(t,e,n);case 4:return n1(e,e.stateNode.containerInfo),r=e.pendingProps,t===null?e.child=yi(e,null,r,n):an(t,e,r,n),e.child;case 11:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:vr(r,s),mb(t,e,r,s,n);case 7:return an(t,e,e.pendingProps,n),e.child;case 8:return an(t,e,e.pendingProps.children,n),e.child;case 12:return an(t,e,e.pendingProps.children,n),e.child;case 10:e:{if(r=e.type._context,s=e.pendingProps,o=e.memoizedProps,a=s.value,Je(Kh,r._currentValue),r._currentValue=a,o!==null)if(Or(o.value,a)){if(o.children===s.children&&!In.current){e=Cs(t,e,n);break e}}else for(o=e.child,o!==null&&(o.return=e);o!==null;){var i=o.dependencies;if(i!==null){a=o.child;for(var u=i.firstContext;u!==null;){if(u.context===r){if(o.tag===1){u=ms(-1,n&-n),u.tag=2;var l=o.updateQueue;if(l!==null){l=l.shared;var c=l.pending;c===null?u.next=u:(u.next=c.next,c.next=u),l.pending=u}}o.lanes|=n,u=o.alternate,u!==null&&(u.lanes|=n),ax(o.return,n,e),i.lanes|=n;break}u=u.next}}else if(o.tag===10)a=o.type===e.type?null:o.child;else if(o.tag===18){if(a=o.return,a===null)throw Error(J(341));a.lanes|=n,i=a.alternate,i!==null&&(i.lanes|=n),ax(a,n,e),a=o.sibling}else a=o.child;if(a!==null)a.return=o;else for(a=o;a!==null;){if(a===e){a=null;break}if(o=a.sibling,o!==null){o.return=a.return,a=o;break}a=a.return}o=a}an(t,e,s.children,n),e=e.child}return e;case 9:return s=e.type,r=e.pendingProps.children,ii(e,n),s=pr(s),r=r(s),e.flags|=1,an(t,e,r,n),e.child;case 14:return r=e.type,s=vr(r,e.pendingProps),s=vr(r.type,s),gb(t,e,r,s,n);case 15:return N$(t,e,e.type,e.pendingProps,n);case 17:return r=e.type,s=e.pendingProps,s=e.elementType===r?s:vr(r,s),wh(t,e),e.tag=1,Nn(r)?(t=!0,Gh(e)):t=!1,ii(e,n),n$(e,r,s),ux(e,r,s,n),dx(null,e,r,!0,t,n);case 19:return D$(t,e,n);case 22:return T$(t,e,n)}throw Error(J(156,e.tag))};function q$(t,e){return v2(t,e)}function DP(t,e,n,r){this.tag=t,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function or(t,e,n,r){return new DP(t,e,n,r)}function y1(t){return t=t.prototype,!(!t||!t.isReactComponent)}function PP(t){if(typeof t=="function")return y1(t)?1:0;if(t!=null){if(t=t.$$typeof,t===F0)return 11;if(t===L0)return 14}return 2}function Js(t,e){var n=t.alternate;return n===null?(n=or(t.tag,e,t.key,t.mode),n.elementType=t.elementType,n.type=t.type,n.stateNode=t.stateNode,n.alternate=t,t.alternate=n):(n.pendingProps=e,n.type=t.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=t.flags&14680064,n.childLanes=t.childLanes,n.lanes=t.lanes,n.child=t.child,n.memoizedProps=t.memoizedProps,n.memoizedState=t.memoizedState,n.updateQueue=t.updateQueue,e=t.dependencies,n.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},n.sibling=t.sibling,n.index=t.index,n.ref=t.ref,n}function Ch(t,e,n,r,s,o){var a=2;if(r=t,typeof t=="function")y1(t)&&(a=1);else if(typeof t=="string")a=5;else e:switch(t){case Ha:return Xo(n.children,s,o,e);case O0:a=8,s|=8;break;case Dy:return t=or(12,n,e,s|2),t.elementType=Dy,t.lanes=o,t;case Py:return t=or(13,n,e,s),t.elementType=Py,t.lanes=o,t;case Ay:return t=or(19,n,e,s),t.elementType=Ay,t.lanes=o,t;case r2:return Xf(n,s,o,e);default:if(typeof t=="object"&&t!==null)switch(t.$$typeof){case t2:a=10;break e;case n2:a=9;break e;case F0:a=11;break e;case L0:a=14;break e;case As:a=16,r=null;break e}throw Error(J(130,t==null?t:typeof t,""))}return e=or(a,n,e,s),e.elementType=t,e.type=r,e.lanes=o,e}function Xo(t,e,n,r){return t=or(7,t,r,e),t.lanes=n,t}function Xf(t,e,n,r){return t=or(22,t,r,e),t.elementType=r2,t.lanes=n,t.stateNode={isHidden:!1},t}function ly(t,e,n){return t=or(6,t,null,e),t.lanes=n,t}function cy(t,e,n){return e=or(4,t.children!==null?t.children:[],t.key,e),e.lanes=n,e.stateNode={containerInfo:t.containerInfo,pendingChildren:null,implementation:t.implementation},e}function AP(t,e,n,r,s){this.tag=e,this.containerInfo=t,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Gg(0),this.expirationTimes=Gg(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Gg(0),this.identifierPrefix=r,this.onRecoverableError=s,this.mutableSourceEagerHydrationData=null}function x1(t,e,n,r,s,o,a,i,u){return t=new AP(t,e,n,i,u),e===1?(e=1,o===!0&&(e|=8)):e=0,o=or(3,null,null,e),t.current=o,o.stateNode=t,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},t1(o),t}function OP(t,e,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:Ga,key:r==null?null:""+r,children:t,containerInfo:e,implementation:n}}function X$(t){if(!t)return ro;t=t._reactInternals;e:{if(xa(t)!==t||t.tag!==1)throw Error(J(170));var e=t;do{switch(e.tag){case 3:e=e.stateNode.context;break e;case 1:if(Nn(e.type)){e=e.stateNode.__reactInternalMemoizedMergedChildContext;break e}}e=e.return}while(e!==null);throw Error(J(171))}if(t.tag===1){var n=t.type;if(Nn(n))return q2(t,n,e)}return e}function Y$(t,e,n,r,s,o,a,i,u){return t=x1(n,r,!0,t,s,o,a,i,u),t.context=X$(null),n=t.current,r=un(),s=Zs(n),o=ms(r,s),o.callback=e!=null?e:null,Ys(n,o,s),t.current.lanes=s,Ic(t,s,r),Tn(t,r),t}function Yf(t,e,n,r){var s=e.current,o=un(),a=Zs(s);return n=X$(n),e.context===null?e.context=n:e.pendingContext=n,e=ms(o,a),e.payload={element:t},r=r===void 0?null:r,r!==null&&(e.callback=r),t=Ys(s,e,a),t!==null&&(Er(t,s,a,o),gh(t,s,a)),a}function rf(t){if(t=t.current,!t.child)return null;switch(t.child.tag){case 5:return t.child.stateNode;default:return t.child.stateNode}}function Tb(t,e){if(t=t.memoizedState,t!==null&&t.dehydrated!==null){var n=t.retryLane;t.retryLane=n!==0&&n<e?n:e}}function w1(t,e){Tb(t,e),(t=t.alternate)&&Tb(t,e)}function FP(){return null}var Q$=typeof reportError=="function"?reportError:function(t){console.error(t)};function v1(t){this._internalRoot=t}Qf.prototype.render=v1.prototype.render=function(t){var e=this._internalRoot;if(e===null)throw Error(J(409));Yf(t,e,null,null)};Qf.prototype.unmount=v1.prototype.unmount=function(){var t=this._internalRoot;if(t!==null){this._internalRoot=null;var e=t.containerInfo;oa(function(){Yf(null,t,null,null)}),e[vs]=null}};function Qf(t){this._internalRoot=t}Qf.prototype.unstable_scheduleHydration=function(t){if(t){var e=N2();t={blockedOn:null,target:t,priority:e};for(var n=0;n<Ls.length&&e!==0&&e<Ls[n].priority;n++);Ls.splice(n,0,t),n===0&&E2(t)}};function b1(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)}function Zf(t){return!(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11&&(t.nodeType!==8||t.nodeValue!==" react-mount-point-unstable "))}function Eb(){}function LP(t,e,n,r,s){if(s){if(typeof r=="function"){var o=r;r=function(){var l=rf(a);o.call(l)}}var a=Y$(e,r,t,0,null,!1,!1,"",Eb);return t._reactRootContainer=a,t[vs]=a.current,Hl(t.nodeType===8?t.parentNode:t),oa(),a}for(;s=t.lastChild;)t.removeChild(s);if(typeof r=="function"){var i=r;r=function(){var l=rf(u);i.call(l)}}var u=x1(t,0,!1,null,null,!1,!1,"",Eb);return t._reactRootContainer=u,t[vs]=u.current,Hl(t.nodeType===8?t.parentNode:t),oa(function(){Yf(e,u,n,r)}),u}function Jf(t,e,n,r,s){var o=n._reactRootContainer;if(o){var a=o;if(typeof s=="function"){var i=s;s=function(){var u=rf(a);i.call(u)}}Yf(e,a,t,s)}else a=LP(n,e,t,s,r);return rf(a)}k2=function(t){switch(t.tag){case 3:var e=t.stateNode;if(e.current.memoizedState.isDehydrated){var n=yl(e.pendingLanes);n!==0&&(M0(e,n|1),Tn(e,gt()),(Fe&6)===0&&(vi=gt()+500,go()))}break;case 13:oa(function(){var r=bs(t,1);if(r!==null){var s=un();Er(r,t,1,s)}}),w1(t,1)}};V0=function(t){if(t.tag===13){var e=bs(t,134217728);if(e!==null){var n=un();Er(e,t,134217728,n)}w1(t,134217728)}};I2=function(t){if(t.tag===13){var e=Zs(t),n=bs(t,e);if(n!==null){var r=un();Er(n,t,e,r)}w1(t,e)}};N2=function(){return Ve};T2=function(t,e){var n=Ve;try{return Ve=t,e()}finally{Ve=n}};Gy=function(t,e,n){switch(e){case"input":if(Ly(t,n),e=n.name,n.type==="radio"&&e!=null){for(n=t;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+e)+'][type="radio"]'),e=0;e<n.length;e++){var r=n[e];if(r!==t&&r.form===t.form){var s=Uf(r);if(!s)throw Error(J(90));o2(r),Ly(r,s)}}}break;case"textarea":i2(t,n);break;case"select":e=n.value,e!=null&&ri(t,!!n.multiple,e,!1)}};f2=f1;m2=oa;var zP={usingClientEntryPoint:!1,Events:[Tc,Xa,Uf,p2,h2,f1]},pl={findFiberByHostInstance:Mo,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},BP={bundleType:pl.bundleType,version:pl.version,rendererPackageName:pl.rendererPackageName,rendererConfig:pl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Ns.ReactCurrentDispatcher,findHostInstanceByFiber:function(t){return t=x2(t),t===null?null:t.stateNode},findFiberByHostInstance:pl.findFiberByHostInstance||FP,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var Yp=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Yp.isDisabled&&Yp.supportsFiber)try{Bf=Yp.inject(BP),Xr=Yp}catch{}}qn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=zP;qn.createPortal=function(t,e){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!b1(e))throw Error(J(200));return OP(t,e,null,n)};qn.createRoot=function(t,e){if(!b1(t))throw Error(J(299));var n=!1,r="",s=Q$;return e!=null&&(e.unstable_strictMode===!0&&(n=!0),e.identifierPrefix!==void 0&&(r=e.identifierPrefix),e.onRecoverableError!==void 0&&(s=e.onRecoverableError)),e=x1(t,1,!1,null,null,n,!1,r,s),t[vs]=e.current,Hl(t.nodeType===8?t.parentNode:t),new v1(e)};qn.findDOMNode=function(t){if(t==null)return null;if(t.nodeType===1)return t;var e=t._reactInternals;if(e===void 0)throw typeof t.render=="function"?Error(J(188)):(t=Object.keys(t).join(","),Error(J(268,t)));return t=x2(e),t=t===null?null:t.stateNode,t};qn.flushSync=function(t){return oa(t)};qn.hydrate=function(t,e,n){if(!Zf(e))throw Error(J(200));return Jf(null,t,e,!0,n)};qn.hydrateRoot=function(t,e,n){if(!b1(t))throw Error(J(405));var r=n!=null&&n.hydratedSources||null,s=!1,o="",a=Q$;if(n!=null&&(n.unstable_strictMode===!0&&(s=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(a=n.onRecoverableError)),e=Y$(e,null,t,1,n!=null?n:null,s,!1,o,a),t[vs]=e.current,Hl(t),r)for(t=0;t<r.length;t++)n=r[t],s=n._getVersion,s=s(n._source),e.mutableSourceEagerHydrationData==null?e.mutableSourceEagerHydrationData=[n,s]:e.mutableSourceEagerHydrationData.push(n,s);return new Qf(e)};qn.render=function(t,e,n){if(!Zf(e))throw Error(J(200));return Jf(null,t,e,!1,n)};qn.unmountComponentAtNode=function(t){if(!Zf(t))throw Error(J(40));return t._reactRootContainer?(oa(function(){Jf(null,null,t,!1,function(){t._reactRootContainer=null,t[vs]=null})}),!0):!1};qn.unstable_batchedUpdates=f1;qn.unstable_renderSubtreeIntoContainer=function(t,e,n,r){if(!Zf(n))throw Error(J(200));if(t==null||t._reactInternals===void 0)throw Error(J(38));return Jf(t,e,n,!1,r)};qn.version="18.2.0-next-9e3b772b8-20220608";function Z$(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Z$)}catch(t){console.error(t)}}Z$(),YS.exports=qn;var Rb=YS.exports;Ry.createRoot=Rb.createRoot,Ry.hydrateRoot=Rb.hydrateRoot;/**
 * @remix-run/router v1.8.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function ec(){return ec=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},ec.apply(this,arguments)}var Ws;(function(t){t.Pop="POP",t.Push="PUSH",t.Replace="REPLACE"})(Ws||(Ws={}));const _b="popstate";function MP(t){t===void 0&&(t={});function e(s,o){let{pathname:a="/",search:i="",hash:u=""}=wa(s.location.hash.substr(1));return!a.startsWith("/")&&!a.startsWith(".")&&(a="/"+a),Sx("",{pathname:a,search:i,hash:u},o.state&&o.state.usr||null,o.state&&o.state.key||"default")}function n(s,o){let a=s.document.querySelector("base"),i="";if(a&&a.getAttribute("href")){let u=s.location.href,l=u.indexOf("#");i=l===-1?u:u.slice(0,l)}return i+"#"+(typeof o=="string"?o:sf(o))}function r(s,o){em(s.pathname.charAt(0)==="/","relative pathnames are not supported in hash history.push("+JSON.stringify(o)+")")}return WP(e,n,r,t)}function St(t,e){if(t===!1||t===null||typeof t=="undefined")throw new Error(e)}function em(t,e){if(!t){typeof console!="undefined"&&console.warn(e);try{throw new Error(e)}catch{}}}function VP(){return Math.random().toString(36).substr(2,8)}function Db(t,e){return{usr:t.state,key:t.key,idx:e}}function Sx(t,e,n,r){return n===void 0&&(n=null),ec({pathname:typeof t=="string"?t:t.pathname,search:"",hash:""},typeof e=="string"?wa(e):e,{state:n,key:e&&e.key||r||VP()})}function sf(t){let{pathname:e="/",search:n="",hash:r=""}=t;return n&&n!=="?"&&(e+=n.charAt(0)==="?"?n:"?"+n),r&&r!=="#"&&(e+=r.charAt(0)==="#"?r:"#"+r),e}function wa(t){let e={};if(t){let n=t.indexOf("#");n>=0&&(e.hash=t.substr(n),t=t.substr(0,n));let r=t.indexOf("?");r>=0&&(e.search=t.substr(r),t=t.substr(0,r)),t&&(e.pathname=t)}return e}function WP(t,e,n,r){r===void 0&&(r={});let{window:s=document.defaultView,v5Compat:o=!1}=r,a=s.history,i=Ws.Pop,u=null,l=c();l==null&&(l=0,a.replaceState(ec({},a.state,{idx:l}),""));function c(){return(a.state||{idx:null}).idx}function d(){i=Ws.Pop;let y=c(),g=y==null?null:y-l;l=y,u&&u({action:i,location:m.location,delta:g})}function p(y,g){i=Ws.Push;let x=Sx(m.location,y,g);n&&n(x,y),l=c()+1;let w=Db(x,l),v=m.createHref(x);try{a.pushState(w,"",v)}catch(b){if(b instanceof DOMException&&b.name==="DataCloneError")throw b;s.location.assign(v)}o&&u&&u({action:i,location:m.location,delta:1})}function h(y,g){i=Ws.Replace;let x=Sx(m.location,y,g);n&&n(x,y),l=c();let w=Db(x,l),v=m.createHref(x);a.replaceState(w,"",v),o&&u&&u({action:i,location:m.location,delta:0})}function f(y){let g=s.location.origin!=="null"?s.location.origin:s.location.href,x=typeof y=="string"?y:sf(y);return St(g,"No window.location.(origin|href) available to create URL for href: "+x),new URL(x,g)}let m={get action(){return i},get location(){return t(s,a)},listen(y){if(u)throw new Error("A history only accepts one active listener");return s.addEventListener(_b,d),u=y,()=>{s.removeEventListener(_b,d),u=null}},createHref(y){return e(s,y)},createURL:f,encodeLocation(y){let g=f(y);return{pathname:g.pathname,search:g.search,hash:g.hash}},push:p,replace:h,go(y){return a.go(y)}};return m}var Pb;(function(t){t.data="data",t.deferred="deferred",t.redirect="redirect",t.error="error"})(Pb||(Pb={}));function UP(t,e,n){n===void 0&&(n="/");let r=typeof e=="string"?wa(e):e,s=C1(r.pathname||"/",n);if(s==null)return null;let o=J$(t);GP(o);let a=null;for(let i=0;a==null&&i<o.length;++i)a=JP(o[i],nA(s));return a}function J$(t,e,n,r){e===void 0&&(e=[]),n===void 0&&(n=[]),r===void 0&&(r="");let s=(o,a,i)=>{let u={relativePath:i===void 0?o.path||"":i,caseSensitive:o.caseSensitive===!0,childrenIndex:a,route:o};u.relativePath.startsWith("/")&&(St(u.relativePath.startsWith(r),'Absolute route path "'+u.relativePath+'" nested under path '+('"'+r+'" is not valid. An absolute child route path ')+"must start with the combined path of all its parent routes."),u.relativePath=u.relativePath.slice(r.length));let l=eo([r,u.relativePath]),c=n.concat(u);o.children&&o.children.length>0&&(St(o.index!==!0,"Index routes must not have child routes. Please remove "+('all child routes from route path "'+l+'".')),J$(o.children,e,c,l)),!(o.path==null&&!o.index)&&e.push({path:l,score:QP(l,o.index),routesMeta:c})};return t.forEach((o,a)=>{var i;if(o.path===""||!((i=o.path)!=null&&i.includes("?")))s(o,a);else for(let u of ek(o.path))s(o,a,u)}),e}function ek(t){let e=t.split("/");if(e.length===0)return[];let[n,...r]=e,s=n.endsWith("?"),o=n.replace(/\?$/,"");if(r.length===0)return s?[o,""]:[o];let a=ek(r.join("/")),i=[];return i.push(...a.map(u=>u===""?o:[o,u].join("/"))),s&&i.push(...a),i.map(u=>t.startsWith("/")&&u===""?"/":u)}function GP(t){t.sort((e,n)=>e.score!==n.score?n.score-e.score:ZP(e.routesMeta.map(r=>r.childrenIndex),n.routesMeta.map(r=>r.childrenIndex)))}const HP=/^:\w+$/,jP=3,KP=2,qP=1,XP=10,YP=-2,Ab=t=>t==="*";function QP(t,e){let n=t.split("/"),r=n.length;return n.some(Ab)&&(r+=YP),e&&(r+=KP),n.filter(s=>!Ab(s)).reduce((s,o)=>s+(HP.test(o)?jP:o===""?qP:XP),r)}function ZP(t,e){return t.length===e.length&&t.slice(0,-1).every((r,s)=>r===e[s])?t[t.length-1]-e[e.length-1]:0}function JP(t,e){let{routesMeta:n}=t,r={},s="/",o=[];for(let a=0;a<n.length;++a){let i=n[a],u=a===n.length-1,l=s==="/"?e:e.slice(s.length)||"/",c=eA({path:i.relativePath,caseSensitive:i.caseSensitive,end:u},l);if(!c)return null;Object.assign(r,c.params);let d=i.route;o.push({params:r,pathname:eo([s,c.pathname]),pathnameBase:aA(eo([s,c.pathnameBase])),route:d}),c.pathnameBase!=="/"&&(s=eo([s,c.pathnameBase]))}return o}function eA(t,e){typeof t=="string"&&(t={path:t,caseSensitive:!1,end:!0});let[n,r]=tA(t.path,t.caseSensitive,t.end),s=e.match(n);if(!s)return null;let o=s[0],a=o.replace(/(.)\/+$/,"$1"),i=s.slice(1);return{params:r.reduce((l,c,d)=>{if(c==="*"){let p=i[d]||"";a=o.slice(0,o.length-p.length).replace(/(.)\/+$/,"$1")}return l[c]=rA(i[d]||"",c),l},{}),pathname:o,pathnameBase:a,pattern:t}}function tA(t,e,n){e===void 0&&(e=!1),n===void 0&&(n=!0),em(t==="*"||!t.endsWith("*")||t.endsWith("/*"),'Route path "'+t+'" will be treated as if it were '+('"'+t.replace(/\*$/,"/*")+'" because the `*` character must ')+"always follow a `/` in the pattern. To get rid of this warning, "+('please change the route path to "'+t.replace(/\*$/,"/*")+'".'));let r=[],s="^"+t.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^$?{}|()[\]]/g,"\\$&").replace(/\/:(\w+)/g,(a,i)=>(r.push(i),"/([^\\/]+)"));return t.endsWith("*")?(r.push("*"),s+=t==="*"||t==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?s+="\\/*$":t!==""&&t!=="/"&&(s+="(?:(?=\\/|$))"),[new RegExp(s,e?void 0:"i"),r]}function nA(t){try{return decodeURI(t)}catch(e){return em(!1,'The URL path "'+t+'" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent '+("encoding ("+e+").")),t}}function rA(t,e){try{return decodeURIComponent(t)}catch(n){return em(!1,'The value for the URL param "'+e+'" will not be decoded because'+(' the string "'+t+'" is a malformed URL segment. This is probably')+(" due to a bad percent encoding ("+n+").")),t}}function C1(t,e){if(e==="/")return t;if(!t.toLowerCase().startsWith(e.toLowerCase()))return null;let n=e.endsWith("/")?e.length-1:e.length,r=t.charAt(n);return r&&r!=="/"?null:t.slice(n)||"/"}function sA(t,e){e===void 0&&(e="/");let{pathname:n,search:r="",hash:s=""}=typeof t=="string"?wa(t):t;return{pathname:n?n.startsWith("/")?n:oA(n,e):e,search:iA(r),hash:uA(s)}}function oA(t,e){let n=e.replace(/\/+$/,"").split("/");return t.split("/").forEach(s=>{s===".."?n.length>1&&n.pop():s!=="."&&n.push(s)}),n.length>1?n.join("/"):"/"}function dy(t,e,n,r){return"Cannot include a '"+t+"' character in a manually specified "+("`to."+e+"` field ["+JSON.stringify(r)+"].  Please separate it out to the ")+("`to."+n+"` field. Alternatively you may provide the full path as ")+'a string in <Link to="..."> and the router will parse it for you.'}function tk(t){return t.filter((e,n)=>n===0||e.route.path&&e.route.path.length>0)}function nk(t,e,n,r){r===void 0&&(r=!1);let s;typeof t=="string"?s=wa(t):(s=ec({},t),St(!s.pathname||!s.pathname.includes("?"),dy("?","pathname","search",s)),St(!s.pathname||!s.pathname.includes("#"),dy("#","pathname","hash",s)),St(!s.search||!s.search.includes("#"),dy("#","search","hash",s)));let o=t===""||s.pathname==="",a=o?"/":s.pathname,i;if(r||a==null)i=n;else{let d=e.length-1;if(a.startsWith("..")){let p=a.split("/");for(;p[0]==="..";)p.shift(),d-=1;s.pathname=p.join("/")}i=d>=0?e[d]:"/"}let u=sA(s,i),l=a&&a!=="/"&&a.endsWith("/"),c=(o||a===".")&&n.endsWith("/");return!u.pathname.endsWith("/")&&(l||c)&&(u.pathname+="/"),u}const eo=t=>t.join("/").replace(/\/\/+/g,"/"),aA=t=>t.replace(/\/+$/,"").replace(/^\/*/,"/"),iA=t=>!t||t==="?"?"":t.startsWith("?")?t:"?"+t,uA=t=>!t||t==="#"?"":t.startsWith("#")?t:"#"+t;function lA(t){return t!=null&&typeof t.status=="number"&&typeof t.statusText=="string"&&typeof t.internal=="boolean"&&"data"in t}const cA=["post","put","patch","delete"];[...cA];/**
 * React Router v6.15.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function of(){return of=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},of.apply(this,arguments)}const S1=oe.exports.createContext(null),dA=oe.exports.createContext(null),Wi=oe.exports.createContext(null),tm=oe.exports.createContext(null),va=oe.exports.createContext({outlet:null,matches:[],isDataRoute:!1}),rk=oe.exports.createContext(null);function pA(t,e){let{relative:n}=e===void 0?{}:e;Rc()||St(!1);let{basename:r,navigator:s}=oe.exports.useContext(Wi),{hash:o,pathname:a,search:i}=ok(t,{relative:n}),u=a;return r!=="/"&&(u=a==="/"?r:eo([r,a])),s.createHref({pathname:u,search:i,hash:o})}function Rc(){return oe.exports.useContext(tm)!=null}function nm(){return Rc()||St(!1),oe.exports.useContext(tm).location}function sk(t){oe.exports.useContext(Wi).static||oe.exports.useLayoutEffect(t)}function hA(){let{isDataRoute:t}=oe.exports.useContext(va);return t?IA():fA()}function fA(){Rc()||St(!1);let t=oe.exports.useContext(S1),{basename:e,navigator:n}=oe.exports.useContext(Wi),{matches:r}=oe.exports.useContext(va),{pathname:s}=nm(),o=JSON.stringify(tk(r).map(u=>u.pathnameBase)),a=oe.exports.useRef(!1);return sk(()=>{a.current=!0}),oe.exports.useCallback(function(u,l){if(l===void 0&&(l={}),!a.current)return;if(typeof u=="number"){n.go(u);return}let c=nk(u,JSON.parse(o),s,l.relative==="path");t==null&&e!=="/"&&(c.pathname=c.pathname==="/"?e:eo([e,c.pathname])),(l.replace?n.replace:n.push)(c,l.state,l)},[e,n,o,s,t])}function ok(t,e){let{relative:n}=e===void 0?{}:e,{matches:r}=oe.exports.useContext(va),{pathname:s}=nm(),o=JSON.stringify(tk(r).map(a=>a.pathnameBase));return oe.exports.useMemo(()=>nk(t,JSON.parse(o),s,n==="path"),[t,o,s,n])}function mA(t,e){return gA(t,e)}function gA(t,e,n){Rc()||St(!1);let{navigator:r}=oe.exports.useContext(Wi),{matches:s}=oe.exports.useContext(va),o=s[s.length-1],a=o?o.params:{};o&&o.pathname;let i=o?o.pathnameBase:"/";o&&o.route;let u=nm(),l;if(e){var c;let m=typeof e=="string"?wa(e):e;i==="/"||((c=m.pathname)==null?void 0:c.startsWith(i))||St(!1),l=m}else l=u;let d=l.pathname||"/",p=i==="/"?d:d.slice(i.length)||"/",h=UP(t,{pathname:p}),f=bA(h&&h.map(m=>Object.assign({},m,{params:Object.assign({},a,m.params),pathname:eo([i,r.encodeLocation?r.encodeLocation(m.pathname).pathname:m.pathname]),pathnameBase:m.pathnameBase==="/"?i:eo([i,r.encodeLocation?r.encodeLocation(m.pathnameBase).pathname:m.pathnameBase])})),s,n);return e&&f?oe.exports.createElement(tm.Provider,{value:{location:of({pathname:"/",search:"",hash:"",state:null,key:"default"},l),navigationType:Ws.Pop}},f):f}function yA(){let t=kA(),e=lA(t)?t.status+" "+t.statusText:t instanceof Error?t.message:JSON.stringify(t),n=t instanceof Error?t.stack:null,s={padding:"0.5rem",backgroundColor:"rgba(200,200,200, 0.5)"},o=null;return oe.exports.createElement(oe.exports.Fragment,null,oe.exports.createElement("h2",null,"Unexpected Application Error!"),oe.exports.createElement("h3",{style:{fontStyle:"italic"}},e),n?oe.exports.createElement("pre",{style:s},n):null,o)}const xA=oe.exports.createElement(yA,null);class wA extends oe.exports.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,n){return n.location!==e.location||n.revalidation!=="idle"&&e.revalidation==="idle"?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error||n.error,location:n.location,revalidation:e.revalidation||n.revalidation}}componentDidCatch(e,n){console.error("React Router caught the following error during render",e,n)}render(){return this.state.error?oe.exports.createElement(va.Provider,{value:this.props.routeContext},oe.exports.createElement(rk.Provider,{value:this.state.error,children:this.props.component})):this.props.children}}function vA(t){let{routeContext:e,match:n,children:r}=t,s=oe.exports.useContext(S1);return s&&s.static&&s.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(s.staticContext._deepestRenderedBoundaryId=n.route.id),oe.exports.createElement(va.Provider,{value:e},r)}function bA(t,e,n){var r;if(e===void 0&&(e=[]),n===void 0&&(n=null),t==null){var s;if((s=n)!=null&&s.errors)t=n.matches;else return null}let o=t,a=(r=n)==null?void 0:r.errors;if(a!=null){let i=o.findIndex(u=>u.route.id&&(a==null?void 0:a[u.route.id]));i>=0||St(!1),o=o.slice(0,Math.min(o.length,i+1))}return o.reduceRight((i,u,l)=>{let c=u.route.id?a==null?void 0:a[u.route.id]:null,d=null;n&&(d=u.route.errorElement||xA);let p=e.concat(o.slice(0,l+1)),h=()=>{let f;return c?f=d:u.route.Component?f=oe.exports.createElement(u.route.Component,null):u.route.element?f=u.route.element:f=i,oe.exports.createElement(vA,{match:u,routeContext:{outlet:i,matches:p,isDataRoute:n!=null},children:f})};return n&&(u.route.ErrorBoundary||u.route.errorElement||l===0)?oe.exports.createElement(wA,{location:n.location,revalidation:n.revalidation,component:d,error:c,children:h(),routeContext:{outlet:null,matches:p,isDataRoute:!0}}):h()},null)}var ak=function(t){return t.UseBlocker="useBlocker",t.UseRevalidator="useRevalidator",t.UseNavigateStable="useNavigate",t}(ak||{}),af=function(t){return t.UseBlocker="useBlocker",t.UseLoaderData="useLoaderData",t.UseActionData="useActionData",t.UseRouteError="useRouteError",t.UseNavigation="useNavigation",t.UseRouteLoaderData="useRouteLoaderData",t.UseMatches="useMatches",t.UseRevalidator="useRevalidator",t.UseNavigateStable="useNavigate",t.UseRouteId="useRouteId",t}(af||{});function CA(t){let e=oe.exports.useContext(S1);return e||St(!1),e}function SA(t){let e=oe.exports.useContext(dA);return e||St(!1),e}function $A(t){let e=oe.exports.useContext(va);return e||St(!1),e}function ik(t){let e=$A(),n=e.matches[e.matches.length-1];return n.route.id||St(!1),n.route.id}function kA(){var t;let e=oe.exports.useContext(rk),n=SA(af.UseRouteError),r=ik(af.UseRouteError);return e||((t=n.errors)==null?void 0:t[r])}function IA(){let{router:t}=CA(ak.UseNavigateStable),e=ik(af.UseNavigateStable),n=oe.exports.useRef(!1);return sk(()=>{n.current=!0}),oe.exports.useCallback(function(s,o){o===void 0&&(o={}),n.current&&(typeof s=="number"?t.navigate(s):t.navigate(s,of({fromRouteId:e},o)))},[t,e])}const NA="startTransition";Ph[NA];function uk(t){St(!1)}function TA(t){let{basename:e="/",children:n=null,location:r,navigationType:s=Ws.Pop,navigator:o,static:a=!1}=t;Rc()&&St(!1);let i=e.replace(/^\/*/,"/"),u=oe.exports.useMemo(()=>({basename:i,navigator:o,static:a}),[i,o,a]);typeof r=="string"&&(r=wa(r));let{pathname:l="/",search:c="",hash:d="",state:p=null,key:h="default"}=r,f=oe.exports.useMemo(()=>{let m=C1(l,i);return m==null?null:{location:{pathname:m,search:c,hash:d,state:p,key:h},navigationType:s}},[i,l,c,d,p,h,s]);return f==null?null:oe.exports.createElement(Wi.Provider,{value:u},oe.exports.createElement(tm.Provider,{children:n,value:f}))}function EA(t){let{children:e,location:n}=t;return mA($x(e),n)}new Promise(()=>{});function $x(t,e){e===void 0&&(e=[]);let n=[];return oe.exports.Children.forEach(t,(r,s)=>{if(!oe.exports.isValidElement(r))return;let o=[...e,s];if(r.type===oe.exports.Fragment){n.push.apply(n,$x(r.props.children,o));return}r.type!==uk&&St(!1),!r.props.index||!r.props.children||St(!1);let a={id:r.props.id||o.join("-"),caseSensitive:r.props.caseSensitive,element:r.props.element,Component:r.props.Component,index:r.props.index,path:r.props.path,loader:r.props.loader,action:r.props.action,errorElement:r.props.errorElement,ErrorBoundary:r.props.ErrorBoundary,hasErrorBoundary:r.props.ErrorBoundary!=null||r.props.errorElement!=null,shouldRevalidate:r.props.shouldRevalidate,handle:r.props.handle,lazy:r.props.lazy};r.props.children&&(a.children=$x(r.props.children,o)),n.push(a)}),n}/**
 * React Router DOM v6.15.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */function kx(){return kx=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},kx.apply(this,arguments)}function RA(t,e){if(t==null)return{};var n={},r=Object.keys(t),s,o;for(o=0;o<r.length;o++)s=r[o],!(e.indexOf(s)>=0)&&(n[s]=t[s]);return n}function _A(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}function DA(t,e){return t.button===0&&(!e||e==="_self")&&!_A(t)}const PA=["onClick","relative","reloadDocument","replace","state","target","to","preventScrollReset"],AA="startTransition",Ob=Ph[AA];function OA(t){let{basename:e,children:n,future:r,window:s}=t,o=oe.exports.useRef();o.current==null&&(o.current=MP({window:s,v5Compat:!0}));let a=o.current,[i,u]=oe.exports.useState({action:a.action,location:a.location}),{v7_startTransition:l}=r||{},c=oe.exports.useCallback(d=>{l&&Ob?Ob(()=>u(d)):u(d)},[u,l]);return oe.exports.useLayoutEffect(()=>a.listen(c),[a,c]),oe.exports.createElement(TA,{basename:e,children:n,location:i.location,navigationType:i.action,navigator:a})}const FA=typeof window!="undefined"&&typeof window.document!="undefined"&&typeof window.document.createElement!="undefined",LA=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,Fb=oe.exports.forwardRef(function(e,n){let{onClick:r,relative:s,reloadDocument:o,replace:a,state:i,target:u,to:l,preventScrollReset:c}=e,d=RA(e,PA),{basename:p}=oe.exports.useContext(Wi),h,f=!1;if(typeof l=="string"&&LA.test(l)&&(h=l,FA))try{let x=new URL(window.location.href),w=l.startsWith("//")?new URL(x.protocol+l):new URL(l),v=C1(w.pathname,p);w.origin===x.origin&&v!=null?l=v+w.search+w.hash:f=!0}catch{}let m=pA(l,{relative:s}),y=zA(l,{replace:a,state:i,target:u,preventScrollReset:c,relative:s});function g(x){r&&r(x),x.defaultPrevented||y(x)}return oe.exports.createElement("a",kx({},d,{href:h||m,onClick:f||o?r:g,ref:n,target:u}))});var Lb;(function(t){t.UseScrollRestoration="useScrollRestoration",t.UseSubmit="useSubmit",t.UseSubmitFetcher="useSubmitFetcher",t.UseFetcher="useFetcher"})(Lb||(Lb={}));var zb;(function(t){t.UseFetchers="useFetchers",t.UseScrollRestoration="useScrollRestoration"})(zb||(zb={}));function zA(t,e){let{target:n,replace:r,state:s,preventScrollReset:o,relative:a}=e===void 0?{}:e,i=hA(),u=nm(),l=ok(t,{relative:a});return oe.exports.useCallback(c=>{if(DA(c,n)){c.preventDefault();let d=r!==void 0?r:sf(u)===sf(l);i(t,{replace:d,state:s,preventScrollReset:o,relative:a})}},[u,i,l,r,s,n,t,o,a])}const BA=t=>{const[e,n]=oe.exports.useState(!1);return X.createElement("div",{className:"text-black border shadow-md"},X.createElement("nav",{className:"relative container mx-auto p-6"},X.createElement("div",{className:"flex items-center justify-between"},X.createElement("div",{className:"pt-2"},X.createElement(Fb,{to:"/"},X.createElement("h1",{id:"navHeader","data-testid":"navHeader",className:"font-extrabold text-2xl"},"React TensorFlow")))),X.createElement("div",{className:"md:hidden text-[#1B1C23]"},X.createElement("div",{className:e?"absolute flex flex-col items-center self-end py-8 mt-10 space-y-6 font-bold bg-white sm:w-auto sm:self-center left-6 right-6 drop-shadow-md":"absolute flex-col items-center hidden self-end py-8 mt-10 space-y-6 font-bold bg-white sm:w-auto sm:self-center left-6 right-6 drop-shadow-md"},X.createElement("ul",null,t.menuItems.map(r=>X.createElement("li",{key:r.name,id:"menuItem","data-testid":"menuItem"},X.createElement(Fb,{to:r.linkTo,className:"hover:text-orange-600"},r.name))))))))},Ix=t=>{const e=n=>{t.onclickButton(n)};return X.createElement("button",{onClick:e,id:"button","data-testid":"button",className:t.className,disabled:t.disabled},t.label)},MA=()=>X.createElement("div",{id:"footer",className:"bg-black p-0 m-0"},X.createElement("div",{className:"container flex flex-col items-center justify-between px-6 py-24 mx-auto space-y-12 md:py-12 md:flex-row md:space-y-0"},X.createElement("h2",{className:"text-2xl font-bold leading-tight text-center text-white md:text-4xl md:max-w-xl md:text-left"},"TensorFlow is amazing!"),X.createElement(Ix,{label:"Like",className:"p-3 px-6 pt-2 text-black-700 hover:text-white bg-white rounded-full shadow-2xl baseline hover:bg-gray-600 cursor-pointer"})));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA=1e-7,WA=1e-4;class rm{constructor(e,n){this.backend=e,this.dataMover=n,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,n){this.dataIdsCount++,this.data.set(e,n)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class _c{refCount(e){return yn("refCount")}incRef(e){return yn("incRef")}timerAvailable(){return!0}time(e){return yn("time")}read(e){return yn("read")}readSync(e){return yn("readSync")}readToGPU(e,n){return yn("readToGPU")}numDataIds(){return yn("numDataIds")}disposeData(e,n){return yn("disposeData")}write(e,n,r){return yn("write")}move(e,n,r,s,o){return yn("move")}createTensorFromGPUData(e,n,r){return yn("createTensorFromGPUData")}memory(){return yn("memory")}floatPrecision(){return yn("floatPrecision")}epsilon(){return this.floatPrecision()===32?VA:WA}dispose(){return yn("dispose")}}function yn(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lk(t){let e=t.length,n=0;for(;e>0;)n=Math.random()*e|0,e--,ds(t,e,n)}function UA(t,e){if(t.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${t.length}Second array length was ${e.length}`);let n=t.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,ds(t,n,r),ds(e,n,r)}function so(t,e,n){return Math.max(t,Math.min(e,n))}function sm(t){return t%2===0?t:t+1}function ds(t,e,n){const r=t[e];t[e]=t[n],t[n]=r}function $1(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function GA(t,e){const n=Math.random();return e*n+(1-n)*t}function HA(t,e){let n=0;for(let r=0;r<t.length;r++){const s=Number(t[r])-Number(e[r]);n+=s*s}return n}function k(t,e){if(!t)throw new Error(typeof e=="string"?e:e())}function _t(t,e,n=""){k(Pe(t,e),()=>n+` Shapes ${t} and ${e} must match`)}function ba(t){k(t!=null,()=>"The input to the tensor constructor must be a non-null value.")}function L(t){if(t.length===0)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function Nx(t){return t.length===0}function ck(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==null&&e[n]!==null&&t[n]!==e[n])return!1;return!0}function Pe(t,e){if(t===e)return!0;if(t==null||e==null||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function aa(t){return t%1===0}function jA(t){if(Math.tanh!=null)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;{const e=Math.exp(2*t);return(e-1)/(e+1)}}function uf(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function KA(t){const e=new Uint32Array(t);for(let n=0;n<t;++n)e[n]=n;return lk(e),e}function Yo(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function Tx(t,e=s=>0,n,r){return new Promise((s,o)=>{let a=0;const i=()=>{if(t()){s();return}a++;const u=e(a);if(n!=null&&a>=n){o();return}r!=null?r(i,u):setTimeout(i,u)};i()})}function om(t,e){let n=1,r=-1;for(let o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(t[o]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${o}`);r=o}else if(t[o]<0)throw Error(`Shapes can not be < 0. Found ${t[o]} at dim ${o}`);if(r===-1){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(n===0)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const s=t.slice();return s[r]=e/n,s}function Ie(t,e){const n=e.length;return t=t==null?e.map((r,s)=>s):[].concat(t),k(t.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`),k(t.every(r=>aa(r)),()=>`All values in axis param must be integers but got axis ${t}`),t.map(r=>r<0?n+r:r)}function Ts(t,e){const n=[],r=[],s=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||s?null:Ie(e,t).sort();let a=0;for(let i=0;i<t.length;++i){if(o!=null){if(o[a]===i&&t[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${t[i]}' is not 1`);(o[a]==null||o[a]>i)&&t[i]===1&&(n.push(t[i]),r.push(i)),o[a]<=i&&a++}t[i]!==1&&(n.push(t[i]),r.push(i))}return{newShape:n,keptDims:r}}function xt(t,e){return it(t,e)}function it(t,e){let n=null;if(t==null||t==="float32")n=new Float32Array(e);else if(t==="int32")n=new Int32Array(e);else if(t==="bool")n=new Uint8Array(e);else if(t==="string")n=new Array(e);else throw new Error(`Unknown data type ${t}`);return n}function dk(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function pk(t){return t==="bool"||t==="complex64"||t==="float32"||t==="int32"||t==="string"}function am(t,e){return!(e==="complex64"||e==="float32"&&t!=="complex64"||e==="int32"&&t!=="float32"&&t!=="complex64"||e==="bool"&&t==="bool")}function tc(t){if(t==="float32"||t==="int32")return 4;if(t==="complex64")return 8;if(t==="bool")return 1;throw new Error(`Unknown dtype ${t}`)}function hk(t){if(t==null)return 0;let e=0;return t.forEach(n=>e+=n.length),e}function Ir(t){return typeof t=="string"||t instanceof String}function fk(t){return typeof t=="boolean"}function mk(t){return typeof t=="number"}function yo(t){return Array.isArray(t)?yo(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray?"int32":mk(t)?"float32":Ir(t)?"string":fk(t)?"bool":"float32"}function oo(t){return!!(t&&t.constructor&&t.call&&t.apply)}function lf(t,e){for(let n=e;n<t;++n)if(t%n===0)return n;return t}function fe(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function gk(t,e,n,r=!1){const s=new Array;if(e.length===1){const o=e[0]*(r?2:1);for(let a=0;a<o;a++)s[a]=n[t+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((u,l)=>u*l)*(r?2:1);for(let u=0;u<o;u++)s[u]=gk(t+u*i,a,n,r)}return s}function Gn(t,e,n=!1){if(t.length===0)return e[0];const r=t.reduce((s,o)=>s*o)*(n?2:1);if(r===0)return[];if(r!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}${n?" for a complex tensor":""}.`);return gk(0,t,e,n)}function Ol(t,e){if(Array.isArray(t))return t;if(e==="float32")return t instanceof Float32Array?t:new Float32Array(t);if(e==="int32")return t instanceof Int32Array?t:new Int32Array(t);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(t));throw new Error(`Unknown dtype ${e}`)}function im(t,e){const n=Rt(t,e);for(let r=0;r<n.length;r++)n[r]=1;return n}function Rt(t,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool")return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function k1(t,e){const n=t.reduce((r,s)=>r*s,1);if(e==null||e==="float32")return Gn(t,new Float32Array(n));if(e==="int32")return Gn(t,new Int32Array(n));if(e==="bool")return Gn(t,new Uint8Array(n));throw new Error(`Unknown data type ${e}`)}function Dn(t){t.forEach(e=>{k(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`)})}function Rr(t,e,n){if(e===0)return 0;if(e===1)return t[0];let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=n[s]*t[s];return r}function Ca(t,e,n){if(e===0)return[];if(e===1)return[t];const r=new Array(e);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(t/n[s]),t-=r[s]*n[s];return r[r.length-1]=t,r}function ao(t){return t&&t.then&&typeof t.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bb="tfjsflags";class yk{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qA,this.populateURLFlags()}setPlatform(e,n){this.platform!=null&&(z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=n}registerFlag(e,n,r){if(this.flagRegistry[e]={evaluationFn:n,setHook:r},this.urlFlags[e]!=null){const s=this.urlFlags[e];z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${s}.`),this.set(e,s)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const n=this.evaluateFlag(e);if(ao(n))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=n,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,n){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=n,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(n)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global=="undefined"||typeof this.global.location=="undefined"||typeof this.global.location.search=="undefined")return;const e=this.getQueryParams(this.global.location.search);Bb in e&&e[Bb].split(",").forEach(r=>{const[s,o]=r.split(":");this.urlFlags[s]=YA(s,o)})}}function qA(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(XA(e,r[0],r[1]),r.join("="))),e}function XA(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}function YA(t,e){const n=e.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:e}function z(){return I1}let I1=null;function QA(t){I1=t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let py;function xk(){if(py==null){let t;if(typeof window!="undefined")t=window;else if(typeof global!="undefined")t=global;else if(typeof process!="undefined")t=process;else if(typeof self!="undefined")t=self;else throw new Error("Could not find a global object");py=t}return py}function ZA(){const t=xk();return t._tfGlobals==null&&(t._tfGlobals=new Map),t._tfGlobals}function N1(t,e){const n=ZA();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}const Dc="Abs",Ui="Acos",Gi="Acosh",Sa="Add",Pc="AddN",Ac="All",Oc="Any",Fc="ArgMax",Lc="ArgMin",Hi="Asin",ji="Asinh",Ki="Atan",qi="Atanh",Xi="Atan2",zc="AvgPool",um="AvgPoolGrad",Bc="AvgPool3D",lm="AvgPool3DGrad",Mc="BatchMatMul",Vc="BatchToSpaceND",Wc="Bincount",Uc="BitwiseAnd",JA="BroadcastTo",Gc="BroadcastArgs",Yi="Cast",Qi="Ceil",Zi="ClipByValue",Hc="Complex",jc="ComplexAbs",Kc="Concat",qc="Conv2D",Xc="Conv2DBackpropFilter",Yc="Conv2DBackpropInput",Qc="Conv3D",cm="Conv3DBackpropFilterV2",Zc="Conv3DBackpropInputV2",Ji="Cos",eu="Cosh",Jc="Cumprod",ed="Cumsum",td="CropAndResize",nd="DenseBincount",rd="DepthToSpace",sd="DepthwiseConv2dNative",od="DepthwiseConv2dNativeBackpropFilter",ad="DepthwiseConv2dNativeBackpropInput",id="Diag",ud="Dilation2D",cf="Dilation2DBackpropInput",df="Dilation2DBackpropFilter",ld="Draw",tu="RealDiv",cd="Einsum",nu="Elu",dm="EluGrad",ru="Erf",su="Equal",ou="Exp",dd="ExpandDims",au="Expm1",pd="FFT",hd="Fill",fd="FlipLeftRight",iu="Floor",uu="FloorDiv",md="FusedBatchNorm",gd="GatherV2",yd="GatherNd",lu="Greater",cu="GreaterEqual",du="Identity",xd="IFFT",wd="Imag",pu="IsFinite",hu="IsInf",fu="IsNan",vd="LeakyRelu",mu="Less",gu="LessEqual",bd="LinSpace",yu="Log",xu="Log1p",wu="LogicalAnd",vu="LogicalNot",bu="LogicalOr",eO="LogicalXor",tO="LogSoftmax",nO="LowerBound",Cd="LRN",pm="LRNGrad",rO="MatrixBandPart",Sd="Max",Cu="Maximum",$d="MaxPool",hm="MaxPoolGrad",kd="MaxPool3D",fm="MaxPool3DGrad",Id="MaxPoolWithArgmax",Nd="Mean",Td="Min",Su="Minimum",Ed="MirrorPad",$u="Mod",Rd="Multinomial",ku="Multiply",_d="Neg",Iu="NotEqual",Dd="NonMaxSuppressionV3",mm="NonMaxSuppressionV4",Pd="NonMaxSuppressionV5",Ad="OnesLike",Od="OneHot",Fd="Pack",Ld="PadV2",sO="Pool",Nu="Pow",zd="Prelu",Bd="Prod",gm="RaggedGather",ym="RaggedRange",xm="RaggedTensorToTensor",Md="Range",Vd="Real",Tu="Reciprocal",Eu="Relu",Wd="Reshape",Ud="ResizeNearestNeighbor",wm="ResizeNearestNeighborGrad",Gd="ResizeBilinear",vm="ResizeBilinearGrad",Ru="Relu6",Hd="Reverse",_u="Round",Du="Rsqrt",jd="ScatterNd",Kd="TensorScatterUpdate",qd="SearchSorted",Xd="Select",Pu="Selu",Yd="Slice",Au="Sin",Ou="Sinh",Fu="Sign",Lu="Sigmoid",zu="Softplus",Bu="Sqrt",Qd="Sum",Zd="SpaceToBatchND",Jd="SplitV",ep="Softmax",bm="SparseFillEmptyRows",Cm="SparseReshape",tp="SparseSegmentMean",np="SparseSegmentSum",rp="SparseToDense",Mu="SquaredDifference",Sm="Square",sp="StaticRegexReplace",op="StridedSlice",ap="StringNGrams",$m="StringSplit",km="StringToHashBucketFast",Vu="Sub",Wu="Tan",Uu="Tanh",Gu="Tile",ip="TopK",up="Transform",Qo="Transpose",Im="Unique",lp="Unpack",cp="UnsortedSegmentSum",oO="UpperBound",dp="ZerosLike",Hu="Step",nc="FromPixels",pp="RotateWithOffset",bi="_FusedMatMul",Ci="FusedConv2D",Si="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zn(...t){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...t)}function aO(...t){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $i=N1("kernelRegistry",()=>new Map),rc=N1("gradRegistry",()=>new Map);function sc(t,e){const n=T1(t,e);return $i.get(n)}function Ex(t){return rc.get(t)}function pf(t){const e=$i.entries(),n=[];for(;;){const{done:r,value:s}=e.next();if(r)break;const[o,a]=s,[i]=o.split("_");i===t&&n.push(a)}return n}function hp(t){const{kernelName:e,backendName:n}=t,r=T1(e,n);$i.has(r)&&zn(`The kernel '${e}' for backend '${n}' is already registered`),$i.set(r,t)}function iO(t){const{kernelName:e}=t;rc.has(e)&&z().getBool("DEBUG")&&zn(`Overriding the gradient for '${e}'`),rc.set(e,t)}function uO(t,e){const n=T1(t,e);if(!$i.has(n))throw new Error(`The kernel '${t}' for backend '${e}' is not registered`);$i.delete(n)}function lO(t){if(!rc.has(t))throw new Error(`The gradient '${t}' for backend is not registered`);rc.delete(t)}function cO(t,e){pf(t).forEach(r=>{const s=Object.assign({},r,{backendName:e});hp(s)})}function T1(t,e){return`${e}_${t}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wk(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array||t instanceof Uint8ClampedArray}var Rx=et,ar=null;try{ar=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function et(t,e,n){this.low=t|0,this.high=e|0,this.unsigned=!!n}et.prototype.__isLong__;Object.defineProperty(et.prototype,"__isLong__",{value:!0});function Pn(t){return(t&&t.__isLong__)===!0}et.isLong=Pn;var Mb={},Vb={};function $a(t,e){var n,r,s;return e?(t>>>=0,(s=0<=t&&t<256)&&(r=Vb[t],r)?r:(n=tt(t,(t|0)<0?-1:0,!0),s&&(Vb[t]=n),n)):(t|=0,(s=-128<=t&&t<128)&&(r=Mb[t],r)?r:(n=tt(t,t<0?-1:0,!1),s&&(Mb[t]=n),n))}et.fromInt=$a;function ir(t,e){if(isNaN(t))return e?Uo:ur;if(e){if(t<0)return Uo;if(t>=vk)return Sk}else{if(t<=-Ub)return kn;if(t+1>=Ub)return Ck}return t<0?ir(-t,e).neg():tt(t%ki|0,t/ki|0,e)}et.fromNumber=ir;function tt(t,e,n){return new et(t,e,n)}et.fromBits=tt;var hf=Math.pow;function E1(t,e,n){if(t.length===0)throw Error("empty string");if(t==="NaN"||t==="Infinity"||t==="+Infinity"||t==="-Infinity")return ur;if(typeof e=="number"?(n=e,e=!1):e=!!e,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(r===0)return E1(t.substring(1),e,n).neg();for(var s=ir(hf(n,8)),o=ur,a=0;a<t.length;a+=8){var i=Math.min(8,t.length-a),u=parseInt(t.substring(a,a+i),n);if(i<8){var l=ir(hf(n,i));o=o.mul(l).add(ir(u))}else o=o.mul(s),o=o.add(ir(u))}return o.unsigned=e,o}et.fromString=E1;function Br(t,e){return typeof t=="number"?ir(t,e):typeof t=="string"?E1(t,e):tt(t.low,t.high,typeof e=="boolean"?e:t.unsigned)}et.fromValue=Br;var Wb=1<<16,dO=1<<24,ki=Wb*Wb,vk=ki*ki,Ub=vk/2,Gb=$a(dO),ur=$a(0);et.ZERO=ur;var Uo=$a(0,!0);et.UZERO=Uo;var ni=$a(1);et.ONE=ni;var bk=$a(1,!0);et.UONE=bk;var _x=$a(-1);et.NEG_ONE=_x;var Ck=tt(-1,2147483647,!1);et.MAX_VALUE=Ck;var Sk=tt(-1,-1,!0);et.MAX_UNSIGNED_VALUE=Sk;var kn=tt(0,-2147483648,!1);et.MIN_VALUE=kn;var ae=et.prototype;ae.toInt=function(){return this.unsigned?this.low>>>0:this.low};ae.toNumber=function(){return this.unsigned?(this.high>>>0)*ki+(this.low>>>0):this.high*ki+(this.low>>>0)};ae.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(kn)){var n=ir(e),r=this.div(n),s=r.mul(n).sub(this);return r.toString(e)+s.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=ir(hf(e,6),this.unsigned),a=this,i="";;){var u=a.div(o),l=a.sub(u.mul(o)).toInt()>>>0,c=l.toString(e);if(a=u,a.isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}};ae.getHighBits=function(){return this.high};ae.getHighBitsUnsigned=function(){return this.high>>>0};ae.getLowBits=function(){return this.low};ae.getLowBitsUnsigned=function(){return this.low>>>0};ae.getNumBitsAbs=function(){if(this.isNegative())return this.eq(kn)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,n=31;n>0&&(e&1<<n)==0;n--);return this.high!=0?n+33:n+1};ae.isZero=function(){return this.high===0&&this.low===0};ae.eqz=ae.isZero;ae.isNegative=function(){return!this.unsigned&&this.high<0};ae.isPositive=function(){return this.unsigned||this.high>=0};ae.isOdd=function(){return(this.low&1)===1};ae.isEven=function(){return(this.low&1)===0};ae.equals=function(e){return Pn(e)||(e=Br(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ae.eq=ae.equals;ae.notEquals=function(e){return!this.eq(e)};ae.neq=ae.notEquals;ae.ne=ae.notEquals;ae.lessThan=function(e){return this.comp(e)<0};ae.lt=ae.lessThan;ae.lessThanOrEqual=function(e){return this.comp(e)<=0};ae.lte=ae.lessThanOrEqual;ae.le=ae.lessThanOrEqual;ae.greaterThan=function(e){return this.comp(e)>0};ae.gt=ae.greaterThan;ae.greaterThanOrEqual=function(e){return this.comp(e)>=0};ae.gte=ae.greaterThanOrEqual;ae.ge=ae.greaterThanOrEqual;ae.compare=function(e){if(Pn(e)||(e=Br(e)),this.eq(e))return 0;var n=this.isNegative(),r=e.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ae.comp=ae.compare;ae.negate=function(){return!this.unsigned&&this.eq(kn)?kn:this.not().add(ni)};ae.neg=ae.negate;ae.add=function(e){Pn(e)||(e=Br(e));var n=this.high>>>16,r=this.high&65535,s=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,u=e.low>>>16,l=e.low&65535,c=0,d=0,p=0,h=0;return h+=o+l,p+=h>>>16,h&=65535,p+=s+u,d+=p>>>16,p&=65535,d+=r+i,c+=d>>>16,d&=65535,c+=n+a,c&=65535,tt(p<<16|h,c<<16|d,this.unsigned)};ae.subtract=function(e){return Pn(e)||(e=Br(e)),this.add(e.neg())};ae.sub=ae.subtract;ae.multiply=function(e){if(this.isZero())return ur;if(Pn(e)||(e=Br(e)),ar){var n=ar.mul(this.low,this.high,e.low,e.high);return tt(n,ar.get_high(),this.unsigned)}if(e.isZero())return ur;if(this.eq(kn))return e.isOdd()?kn:ur;if(e.eq(kn))return this.isOdd()?kn:ur;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Gb)&&e.lt(Gb))return ir(this.toNumber()*e.toNumber(),this.unsigned);var r=this.high>>>16,s=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,u=e.high&65535,l=e.low>>>16,c=e.low&65535,d=0,p=0,h=0,f=0;return f+=a*c,h+=f>>>16,f&=65535,h+=o*c,p+=h>>>16,h&=65535,h+=a*l,p+=h>>>16,h&=65535,p+=s*c,d+=p>>>16,p&=65535,p+=o*l,d+=p>>>16,p&=65535,p+=a*u,d+=p>>>16,p&=65535,d+=r*c+s*l+o*u+a*i,d&=65535,tt(h<<16|f,d<<16|p,this.unsigned)};ae.mul=ae.multiply;ae.divide=function(e){if(Pn(e)||(e=Br(e)),e.isZero())throw Error("division by zero");if(ar){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var n=(this.unsigned?ar.div_u:ar.div_s)(this.low,this.high,e.low,e.high);return tt(n,ar.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?Uo:ur;var r,s,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Uo;if(e.gt(this.shru(1)))return bk;o=Uo}else{if(this.eq(kn)){if(e.eq(ni)||e.eq(_x))return kn;if(e.eq(kn))return ni;var a=this.shr(1);return r=a.div(e).shl(1),r.eq(ur)?e.isNegative()?ni:_x:(s=this.sub(e.mul(r)),o=r.add(s.div(e)),o)}else if(e.eq(kn))return this.unsigned?Uo:ur;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=ur}for(s=this;s.gte(e);){r=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(r)/Math.LN2),u=i<=48?1:hf(2,i-48),l=ir(r),c=l.mul(e);c.isNegative()||c.gt(s);)r-=u,l=ir(r,this.unsigned),c=l.mul(e);l.isZero()&&(l=ni),o=o.add(l),s=s.sub(c)}return o};ae.div=ae.divide;ae.modulo=function(e){if(Pn(e)||(e=Br(e)),ar){var n=(this.unsigned?ar.rem_u:ar.rem_s)(this.low,this.high,e.low,e.high);return tt(n,ar.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ae.mod=ae.modulo;ae.rem=ae.modulo;ae.not=function(){return tt(~this.low,~this.high,this.unsigned)};ae.and=function(e){return Pn(e)||(e=Br(e)),tt(this.low&e.low,this.high&e.high,this.unsigned)};ae.or=function(e){return Pn(e)||(e=Br(e)),tt(this.low|e.low,this.high|e.high,this.unsigned)};ae.xor=function(e){return Pn(e)||(e=Br(e)),tt(this.low^e.low,this.high^e.high,this.unsigned)};ae.shiftLeft=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):tt(0,this.low<<e-32,this.unsigned)};ae.shl=ae.shiftLeft;ae.shiftRight=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?tt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):tt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ae.shr=ae.shiftRight;ae.shiftRightUnsigned=function(e){if(Pn(e)&&(e=e.toInt()),e&=63,e===0)return this;var n=this.high;if(e<32){var r=this.low;return tt(r>>>e|n<<32-e,n>>>e,this.unsigned)}else return e===32?tt(n,0,this.unsigned):tt(n>>>e-32,0,this.unsigned)};ae.shru=ae.shiftRightUnsigned;ae.shr_u=ae.shiftRightUnsigned;ae.toSigned=function(){return this.unsigned?tt(this.low,this.high,!1):this};ae.toUnsigned=function(){return this.unsigned?this:tt(this.low,this.high,!0)};ae.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ae.toBytesLE=function(){var e=this.high,n=this.low;return[n&255,n>>>8&255,n>>>16&255,n>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ae.toBytesBE=function(){var e=this.high,n=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,n>>>24,n>>>16&255,n>>>8&255,n&255]};et.fromBytes=function(e,n,r){return r?et.fromBytesLE(e,n):et.fromBytesBE(e,n)};et.fromBytesLE=function(e,n){return new et(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,n)};et.fromBytesBE=function(e,n){return new et(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],n)};var pO=VS({__proto__:null,default:Rx},[Rx]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oo=Rx||pO;function fp(t){return Oo.fromString(t,!0,16)}const $k=fp("c3a5c85c97cb3127"),Do=fp("b492b66fbe98f273"),Zt=fp("9ae16a3b2f90404f");function Dx(t){return t.xor(t.shru(47))}function kk(t,e,n){const r=t.slice(e,e+n);return Oo.fromBytes(Array.from(r),!0,!0)}function Ge(t,e){return kk(t,e,8)}function Hb(t,e){return kk(t,e,4)}function Nt(t,e){return e===0?t:t.shru(e).or(t.shl(64-e))}function to(t,e,n=fp("9ddfea08eb382d69")){let r=t.xor(e).mul(n);r=r.xor(r.shru(47));let s=e.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function hO(t,e,n,r,s,o){s=s.add(t),o=Nt(o.add(s).add(r),21);const a=s;return s=s.add(e),s=s.add(n),o=o.add(Nt(s,44)),[s.add(r),o.add(a)]}function Qp(t,e,n,r){return hO(Ge(t,e),Ge(t,e+8),Ge(t,e+16),Ge(t,e+24),n,r)}function fO(t,e=t.length){if(e>=8){const n=Zt.add(e*2),r=Ge(t,0).add(Zt),s=Ge(t,e-8),o=Nt(s,37).mul(n).add(r),a=Nt(r,25).add(s).mul(n);return to(o,a,n)}if(e>=4){const n=Zt.add(e*2),r=Hb(t,0);return to(r.shl(3).add(e),Hb(t,e-4),n)}if(e>0){const n=t[0],r=t[e>>1],s=t[e-1],o=n+(r<<8),a=e+(s<<2);return Dx(Zt.mul(o).xor($k.mul(a))).mul(Zt)}return Zt}function mO(t,e=t.length){const n=Zt.add(e*2),r=Ge(t,0).mul(Do),s=Ge(t,8),o=Ge(t,e-8).mul(n),a=Ge(t,e-16).mul(Zt);return to(Nt(r.add(s),43).add(Nt(o,30)).add(a),r.add(Nt(s.add(Zt),18)).add(o),n)}function gO(t,e=t.length){const n=Zt.add(e*2),r=Ge(t,0).mul(Zt),s=Ge(t,8),o=Ge(t,e-8).mul(n),a=Ge(t,e-16).mul(Zt),i=Nt(r.add(s),43).add(Nt(o,30)).add(a),u=to(i,r.add(Nt(s.add(Zt),18)).add(o),n),l=Ge(t,16).mul(n),c=Ge(t,24),d=i.add(Ge(t,e-32)).mul(n),p=u.add(Ge(t,e-24)).mul(n);return to(Nt(l.add(c),43).add(Nt(d,30)).add(p),l.add(Nt(c.add(r),18)).add(d),n)}function Ik(t,e=t.length){const n=Oo.fromNumber(81,!0);if(e<=32)return e<=16?fO(t,e):mO(t,e);if(e<=64)return gO(t,e);let r=n,s=n.mul(Do).add(113),o=Dx(s.mul(Zt).add(113)).mul(Zt),a=[Oo.UZERO,Oo.UZERO],i=[Oo.UZERO,Oo.UZERO];r=r.mul(Zt).add(Ge(t,0));let u=0;const l=(e-1>>6)*64,c=l+(e-1&63)-63;do r=Nt(r.add(s).add(a[0]).add(Ge(t,u+8)),37).mul(Do),s=Nt(s.add(a[1]).add(Ge(t,u+48)),42).mul(Do),r=r.xor(i[1]),s=s.add(a[0]).add(Ge(t,u+40)),o=Nt(o.add(i[0]),33).mul(Do),a=Qp(t,u,a[1].mul(Do),r.add(i[0])),i=Qp(t,u+32,o.add(i[1]),s.add(Ge(t,u+16))),[o,r]=[r,o],u+=64;while(u!==l);const d=Do.add(o.and(255).shl(1));return u=c,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),r=Nt(r.add(s).add(a[0]).add(Ge(t,u+8)),37).mul(d),s=Nt(s.add(a[1]).add(Ge(t,u+48)),42).mul(d),r=r.xor(i[1].mul(9)),s=s.add(a[0].mul(9).add(Ge(t,u+40))),o=Nt(o.add(i[0]),33).mul(d),a=Qp(t,u,a[1].mul(d),r.add(i[0])),i=Qp(t,u+32,o.add(i[1]),s.add(Ge(t,u+16))),[o,r]=[r,o],to(to(a[0],i[0],d).add(Dx(s).mul($k)).add(o),to(a[1],i[1],d).add(r),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Es(t,e){return e==="string"?_r(t):xo([t],e)}function yO(t,e){return t instanceof Float32Array&&e==="float32"||t instanceof Int32Array&&e==="int32"||t instanceof Uint8Array&&e==="bool"}function xo(t,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=mr(t)),z().getBool("DEBUG")&&dk(t,e),yO(t,e))return t;if(e==null||e==="float32"||e==="complex64")return new Float32Array(t);if(e==="int32")return new Int32Array(t);if(e==="bool"){const n=new Uint8Array(t.length);for(let r=0;r<n.length;++r)Math.round(t[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${e}`)}function bn(){return z().platform.now()}function xO(t,e){return z().platform.fetch(t,e)}function _r(t,e="utf-8"){return e=e||"utf-8",z().platform.encode(t,e)}function fr(t,e="utf-8"){return e=e||"utf-8",z().platform.decode(t,e)}function Tt(t){return z().platform.isTypedArray!=null?z().platform.isTypedArray(t):wk(t)}function mr(t,e=[],n=!1){if(e==null&&(e=[]),typeof t=="boolean"||typeof t=="number"||typeof t=="string"||ao(t)||t==null||Tt(t)&&n)e.push(t);else if(Array.isArray(t)||Tt(t))for(let r=0;r<t.length;++r)mr(t[r],e,n);else{let r=-1;for(const s of Object.keys(t))/^([1-9]+[0-9]*|0)$/.test(s)&&(r=Math.max(r,Number(s)));for(let s=0;s<=r;s++)mr(t[s],e,n)}return e}var wO=Object.freeze(Object.defineProperty({__proto__:null,createScalarValue:Es,toTypedArray:xo,now:bn,fetch:xO,encodeString:_r,decodeString:fr,isTypedArray:Tt,flatten:mr,shuffle:lk,shuffleCombo:UA,clamp:so,nearestLargerEven:sm,swap:ds,sum:$1,randUniform:GA,distSquared:HA,assert:k,assertShapesMatch:_t,assertNonNull:ba,sizeFromShape:L,isScalarShape:Nx,arraysEqualWithNull:ck,arraysEqual:Pe,isInt:aa,tanh:jA,sizeToSquarishShape:uf,createShuffledIndices:KA,rightPad:Yo,repeatedTry:Tx,inferFromImplicitShape:om,parseAxisParam:Ie,squeezeShape:Ts,getTypedArrayFromDType:xt,getArrayFromDType:it,checkConversionForErrors:dk,isValidDtype:pk,hasEncodingLoss:am,bytesPerElement:tc,bytesFromStringArray:hk,isString:Ir,isBoolean:fk,isNumber:mk,inferDtype:yo,isFunction:oo,nearestDivisor:lf,computeStrides:fe,toNestedArray:Gn,convertBackendValuesAndArrayBuffer:Ol,makeOnesTypedArray:im,makeZerosTypedArray:Rt,makeZerosNestedTypedArray:k1,assertNonNegativeIntegerDimensions:Dn,locToIndex:Rr,indexToLoc:Ca,isPromise:ao,hexToLong:fp,fingerPrint64:Ik},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vO{constructor(e,n){this.backendTimer=e,this.logger=n,n==null&&(this.logger=new CO)}profileKernel(e,n,r){let s;const o=()=>{s=r()};let a;const i=bn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const l of s)l.dataSync();a=Promise.resolve({kernelMs:bn()-i})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const c=s[l];c.data().then(d=>{bO(d,c.dtype,e)})}return{kernelName:e,outputs:s,inputs:n,timeMs:a.then(l=>l.kernelMs),extraInfo:a.then(l=>l.getExtraProfileInfo!=null?l.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:n,outputs:r,timeMs:s,inputs:o,extraInfo:a}=e;r.forEach(i=>{Promise.all([i.data(),s,a]).then(u=>{this.logger.logKernelProfile(n,i,u[0],u[1],o,u[2])})})}}function bO(t,e,n){if(e!=="float32")return!1;for(let r=0;r<t.length;r++){const s=t[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class CO{logKernelProfile(e,n,r,s,o,a){const i=typeof s=="number"?Yo(`${s}ms`,9):s.error,u=Yo(e,25),l=n.rank,c=n.size,d=Yo(n.shape.toString(),14);let p="";for(const h in o){const f=o[h];if(f!=null){const m=f.shape||n.shape,y=m.length;p+=`${h}: ${y}D ${y>0?m:""} `}}console.log(`%c${u}	%c${i}	%c${l}D ${d}	%c${c}	%c${p}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SO(t,e,n){const r={},s={};for(let u=0;u<e.length;u++)r[e[u].id]=!0;for(let u=0;u<t.length;u++){const l=t[u],c=l.inputs;for(const d in c){const p=c[d];let h=!1;for(let f=0;f<e.length;f++)if(r[p.id]){l.outputs.forEach(m=>r[m.id]=!0),h=!0,s[l.id]=!0;break}if(h)break}}const o={};o[n.id]=!0;const a={};for(let u=t.length-1;u>=0;u--){const l=t[u],c=l.inputs;for(let d=0;d<l.outputs.length;d++)if(o[l.outputs[d].id]){for(const p in c)o[c[p].id]=!0,a[l.id]=!0;break}}const i=[];for(let u=0;u<t.length;u++){const l=t[u];if(s[l.id]&&a[l.id]){const c={};for(const p in l.inputs){const h=l.inputs[p];r[h.id]&&(c[p]=h)}const d=Object.assign({},l);d.inputs=c,d.outputs=l.outputs,i.push(d)}}return i}function $O(t,e,n,r){for(let s=e.length-1;s>=0;s--){const o=e[s],a=[];if(o.outputs.forEach(u=>{const l=t[u.id];l!=null?a.push(l):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const u in o.inputs){if(!(u in i))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(i)}.`);const l=n(()=>i[u]());if(l.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${l.dtype}'`);const c=o.inputs[u];if(!Pe(l.shape,c.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${u}' has shape '${l.shape}', which does not match the shape of the input '${c.shape}'`);if(t[c.id]==null)t[c.id]=l;else{const d=t[c.id];t[c.id]=r(d,l),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jb=20,hl=3,hy=7;function kO(t,e,n,r){const s=fe(e),o=IO(t,e,n,s),a=e.length,i=Sh(t,e,n,s,o),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${a}`),u.push(`  shape: [${e}]`),u.push("  values:")),u.push(i.map(l=>"    "+l).join(`
`)),u.join(`
`)}function IO(t,e,n,r){const s=L(e),o=r[r.length-1],a=new Array(o).fill(0),i=e.length,u=n==="complex64"?vl(t):t;if(i>1)for(let l=0;l<s/o;l++){const c=l*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],wl(u[c+d],0,n).length)}return a}function wl(t,e,n){let r;return Array.isArray(t)?r=`${parseFloat(t[0].toFixed(hy))} + ${parseFloat(t[1].toFixed(hy))}j`:Ir(t)?r=`'${t}'`:n==="bool"?r=Nk(t):r=parseFloat(t.toFixed(hy)).toString(),Yo(r,e)}function Nk(t){return t===0?"false":"true"}function Sh(t,e,n,r,s,o=!0){const a=n==="complex64"?2:1,i=e[0],u=e.length;if(u===0){if(n==="complex64"){const m=vl(t);return[wl(m[0],0,n)]}return n==="bool"?[Nk(t[0])]:[t[0].toString()]}if(u===1){if(i>jb){const y=hl*a;let g=Array.from(t.slice(0,y)),x=Array.from(t.slice((i-hl)*a,i*a));return n==="complex64"&&(g=vl(g),x=vl(x)),["["+g.map((w,v)=>wl(w,s[v],n)).join(", ")+", ..., "+x.map((w,v)=>wl(w,s[i-hl+v],n)).join(", ")+"]"]}const m=n==="complex64"?vl(t):Array.from(t);return["["+m.map((y,g)=>wl(y,s[g],n)).join(", ")+"]"]}const l=e.slice(1),c=r.slice(1),d=r[0]*a,p=[];if(i>jb){for(let m=0;m<hl;m++){const y=m*d,g=y+d;p.push(...Sh(t.slice(y,g),l,n,c,s,!1))}p.push("...");for(let m=i-hl;m<i;m++){const y=m*d,g=y+d;p.push(...Sh(t.slice(y,g),l,n,c,s,m===i-1))}}else for(let m=0;m<i;m++){const y=m*d,g=y+d;p.push(...Sh(t.slice(y,g),l,n,c,s,m===i-1))}const h=u===2?",":"";p[0]="["+(i>0?p[0]+h:"");for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=`,
`;for(let m=2;m<u;m++)f+=`
`;return p[p.length-1]=" "+p[p.length-1]+"]"+(o?"":f),p}function vl(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yt{constructor(e,n,r){if(this.dtype=n,this.shape=e.slice(),this.size=L(e),r!=null){const s=r.length;k(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if(n==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||it(n,this.size),this.strides=fe(e)}set(e,...n){n.length===0&&(n=[0]),k(n.length===this.rank,()=>`The number of provided coordinates (${n.length}) must match the rank (${this.rank})`);const r=this.locToIndex(n);this.values[r]=e}get(...e){e.length===0&&(e=[0]);let n=0;for(const s of e){if(s<0||s>=this.shape[n]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}n++}let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=this.strides[s]*e[s];return this.values[r]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return n}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const n=new Array(this.shape.length);for(let r=0;r<n.length-1;++r)n[r]=Math.floor(e/this.strides[r]),e-=n[r]*this.strides[r];return n[n.length-1]=e,n}get rank(){return this.shape.length}toTensor(){return Sr().makeTensor(this.values,this.shape,this.dtype)}}let Sr=null,Wa=null;function NO(t){Sr=t}function TO(t){Wa=t}class ct{constructor(e,n,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=n||"float32",this.size=L(e),this.strides=fe(e),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Wa.buffer(this.shape,this.dtype,e)}bufferSync(){return Wa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Gn(this.shape,e,this.dtype==="complex64")}arraySync(){return Gn(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Sr().read(this.dataId);if(this.dtype==="string"){const n=await e;try{return n.map(r=>fr(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Sr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Sr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(n=>fr(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Sr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Sr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Wa.print(this,e)}clone(){return this.throwIfDisposed(),Wa.clone(this)}toString(e=!1){const n=this.dataSync();return kO(n,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Wa.cast(this,e)}variable(e=!0,n,r){return this.throwIfDisposed(),Sr().makeVariable(this,e,n,r)}}Object.defineProperty(ct,Symbol.hasInstance,{value:t=>!!t&&t.data!=null&&t.dataSync!=null&&t.throwIfDisposed!=null});function Tk(){return N1("Tensor",()=>ct)}Tk();class oc extends ct{constructor(e,n,r,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=n,this.name=r}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Pe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Sr().disposeTensor(this),this.dataId=e.dataId,Sr().incRef(this,null)}dispose(){Sr().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(oc,Symbol.hasInstance,{value:t=>t instanceof ct&&t.assign!=null&&t.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Px;(function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"})(Px||(Px={}));var Ax;(function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"})(Ax||(Ax={}));var Ox;(function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"})(Ox||(Ox={}));var Fx;(function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"})(Fx||(Fx={}));var Lx;(function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"})(Lx||(Lx={}));const EO={float32:Fx,int32:Ax,bool:Ox,complex64:Lx};function $t(t,e){if(t==="string"||e==="string"){if(t==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return EO[t][e]}function mp(t){return $t(t,"int32")}function Ek(t){return t!=null&&typeof t=="object"&&"texture"in t&&t.texture instanceof WebGLTexture}function Rk(t){return typeof GPUBuffer!="undefined"&&t!=null&&typeof t=="object"&&"buffer"in t&&t.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(t,e){if(t.dtype===e.dtype)return[t,e];const n=$t(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function _k(t,e){k(t.dtype===e.dtype,()=>`The dtypes of the first(${t.dtype}) and second(${e.dtype}) input must match`)}function RO(t,e){return e.some(n=>n.id===t.id)}function R1(t){const e=[];return Dk(t,e,new Set),e}function Dk(t,e,n){if(t==null)return;if(t instanceof ct){e.push(t);return}if(!_O(t))return;const r=t;for(const s in r){const o=r[s];n.has(o)||(n.add(o),Dk(o,e,n))}}function _O(t){return Array.isArray(t)||typeof t=="object"}var DO=Object.freeze(Object.defineProperty({__proto__:null,makeTypesMatch:ut,assertTypesMatch:_k,isTensorInList:RO,getTensorsInContainer:R1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fy(t){return t.kernelName!=null}class Kb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ii{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n];if(await this.initializeBackend(r).success){await this.setBackend(r);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:n}=this.initializeBackendsAndReturnBest();if(n)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:n}=this.initializeBackend(e);if(n)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,n,r=1){return e in this.registryFactory?(zn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:n,priority:r},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:n,asyncInit:r}=this.initializeBackend(e);if(!(r?await n:n))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new vO(this.backendInstance),!0}setupRegisteredKernels(){pf(this.backendName).forEach(n=>{n.setupFunc!=null&&n.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){pf(e).forEach(r=>{r.disposeFunc!=null&&r.disposeFunc(this.registry[e])})}initializeBackend(e){const n=this.registryFactory[e];if(n==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const r=n.factory();if(r&&!(r instanceof _c)&&typeof r.then=="function"){const s=++this.pendingBackendInitId,o=r.then(a=>s<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,zn(`Initialization of backend ${e} failed`),zn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=r,{success:!0,asyncInit:!1}}catch(r){return zn(`Initialization of backend ${e} failed`),zn(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,n)=>this.registryFactory[n].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let n=0;n<e.length;n++){const r=e[n],{success:s,asyncInit:o}=this.initializeBackend(r);if(o||s)return{name:r,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,n){const r=this.state.tensorInfo.get(n),s=r.backend,o=this.readSync(n),a=s.refCount(n);s.disposeData(n,!0),r.backend=e,e.move(n,o,r.shape,r.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,n){let r=null;if(n==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");n=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof n!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}let s;return this.scopedRun(()=>this.startScope(r),()=>this.endScope(s),()=>(s=n(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,n,r){e();try{const s=r();return n(),s}catch(s){throw n(),s}}nextTensorId(){return Ii.nextTensorId++}nextVariableId(){return Ii.nextVariableId++}clone(e){const n=P.runKernel(du,{x:e}),r={x:e},s=a=>({x:()=>{const i="float32",u={x:a},l={dtype:i};return P.runKernel(Yi,u,l)}}),o=[];return this.addTapeNode(this.state.activeScope.name,r,[n],s,o,{}),n}runKernel(e,n,r){if(this.backendName==null&&this.backend,!(sc(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:n,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,n,r){const s=this.backend.numDataIds();let o=0;r.forEach(u=>{o+=u.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-n-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let n,r=[];const s=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let u;const l=fy(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(fy(e)){const{kernelName:f,inputs:m,attrs:y}=e;this.backendName==null&&this.backend;const g=sc(f,this.backendName);k(g!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const x=this.backend.numDataIds();u=g.kernelFunc({inputs:m,attrs:y,backend:this.backend});const w=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,w);const v=w.map(b=>b.rank!=null?b:this.makeTensorFromTensorInfo(b));if(s){const b=this.getTensorsForGradient(f,m,v);r=this.saveTensorsForBackwardMode(b)}return v}}else{const{forwardFunc:f}=e,m=y=>{!s||(r=y.map(g=>this.keep(this.clone(g))))};i=()=>{const y=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const g=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,y,g),g}}const{inputs:c,attrs:d}=e,p=fy(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?n=i():(h=this.profiler.profileKernel(l,c,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),n=h.outputs)}),s&&this.addTapeNode(l,c,n,p,r,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map(f=>c[f]!=null?c[f].shape:null),outputShapes:n.map(f=>f.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(u)?n:n[0]}saveTensorsForBackwardMode(e){return e.map(r=>this.keep(this.clone(r)))}getTensorsForGradient(e,n,r){const s=Ex(e);if(s!=null){const o=s.inputsToSave||[],a=s.outputsToSave||[];let i;s.saveAllInputs?(k(Array.isArray(n),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(n).map(l=>n[l])):i=o.map(l=>n[l]);const u=r.filter((l,c)=>a[c]);return i.concat(u)}return[]}makeTensor(e,n,r,s){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");r=r||"float32",s=s||this.backend;let o=e;r==="string"&&Ir(e[0])&&(o=e.map(u=>_r(u)));const a=s.write(o,n,r),i=new ct(n,r,a,this.nextTensorId());if(this.trackTensor(i,s),r==="string"){const u=this.state.tensorInfo.get(a),l=hk(o);this.state.numBytes+=l-u.bytes,u.bytes=l}return i}makeTensorFromDataId(e,n,r,s){r=r||"float32";const o={dataId:e,shape:n,dtype:r};return this.makeTensorFromTensorInfo(o,s)}makeTensorFromTensorInfo(e,n){const{dataId:r,shape:s,dtype:o}=e,a=new ct(s,o,r,this.nextTensorId());return this.trackTensor(a,n),a}makeVariable(e,n=!0,r,s){r=r||this.nextVariableId().toString(),s!=null&&s!==e.dtype&&(e=e.cast(s));const o=new oc(e,n,r,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,n){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let r=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(r=e.size*tc(e.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:n||this.backend,dtype:e.dtype,shape:e.shape,bytes:r})),e instanceof oc||this.track(e)}incRef(e,n){this.trackTensor(e,n),this.backend.incRef(e.dataId)}removeDataId(e,n){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===n&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const n=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=n.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const r=e.size*tc(e.dtype);this.state.numBytes-=r}n.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,n.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const n=this.state.registeredVariables[e];this.disposeVariable(n)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const n=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-n,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,n,r,s,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:n,outputs:r,saved:o},u=Ex(e);u!=null&&(s=u.gradFunc),s!=null&&(i.gradient=l=>(l=l.map((c,d)=>{if(c==null){const p=r[d],h=Rt(p.size,p.dtype);return this.makeTensor(h,p.shape,p.dtype)}return c}),s(l.length>1?l:l[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const n={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(n.name=e),this.state.scopeStack.push(n),this.state.activeScope=n}endScope(e){const n=R1(e),r=new Set(n.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!r.has(a.id)&&a.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(o=>{!o.kept&&o.scopeId===s.id&&this.track(o)})}gradients(e,n,r,s=!1){if(k(n.length>0,()=>"gradients() received an empty list of xs."),r!=null&&r.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));k(o instanceof ct,()=>"The result y returned by f() must be a tensor.");const a=SO(this.state.activeTape,n,o);if(!s&&a.length===0&&n.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=r==null?PO(o.shape):r,$O(i,a,l=>this.tidy(l),AO);const u=n.map(l=>i[l.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(l=>{for(const c of l.saved)c.dispose()}),this.state.activeTape=null),{value:o,grads:u}})}customGrad(e){return k(oo(e),()=>"The f passed in customGrad(f) must be a function."),(...n)=>{k(n.every(i=>i instanceof ct),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let r;const s={};n.forEach((i,u)=>{s[u]=i});const o=(i,u)=>(r=e(...n,u),k(r.value instanceof ct,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),k(oo(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),a=(i,u)=>{const l=r.gradFunc(i,u),c=Array.isArray(l)?l:[l];k(c.length===n.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),k(c.every(p=>p instanceof ct),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return c.forEach((p,h)=>{d[h]=()=>p}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,n){return this.state.tensorInfo.get(e).backend.readToGPU(e,n)}async time(e){const n=bn(),r=await this.backend.time(e);return r.wallMs=bn()-n,r}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kb;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ii.nextTensorId=0;Ii.nextVariableId=0;function PO(t){const e=im(L(t),"float32");return P.makeTensor(e,t,"float32")}function Pk(){const t=xk();if(t._tfengine==null){const e=new yk(t);t._tfengine=new Ii(e)}return QA(t._tfengine.ENV),NO(()=>t._tfengine),t._tfengine}const P=Pk();function AO(t,e){const n={a:t,b:e};return P.runKernel(Sa,n)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OO(){return typeof navigator!="undefined"&&navigator!=null}let zx;function FO(t){zx=t}function _1(t){if(zx!==void 0)return zx;if(t||OO()){if(t||(t=navigator),t.product==="ReactNative")return!0;const e=t.userAgent||t.vendor||(typeof window!="undefined"?window.opera:"");if(!e){const n=t;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function D1(){return typeof window!="undefined"&&window.document!=null||typeof WorkerGlobalScope!="undefined"}var LO=Object.freeze(Object.defineProperty({__proto__:null,mockIsMobile:FO,isMobile:_1,isBrowser:D1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dn=z();dn.registerFlag("DEBUG",()=>!1,t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});dn.registerFlag("IS_BROWSER",()=>D1());dn.registerFlag("IS_NODE",()=>typeof process!="undefined"&&typeof process.versions!="undefined"&&typeof process.versions.node!="undefined");dn.registerFlag("IS_CHROME",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));dn.registerFlag("IS_SAFARI",()=>typeof navigator!="undefined"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));dn.registerFlag("PROD",()=>!1);dn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>dn.getBool("DEBUG"));dn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);dn.registerFlag("IS_TEST",()=>!1);dn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>dn.getBool("DEBUG"));dn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);dn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);dn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qr(t,e){let n=t;if(Tt(t))return e==="string"?[]:[t.length];if(Ek(t)){const s=t.channels||"RGBA";return[t.height,t.width*s.length]}else if(Rk(t))return[t.buffer.size/(e==null?4:tc(e))];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||Tt(n)&&e!=="string";)r.push(n.length),n=n[0];return Array.isArray(t)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ak(t,r,[]),r}function Ak(t,e,n){if(n=n||[],!Array.isArray(t)&&!Tt(t)){k(e.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}k(e.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`),k(t.length===e[0],()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`);const r=e.slice(1);for(let s=0;s<t.length;++s)Ak(t[s],r,n.concat(s))}function qb(t,e,n,r){if(t!=="string_or_numeric"){if(t==null)throw new Error("Expected dtype cannot be null.");if(t!=="numeric"&&t!==e||t==="numeric"&&e==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}}function I(t,e,n,r="numeric"){if(t instanceof Tk())return qb(r,t.dtype,e,n),t;let s=yo(t);if(s!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),qb(r,s,e,n),t==null||!Tt(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string"){const u=t==null?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${u}'`)}const o=Qr(t,s);!Tt(t)&&!Array.isArray(t)&&(t=[t]);const i=s!=="string"?xo(t,s):mr(t,[],!0);return P.makeTensor(i,o,s)}function ac(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map((o,a)=>I(o,`${e}[${a}]`,n,r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P1="__op";function D(t){const e=Object.keys(t);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const r=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+P1;const s=(...o)=>{P.startScope(n);try{const a=r(...o);return ao(a)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(a),a}catch(a){throw P.endScope(null),a}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zO(t,e){const n=I(t,"real","complex"),r=I(e,"imag","complex");_t(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return P.runKernel(Hc,s)}const Ss=D({complex_:zO});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wo(t,e,n,r){if(r==null)r=yo(t);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Rk(t)||Ek(t)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return P.backend.createTensorFromGPUData(t,e||n,r)}if(!Tt(t)&&!Array.isArray(t)&&typeof t!="number"&&typeof t!="boolean"&&typeof t!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){Dn(e);const s=L(e),o=L(n);k(s===o,()=>`Based on the provided shape, [${e}], the tensor should have ${s} values but has ${o}`);for(let a=0;a<n.length;++a){const i=n[a],u=a===n.length-1?i!==L(e.slice(a)):!0;k(n[a]===e[a]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `)}}return!Tt(t)&&!Array.isArray(t)&&(t=[t]),e=e||n,t=r!=="string"?xo(t,r):mr(t,[],!0),P.makeTensor(t,e,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(t,e,n){const r=Qr(t,n);return wo(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ia={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Mr{static join(e){return new Mr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(r=>Tt(r)?r.buffer:r),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let n=0;for(let r=0;r<e.length;r++){const s=e[r];r!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const o=n+s.byteLength;this.shards.push({buffer:s,start:n,end:o}),n=o}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,n=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,n=isNaN(Number(n))?0:n,e=Math.max(0,e),n=Math.min(this.byteLength,n),n<=e)return new ArrayBuffer(0);const r=this.findShardForByte(e);if(r===-1)throw new Error(`Could not find start shard for byte ${e}`);const s=n-e,o=new ArrayBuffer(s),a=new Uint8Array(o);let i=0;for(let u=r;u<this.shards.length;u++){const l=this.shards[u],d=e+i-l.start,p=i,f=Math.min(n,l.end)-l.start,m=new Uint8Array(l.buffer,d,f-d);if(a.set(m,p),i+=m.length,n<l.end)break}return o}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function n(s){return e<s.start?-1:e>=s.end?1:0}if(n(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const r=BO(this.shards,n);return r===-1?-1:(this.previousShardIndex=r,this.previousShardIndex)}}function BO(t,e){let n=0,r=t.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,o=e(t[s]);if(o===0)return s;o<0?r=s:n=s+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MO(){z().set("PROD",!0)}function VO(){z().set("DEBUG",!0)}function WO(){z().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function UO(t){z().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function GO(){P.disposeVariables()}function wn(){return P}function HO(){return P.memory()}function jO(t){return P.profile(t)}function Le(t,e){return P.tidy(t,e)}function tn(t){R1(t).forEach(n=>n.dispose())}function Nr(t){return P.keep(t)}function KO(t){return P.time(t)}function qO(t){return P.setBackend(t)}function Ok(){return P.ready()}function Fk(){return P.backendName}function XO(t){P.removeBackend(t)}function YO(t){return P.findBackend(t)}function QO(t){return P.findBackendFactory(t)}function Nm(t,e,n=1){return P.registerBackend(t,e,n)}function Lk(){return P.backend}function ZO(t,e){z().setPlatform(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=4;async function JO(t,e){const n=[],r=[],s=Array.isArray(t)?t.map(a=>a.name):Object.keys(t);for(let a=0;a<s.length;++a){const i=s[a],u=Array.isArray(t)?t[a].tensor:t[i];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${u.dtype}`);const l={name:i,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const c=new Promise(async d=>{const p=await u.bytes(),h=p.reduce((y,g)=>y+g.length,0)+io*p.length,f=new Uint8Array(h);let m=0;for(let y=0;y<p.length;y++){const g=p[y],x=new Uint8Array(new Uint32Array([g.length]).buffer);f.set(x,m),m+=io,f.set(g,m),m+=g.length}d(f)});r.push(c)}else r.push(u.data());e!=null&&(l.group=e),n.push(l)}const o=await Promise.all(r);return{data:nF(o),specs:n}}function zk(t,e){const n=new Mr(t),r={};let s=0;for(const o of e){const a=eF(o,(i,u)=>n.slice(s+i,s+u));r[o.name]=Bk(o,n.slice(s,s+a)),s+=a}return r}function eF(t,e){const n=L(t.shape);let r;if("quantization"in t){const s=t.quantization;r=ia[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=io+new Uint32Array(e(s,s+io))[0];return s}else r=ia[t.dtype];return n*r}async function tF(t,e){const n=L(t.shape);let r;if("quantization"in t){const s=t.quantization;r=ia[s.dtype]}else if(t.dtype==="string"){let s=0;for(let o=0;o<n;o++)s+=io+new Uint32Array(await e(s,s+io))[0];return s}else r=ia[t.dtype];return n*r}function Bk(t,e){const n=t.name,r=t.dtype,s=t.shape,o=L(s);let a,i=0;if("quantization"in t){const u=t.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${t.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(r!=="float32")throw new Error(`Weight ${t.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${r}.`)}else throw new Error(`Weight ${t.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const l=ia[u.dtype],c=u.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(r==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){a=new Float32Array(c.length);for(let d=0;d<c.length;d++){const p=c[d];a[d]=p*u.scale+u.min}}else if(u.dtype==="float16")a=lF()(c);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(r==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);a=new Int32Array(c.length);for(let d=0;d<c.length;d++){const p=c[d];a[d]=Math.round(p*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);i+=o*l}else if(r==="string"){const u=L(t.shape);a=[];for(let l=0;l<u;l++){const c=new Uint32Array(e.slice(i,i+io))[0];i+=io;const d=new Uint8Array(e.slice(i,i+c));a.push(d),i+=c}}else{const u=ia[r];if(r==="float32")a=new Float32Array(e);else if(r==="int32")a=new Int32Array(e);else if(r==="bool")a=new Uint8Array(e);else if(r==="complex64"){a=new Float32Array(e);const l=new Float32Array(a.length/2),c=new Float32Array(a.length/2);for(let f=0;f<l.length;f++)l[f]=a[f*2],c[f]=a[f*2+1];const d=Dr(l,s,"float32"),p=Dr(c,s,"float32"),h=Ss(d,p);return d.dispose(),p.dispose(),h}else throw new Error(`Unsupported dtype in weight '${n}': ${r}`);i+=o*u}return Dr(a,s,r)}async function Xb(t,e,n){let r=new Uint8Array(e);for(;r.byteLength<n;){const{done:s,value:o}=await t.read();if(s&&o==null){const i=n-r.byteLength;throw new Error(`Reader is done but ${i} bytes are still expected`)}const a=new Uint8Array(r.length+o.byteLength);a.set(r,0),a.set(new Uint8Array(o),r.length),r=a}return r.buffer}async function Mk(t,e){const n={},r=t.getReader();let s=new ArrayBuffer(0);for(const o of e){const a=await tF(o,async(l,c)=>(s=await Xb(r,s,c),s.slice(l,c)));s=await Xb(r,s,a);const i=s.slice(0,a);s=s.slice(a);const u=Bk(o,i);if(n[o.name]=u,Fk()==="webgpu"){const l=Lk();"uploadToGPU"in l&&L(u.shape)>=z().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&l.uploadToGPU(u.dataId)}}return n}function nF(t){if(t===null)throw new Error(`Invalid input value: ${JSON.stringify(t)}`);let e=0;const n=[];t.forEach(o=>{if(e+=o.byteLength,n.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const r=new Uint8Array(e);let s=0;return n.forEach(o=>{r.set(new Uint8Array(o.buffer),s),s+=o.byteLength}),r.buffer}const A1=typeof Buffer!="undefined"&&(typeof Blob=="undefined"||typeof atob=="undefined"||typeof btoa=="undefined");function Yb(t){return A1?Buffer.byteLength(t,"utf8"):new Blob([t]).size}function rF(t){if(A1)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let r=0,s=e.length;r<s;r++)n+=String.fromCharCode(e[r]);return btoa(n)}function sF(t){if(A1){const r=Buffer.from(t,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let r=0;r<e.length;++r)n.set([e.charCodeAt(r)],r);return n.buffer}function oF(t){return Mr.join(t)}function Qb(t){const e="/";for(t=t.trim();t.endsWith(e);)t=t.slice(0,t.length-1);const n=t.split(e);return n[n.length-1]}function Vk(t,e){const n={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:e};return t.signature!=null&&(n.signature=t.signature),t.userDefinedMetadata!=null&&(n.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(n.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(n.initializerSignature=t.initializerSignature),t.trainingConfig!=null&&(n.trainingConfig=t.trainingConfig),n}function O1(t,e,n){const r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy};if(t.trainingConfig!=null&&(r.trainingConfig=t.trainingConfig),t.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=e,r.weightData=n}return t.signature!=null&&(r.signature=t.signature),t.userDefinedMetadata!=null&&(r.userDefinedMetadata=t.userDefinedMetadata),t.modelInitializer!=null&&(r.modelInitializer=t.modelInitializer),t.initializerSignature!=null&&(r.initializerSignature=t.initializerSignature),r}async function F1(t,e){let n,r;return t.weightsManifest!=null&&([n,r]=await e(t.weightsManifest)),O1(t,n,r)}function gp(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:t.modelTopology==null?0:Yb(JSON.stringify(t.modelTopology)),weightSpecsBytes:t.weightSpecs==null?0:Yb(JSON.stringify(t.weightSpecs)),weightDataBytes:t.weightData==null?0:new Mr(t.weightData).byteLength}}function ff(t){const e=[];for(const n of t)e.push(...n.weights);return e}function aF(){const t=n=>{let r=n<<13,s=0;for(;(r&8388608)===0;)s-=8388608,r<<=1;return r&=-8388609,s+=947912704,r|s},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let n=1024;n<2048;n++)e[n]=939524096+(n-1024<<13);return e}function iF(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}function uF(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}function lF(){const t=aF(),e=iF(),n=uF();return r=>{const s=new ArrayBuffer(4*r.length),o=new Uint32Array(s);for(let a=0;a<r.length;a++){const i=r[a],u=t[n[i>>10]+(i&1023)]+e[i>>10];o[a]=u}return new Float32Array(s)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ot{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return ot.instance==null&&(ot.instance=new ot),ot.instance}static registerSaveRouter(e){ot.getInstance().saveRouters.push(e)}static registerLoadRouter(e){ot.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return ot.getHandlers(e,"save")}static getLoadHandlers(e,n){return ot.getHandlers(e,"load",n)}static getHandlers(e,n,r){const s=[];return(n==="load"?ot.getInstance().loadRouters:ot.getInstance().saveRouters).forEach(a=>{const i=a(e,r);i!==null&&s.push(i)}),s}}const cF=t=>ot.registerSaveRouter(t),dF=t=>ot.registerLoadRouter(t),pF=t=>ot.getSaveHandlers(t),hF=(t,e)=>ot.getLoadHandlers(t,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bx="tensorflowjs",Mx=1,Go="models_store",Us="model_info_store";function Wk(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t=typeof window=="undefined"?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Vx(t){const e=t.result;e.createObjectStore(Go,{keyPath:"modelPath"}),e.createObjectStore(Us,{keyPath:"modelPath"})}class ua{constructor(e){if(this.indexedDB=Wk(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,n){return new Promise((r,s)=>{const o=this.indexedDB.open(Bx,Mx);o.onupgradeneeded=()=>Vx(o),o.onsuccess=()=>{const a=o.result;if(n==null){const i=a.transaction(Go,"readonly"),l=i.objectStore(Go).get(this.modelPath);l.onsuccess=()=>{if(l.result==null)return a.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(l.result.modelArtifacts)},l.onerror=c=>(a.close(),s(l.error)),i.oncomplete=()=>a.close()}else{n.weightData=Mr.join(n.weightData);const i=gp(n),u=a.transaction(Us,"readwrite");let l=u.objectStore(Us),c;try{c=l.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(p){return s(p)}let d;c.onsuccess=()=>{d=a.transaction(Go,"readwrite");const p=d.objectStore(Go);let h;try{h=p.put({modelPath:this.modelPath,modelArtifacts:n,modelArtifactsInfo:i})}catch(f){return s(f)}h.onsuccess=()=>r({modelArtifactsInfo:i}),h.onerror=f=>{l=u.objectStore(Us);const m=l.delete(this.modelPath);m.onsuccess=()=>(a.close(),s(h.error)),m.onerror=y=>(a.close(),s(h.error))}},c.onerror=p=>(a.close(),s(c.error)),u.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>s(o.error)})}}ua.URL_SCHEME="indexeddb://";const Uk=t=>z().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(ua.URL_SCHEME)?fF(t.slice(ua.URL_SCHEME.length)):null;ot.registerSaveRouter(Uk);ot.registerLoadRouter(Uk);function fF(t){return new ua(t)}function mF(t){return t.startsWith(ua.URL_SCHEME)?t.slice(ua.URL_SCHEME.length):t}class gF{constructor(){this.indexedDB=Wk()}async listModels(){return new Promise((e,n)=>{const r=this.indexedDB.open(Bx,Mx);r.onupgradeneeded=()=>Vx(r),r.onsuccess=()=>{const s=r.result,o=s.transaction(Us,"readonly"),i=o.objectStore(Us).getAll();i.onsuccess=()=>{const u={};for(const l of i.result)u[l.modelPath]=l.modelArtifactsInfo;e(u)},i.onerror=u=>(s.close(),n(i.error)),o.oncomplete=()=>s.close()},r.onerror=s=>n(r.error)})}async removeModel(e){return e=mF(e),new Promise((n,r)=>{const s=this.indexedDB.open(Bx,Mx);s.onupgradeneeded=()=>Vx(s),s.onsuccess=()=>{const o=s.result,a=o.transaction(Us,"readwrite"),i=a.objectStore(Us),u=i.get(e);let l;u.onsuccess=()=>{if(u.result==null)return o.close(),r(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const c=i.delete(e),d=()=>{l=o.transaction(Go,"readwrite");const h=l.objectStore(Go).delete(e);h.onsuccess=()=>n(u.result.modelArtifactsInfo),h.onerror=f=>r(u.error)};c.onsuccess=d,c.onerror=p=>(d(),o.close(),r(u.error))}},u.onerror=c=>(o.close(),r(u.error)),a.oncomplete=()=>{l==null?o.close():l.oncomplete=()=>o.close()}},s.onerror=o=>r(s.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ps="/",Ua="tensorflowjs_models",Gk="info",yF="model_topology",xF="weight_specs",wF="weight_data",vF="model_metadata";function Hk(t){return{info:[Ua,t,Gk].join(ps),topology:[Ua,t,yF].join(ps),weightSpecs:[Ua,t,xF].join(ps),weightData:[Ua,t,wF].join(ps),modelMetadata:[Ua,t,vF].join(ps)}}function jk(t){for(const e of Object.values(t))window.localStorage.removeItem(e)}function bF(t){const e=t.split(ps);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(ps)}function CF(t){return t.startsWith(la.URL_SCHEME)?t.slice(la.URL_SCHEME.length):t}class la{constructor(e){if(!z().getBool("IS_BROWSER")||typeof window=="undefined"||typeof window.localStorage=="undefined")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Hk(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=gp(e),o=Mr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,rF(o));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:s}}catch{throw jk(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const n={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(r==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);n.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(s==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);n.weightSpecs=s;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);n.format=i.format,n.generatedBy=i.generatedBy,n.convertedBy=i.convertedBy,i.signature!=null&&(n.signature=i.signature),i.userDefinedMetadata!=null&&(n.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(n.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(n.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(n.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return n.weightData=sF(a),n}}la.URL_SCHEME="localstorage://";const Kk=t=>z().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(la.URL_SCHEME)?SF(t.slice(la.URL_SCHEME.length)):null;ot.registerSaveRouter(Kk);ot.registerLoadRouter(Kk);function SF(t){return new la(t)}class $F{constructor(){k(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),k(typeof window=="undefined"||typeof window.localStorage!="undefined",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},n=Ua+ps,r=ps+Gk;for(let s=0;s<this.LS.length;++s){const o=this.LS.key(s);if(o.startsWith(n)&&o.endsWith(r)){const a=bF(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=CF(e);const n=Hk(e);if(this.LS.getItem(n.info)==null)throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return jk(n),r}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const li="://";class Yt{constructor(){this.managers={}}static getInstance(){return Yt.instance==null&&(Yt.instance=new Yt),Yt.instance}static registerManager(e,n){k(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(li)&&(e=e.slice(0,e.indexOf(li))),k(e.length>0,()=>"scheme must not be an empty string.");const r=Yt.getInstance();k(r.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),r.managers[e]=n}static getManager(e){const n=Yt.getInstance().managers[e];if(n==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return n}static getSchemes(){return Object.keys(Yt.getInstance().managers)}}function $h(t){if(t.indexOf(li)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Yt.getSchemes().join(",")}`);return{scheme:t.split(li)[0],path:t.split(li)[1]}}async function qk(t,e,n=!1){k(t!==e,()=>`Old path and new path are the same: '${t}'`);const r=ot.getLoadHandlers(t);k(r.length>0,()=>`Copying failed because no load handler is found for source URL ${t}.`),k(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${t}.`);const s=r[0],o=ot.getSaveHandlers(e);k(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),k(o.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${e}.`);const a=o[0],i=$h(t).scheme,u=$h(t).path,l=i===$h(t).scheme,c=await s.load();n&&l&&await Yt.getManager(i).removeModel(u);const d=await a.save(c);return n&&!l&&await Yt.getManager(i).removeModel(u),d.modelArtifactsInfo}async function kF(){const t=Yt.getSchemes(),e={};for(const n of t){const r=await Yt.getManager(n).listModels();for(const s in r){const o=n+li+s;e[o]=r[s]}}return e}async function IF(t){const e=$h(t);return Yt.getManager(e.scheme).removeModel(e.path)}async function NF(t,e){return qk(t,e,!1)}async function TF(t,e){return qk(t,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EF{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,n){return fetch(e,n)}now(){return performance.now()}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${n}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,n){return new TextDecoder(n).decode(e)}setTimeoutCustom(e,n){if(typeof window=="undefined"||!z().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,n);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},n),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{if(r.source===window&&r.data.name===this.messageName){r.stopPropagation();const s=this.functionRefs[r.data.index];s(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return wk(e)}}if(z().get("IS_BROWSER")){z().setPlatform("browser",new EF);try{Yt.registerManager(la.URL_SCHEME,new $F)}catch{}try{Yt.registerManager(ua.URL_SCHEME,new gF)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={importFetch:()=>require("node-fetch")};let my;class _F{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return z().global.fetch!=null?z().global.fetch(e,n):(my==null&&(my=RF.importFetch()),my(e,n))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,n){if(n!=="utf-8"&&n!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${n}`);return this.textEncoder.encode(e)}decode(e,n){return e.length===0?"":new this.util.TextDecoder(n).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}z().get("IS_NODE")&&!z().get("IS_BROWSER")&&z().setPlatform("node",new _F);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(t,e="float32",n){return e=e||"float32",Dn(t),new yt(t,e,n)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(t,e){const n=I(t,"x","cast");if(!pk(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&n.dtype!=="string"||e!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:e};return P.runKernel(Yi,r,s)}const Ke=D({cast_:DF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PF(t){const n={x:I(t,"x","clone","string_or_numeric")};return P.runKernel(du,n)}const gs=D({clone_:PF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L1(t,e=!1){console.log(t.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Pk();const AF={buffer:be,cast:Ke,clone:gs,print:L1};TO(AF);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OF(t,e){let n=I(t,"a","add"),r=I(e,"b","add");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(Sa,s)}const ve=D({add_:OF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(t,e){let n=I(t,"a","floorDiv"),r=I(e,"b","floorDiv");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(uu,s)}const z1=D({floorDiv_:FF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LF(t,e){let n=I(t,"a","div"),r=I(e,"b","div");if([n,r]=ut(n,r),n.dtype==="int32"&&r.dtype==="int32")return z1(n,r);const s={a:n,b:r},o={};return P.runKernel(tu,s,o)}const je=D({div_:LF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(t,e){let n=I(t,"a","mul"),r=I(e,"b","mul");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(ku,s)}const ie=D({mul_:zF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BF(t){const e=I(t,"x","abs");if(e.dtype==="complex64"){const n={x:e};return P.runKernel(jc,n)}else{const n={x:e};return P.runKernel(Dc,n)}}const vn=D({abs_:BF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MF(t){const n={x:I(t,"x","acos")};return P.runKernel(Ui,n)}const Xk=D({acos_:MF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VF(t){const n={x:I(t,"x","acosh")};return P.runKernel(Gi,n)}const Yk=D({acosh_:VF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(t){k(Array.isArray(t),()=>"The argument passed to tf.addN() must be a list of tensors"),k(t.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`);const e=t.map((s,o)=>I(s,`tensors${o}`,"addN")),n=e[0];e.forEach(s=>{if(s.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(s=>{if(!Pe(s.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=e;return P.runKernel(Pc,r)}const Qk=D({addN_:WF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UF(t,e=null,n=!1){const s={x:I(t,"x","all","bool")},o={axis:e,keepDims:n};return P.runKernel(Ac,s,o)}const Zk=D({all_:UF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GF(t,e=null,n=!1){const s={x:I(t,"x","any","bool")},o={axis:e,keepDims:n};return P.runKernel(Oc,s,o)}const Jk=D({any_:GF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HF(t,e=0){const r={x:I(t,"x","argMax")},s={axis:e};return P.runKernel(Fc,r,s)}const eI=D({argMax_:HF});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jF(t,e=0){const r={x:I(t,"x","argMin")},s={axis:e};return P.runKernel(Lc,r,s)}const tI=D({argMin_:jF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(t){const n={x:I(t,"x","asin")};return P.runKernel(Hi,n)}const nI=D({asin_:KF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(t){const n={x:I(t,"x","asinh")};return P.runKernel(ji,n)}const rI=D({asinh_:qF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XF(t){const n={x:I(t,"x","atan")};return P.runKernel(Ki,n)}const sI=D({atan_:XF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YF(t,e){let n=I(t,"a","atan2"),r=I(e,"b","atan2");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(Xi,s)}const oI=D({atan2_:YF});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(t){const n={x:I(t,"x","atanh")};return P.runKernel(qi,n)}const aI=D({atanh_:QF});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(t,e,n,r,s="NHWC",o){const a=t[3],i=[...e,a],u=An(s);return Xe(t,i,n,o,r,null,null,u)}function jt(t,e,n,r,s,o,a="channelsLast"){const[i,u]=ic(e);let l;if(a==="channelsLast")l=[i,u,t[3],t[3]];else if(a==="channelsFirst")l=[i,u,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Xe(t,l,n,r,s,o,!1,a)}function Yn(t,e,n,r,s,o,a="NDHWC"){const[i,u,l]=Wx(e);let c,d;if(a==="NDHWC")d="channelsLast",c=[i,u,l,t[4],t[4]];else if(a==="NCDHW")d="channelsFirst",c=[i,u,l,t[1],t[1]];else throw new Error(`Unknown dataFormat ${a}`);return Vr(t,c,n,r,s,!1,d,o)}function Xe(t,e,n,r,s,o,a=!1,i="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if(i==="channelsLast")[u,l,c,d]=t;else if(i==="channelsFirst")[u,d,l,c]=t;else throw new Error(`Unknown dataFormat ${i}`);const[p,h,,f]=e,[m,y]=ic(n),[g,x]=ic(r),w=ci(p,g),v=ci(h,x),{padInfo:b,outHeight:S,outWidth:$}=eL(s,l,c,m,y,w,v,o,i),N=a?f*d:f;let E;return i==="channelsFirst"?E=[u,N,S,$]:i==="channelsLast"&&(E=[u,S,$,N]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:d,outHeight:S,outWidth:$,outChannels:N,padInfo:b,strideHeight:m,strideWidth:y,filterHeight:p,filterWidth:h,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationHeight:g,dilationWidth:x,inShape:t,outShape:E,filterShape:e}}function Vr(t,e,n,r,s,o=!1,a="channelsLast",i){let[u,l,c,d,p]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[u,l,c,d,p]=t;else if(a==="channelsFirst")[u,p,l,c,d]=t;else throw new Error(`Unknown dataFormat ${a}`);const[h,f,m,,y]=e,[g,x,w]=Wx(n),[v,b,S]=Wx(r),$=ci(h,v),N=ci(f,b),E=ci(m,S),{padInfo:R,outDepth:F,outHeight:B,outWidth:M}=tL(s,l,c,d,g,x,w,$,N,E,i),V=o?y*p:y;let W;return a==="channelsFirst"?W=[u,V,F,B,M]:a==="channelsLast"&&(W=[u,F,B,M,V]),{batchSize:u,dataFormat:a,inDepth:l,inHeight:c,inWidth:d,inChannels:p,outDepth:F,outHeight:B,outWidth:M,outChannels:V,padInfo:R,strideDepth:g,strideHeight:x,strideWidth:w,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:N,effectiveFilterWidth:E,dilationDepth:v,dilationHeight:b,dilationWidth:S,inShape:t,outShape:W,filterShape:e}}function ZF(t,e,n,r,s){r==null&&(r=B1(t,e,n));const o=t[0],a=t[1],i=uc((o-e+2*r)/n+1,s),u=uc((a-e+2*r)/n+1,s);return[i,u]}function JF(t,e,n,r,s,o){s==null&&(s=B1(t,e[0],r[0]));const a=[0,0,0,n];for(let i=0;i<3;i++)t[i]+2*s>=e[i]&&(a[i]=uc((t[i]-e[i]+2*s)/r[i]+1,o));return a}function B1(t,e,n,r=1){const s=ci(e,r);return Math.floor((t[0]*(n-1)-n+s)/2)}function ic(t){return typeof t=="number"?[t,t,t]:t.length===2?[t[0],t[1],1]:t}function Wx(t){return typeof t=="number"?[t,t,t]:t}function ci(t,e){return e<=1?t:t+(t-1)*(e-1)}function eL(t,e,n,r,s,o,a,i,u){let l,c,d;if(typeof t=="number"){l={top:t,bottom:t,left:t,right:t,type:t===0?"VALID":"NUMBER"};const h=ZF([e,n],o,r,t,i);c=h[0],d=h[1]}else if(t==="same"){c=Math.ceil(e/r),d=Math.ceil(n/s);const p=Math.max(0,(c-1)*r+o-e),h=Math.max(0,(d-1)*s+a-n),f=Math.floor(p/2),m=p-f,y=Math.floor(h/2),g=h-y;l={top:f,bottom:m,left:y,right:g,type:"SAME"}}else if(t==="valid")l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((e-o+1)/r),d=Math.ceil((n-a+1)/s);else if(typeof t=="object"){const p=u==="channelsLast"?t[1][0]:t[2][0],h=u==="channelsLast"?t[1][1]:t[2][1],f=u==="channelsLast"?t[2][0]:t[3][0],m=u==="channelsLast"?t[2][1]:t[3][1];l={top:p,bottom:h,left:f,right:m,type:p===0&&h===0&&f===0&&m===0?"VALID":"EXPLICIT"},c=uc((e-o+p+h)/r+1,i),d=uc((n-a+f+m)/s+1,i)}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:l,outHeight:c,outWidth:d}}function tL(t,e,n,r,s,o,a,i,u,l,c){let d,p,h,f;if(t==="valid"&&(t=0),typeof t=="number"){d={top:t,bottom:t,left:t,right:t,front:t,back:t,type:t===0?"VALID":"NUMBER"};const y=JF([e,n,r,1],[i,u,l],1,[s,o,a],t,c);p=y[0],h=y[1],f=y[2]}else if(t==="same"){p=Math.ceil(e/s),h=Math.ceil(n/o),f=Math.ceil(r/a);const m=(p-1)*s+i-e,y=(h-1)*o+u-n,g=(f-1)*a+l-r,x=Math.floor(m/2),w=m-x,v=Math.floor(y/2),b=y-v,S=Math.floor(g/2),$=g-S;d={top:v,bottom:b,left:S,right:$,front:x,back:w,type:"SAME"}}else throw Error(`Unknown padding parameter: ${t}`);return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}function uc(t,e){if(!e)return Math.trunc(t);switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function lc(t){const[e,n,r]=ic(t);return e===1&&n===1&&r===1}function Dt(t,e){return lc(t)||lc(e)}function ca(t){return ic(t).every(e=>e>0)}function An(t){if(t==="NHWC")return"channelsLast";if(t==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}function gr(t,e,n){if(n!=null){if(typeof e=="string")throw Error(`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);if(typeof e=="number")k(aa(e),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${e}.`);else if(typeof e=="object")e.forEach(r=>{r.forEach(s=>{k(aa(s),()=>`Error in ${t}: pad must be an integer when using dimRoundingMode ${n} but got pad ${s}.`)})});else throw Error(`Error in ${t}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(t,e){const r={x:I(t,"x","reshape","string_or_numeric")},s={shape:e};return P.runKernel(Wd,r,s)}const Y=D({reshape_:nL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(t,e,n,r,s){const o=I(t,"x","avgPool","float32"),a=1;k(Dt(n,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`);let i=o,u=!1;o.rank===3&&(u=!0,i=Y(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),gr("avgPool",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s};let d=P.runKernel(zc,l,c);return d=Ke(d,o.dtype),u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const M1=D({avgPool_:rL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sL(t,e,n,r,s,o="NDHWC"){const a=I(t,"x","avgPool3d","float32");let i=a,u=!1;a.rank===4&&(u=!0,i=Y(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),k(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),k(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),gr("avgPool3d",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o};let d=P.runKernel(Bc,l,c);return d=Ke(d,i.dtype),u?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const iI=D({avgPool3d_:sL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(t,e=0){k(t.length>=1,()=>"Pass at least one tensor to concat");const n=ac(t,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),n.length===1)return gs(n[0]);const r=n,s={axis:e};return P.runKernel(Kc,r,s)}const Gt=D({concat_:oL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(t,e,n=!1,r=!1){let s=I(t,"a","matMul"),o=I(e,"b","matMul");[s,o]=ut(s,o);const a={a:s,b:o},i={transposeA:n,transposeB:r};return P.runKernel(Mc,a,i)}const Be=D({matMul_:aL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iL(t){const n={x:I(t,"x","sigmoid","float32")};return P.runKernel(Lu,n)}const Zo=D({sigmoid_:iL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uL(t,e,n){const r=I(t,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");const s={x:r},o={begin:e,size:n};return P.runKernel(Yd,s,o)}const Ue=D({slice_:uL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lL(t){const n={x:I(t,"x","tanh","float32")};return P.runKernel(Uu,n)}const mf=D({tanh_:lL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(t,e,n,r,s,o){const a=I(t,"forgetBias","basicLSTMCell"),i=I(e,"lstmKernel","basicLSTMCell"),u=I(n,"lstmBias","basicLSTMCell"),l=I(r,"data","basicLSTMCell"),c=I(s,"c","basicLSTMCell"),d=I(o,"h","basicLSTMCell"),p=Gt([l,d],1),h=Be(p,i),f=ve(h,u),m=f.shape[0],y=f.shape[1]/4,g=[m,y],x=Ue(f,[0,0],g),w=Ue(f,[0,y],g),v=Ue(f,[0,y*2],g),b=Ue(f,[0,y*3],g),S=ve(ie(Zo(x),mf(w)),ie(c,Zo(ve(a,v)))),$=ie(mf(S),Zo(b));return[S,$]}const uI=D({basicLSTMCell_:cL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dL(t,e,n){const r=I(t,"x","batchToSpaceND"),s=e.reduce((i,u)=>i*u);k(r.rank>=1+e.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${e.length}`),k(n.length===e.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`),k(r.shape[0]%s===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${s}`);const o={x:r},a={blockShape:e,crops:n};return P.runKernel(Vc,o,a)}const V1=D({batchToSpaceND_:dL});function pL(t){let e;return t.rank===0||t.rank===1?e=Y(t,[1,1,1,t.size]):t.rank===2?e=Y(t,[1,1,t.shape[0],t.shape[1]]):t.rank===3?e=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]):e=t,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hL(t,e,n,r,s,o){o==null&&(o=.001);const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),u=I(n,"variance","batchNorm");let l;s!=null&&(l=I(s,"scale","batchNorm"));let c;r!=null&&(c=I(r,"offset","batchNorm")),k(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(c==null||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const p={x:pL(a),scale:l,offset:c,mean:i,variance:u},h={varianceEpsilon:o},f=P.runKernel(md,p,h);return Y(f,a.shape)}const yp=D({batchNorm_:hL});function fL(t,e,n,r,s,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),u=I(n,"variance","batchNorm");let l;s!=null&&(l=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),k(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),k(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),k(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&k(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),yp(a,i,u,c,l,o)}const lI=D({batchNorm2d_:fL});function mL(t,e,n,r,s,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),u=I(n,"variance","batchNorm");let l;s!=null&&(l=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),k(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),k(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),k(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&k(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),yp(a,i,u,c,l,o)}const cI=D({batchNorm3d_:mL});function gL(t,e,n,r,s,o){const a=I(t,"x","batchNorm"),i=I(e,"mean","batchNorm"),u=I(n,"variance","batchNorm");let l;s!=null&&(l=I(s,"scale","batchNorm"));let c;return r!=null&&(c=I(r,"offset","batchNorm")),k(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),k(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),k(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&k(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&k(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),yp(a,i,u,c,l,o)}const dI=D({batchNorm4d_:gL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yL(t,e,n){const r=I(t,"x","bincount"),s=I(e,"weights","bincount");k(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),k(n>=0,()=>`size must be non-negative, but got ${n}.`),k(s.size===r.size||s.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`);const o={x:r,weights:s},a={size:n};return P.runKernel(Wc,o,a)}const W1=D({bincount_:yL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xL(t,e){const n=I(t,"x","bitwiseAnd"),r=I(e,"y","bitwiseAnd");if(!Pe(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);const s={a:n,b:r};return P.runKernel(Uc,s)}const pI=D({bitwiseAnd_:xL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(t,e){const n=I(t,"s0","broadcastArgs","int32"),r=I(e,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return P.runKernel(Gc,s)}const hI=D({broadcastArgs_:wL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(t,e){let n=I(t,"broadcastTo","x");const r=n.shape;if(Dn(e),e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const l=n.shape.slice();for(;l.length<e.length;)l.unshift(1);n=Y(n,l)}const s=n.shape,o=Array.from(e);for(let l=e.length-1;l>=0;l--)if(s[l]===e[l])o[l]=1;else if(n.shape[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${e}].`);if(o.map((l,c)=>l>1?c:-1).filter(l=>l>=0).length===0)return gs(n);const i={x:n},u={reps:o};return P.runKernel(Gu,i,u)}const di=D({broadcastTo_:vL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bL(t){const n={x:I(t,"x","ceil","float32")};return P.runKernel(Qi,n)}const fI=D({ceil_:bL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ju(t,e,n){Dn(t),n=n||yo(e);const r={shape:t,value:e,dtype:n};return P.runKernel(hd,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CL(t,e,n){const r=I(t,"x","clipByValue");if(k(e<=n,()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`),e===n)return ju(r.shape,e,r.dtype);const s={x:r},o={clipValueMin:e,clipValueMax:n};return P.runKernel(Zi,s,o)}const mI=D({clipByValue_:CL});function SL(t){return Gt(t,0)}const gI=D({concat1d_:SL});function $L(t,e){return Gt(t,e)}const yI=D({concat2d_:$L});function kL(t,e){return Gt(t,e)}const xI=D({concat3d_:kL});function IL(t,e){return Gt(t,e)}const wI=D({concat4d_:IL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NL(t,e,n,r,s="NHWC",o=[1,1],a){const i=I(t,"x","conv2d","float32"),u=I(e,"filter","conv2d","float32");let l=i,c=!1;i.rank===3&&(c=!0,l=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(l.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),k(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),gr("conv2d",r,a);const d=s==="NHWC"?l.shape[3]:l.shape[1];k(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),k(Dt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),k(ca(o),()=>"Error in conv2D: Dilated rates should be larger than 0."),k(ca(n),()=>"Error in conv2D: Strides should be larger than 0.");const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=P.runKernel(qc,p,h);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const xp=D({conv2d_:NL});function TL(t,e,n,r,s="NWC",o=1,a){const i=I(t,"x","conv1d"),u=I(e,"filter","conv1d");let l=i,c=!1;i.rank===2&&(c=!0,l=Y(i,[1,i.shape[0],i.shape[1]])),k(l.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),k(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),gr("conv1d",r,a),k(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),k(Dt(n,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${o}'`),k(ca(o),()=>"Error in conv1D: Dilated rates should be larger than 0."),k(ca(n),()=>"Error in conv1D: Stride should be larger than 0."),k(s==="NWC",()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const d=Y(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=Y(l,[l.shape[0],1,l.shape[1],l.shape[2]]),y=xp(p,d,[1,n],r,"NHWC",[1,o],a);return c?Y(y,[y.shape[2],y.shape[3]]):Y(y,[y.shape[0],y.shape[2],y.shape[3]])}const vI=D({conv1d_:TL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EL(t,e,n,r,s,o="NHWC",a){k(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let i=t,u=e,l=!1;e.rank===3&&(l=!0,u=Y(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,t[0],t[1],t[2]]),k(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),k(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),k(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?u.shape[3]:u.shape[1];k(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),k(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),gr("conv2dDerInput",s,a);const p={dy:u,filter:n},h={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,inputShape:i},f=P.runKernel(Yc,p,h);return l?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const bI=D({conv2DBackpropInput_:EL});function RL(t,e,n,r,s,o){const a=I(t,"x","conv2dTranspose"),i=I(e,"filter","conv2dTranspose");return bI(n,a,i,r,s,"NHWC",o)}const CI=D({conv2dTranspose_:RL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(t,e,n,r,s="NDHWC",o=[1,1,1]){const a=I(t,"x","conv3d"),i=I(e,"filter","conv3d");let u=a,l=!1;a.rank===4&&(l=!0,u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),k(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),k(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),k(Dt(n,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),k(s==="NDHWC",()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`),k(ca(o),()=>"Error in conv3D: Dilated rates should be larger than 0."),k(ca(n),()=>"Error in conv3D: Strides should be larger than 0.");const c={x:u,filter:i},d={strides:n,pad:r,dataFormat:s,dilations:o},p=P.runKernel(Qc,c,d);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const SI=D({conv3d_:_L});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DL(t,e,n,r,s){k(t.length===e.rank,()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`);let o=t,a=e,i=!1;e.rank===4&&(i=!0,a=Y(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const u=o[4],l=a.shape[4];k(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),k(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),k(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),k(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),k(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:a,filter:n},d={pad:s,strides:r,inputShape:o},p=P.runKernel(Zc,c,d);return i?Y(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const PL=D({conv3DBackpropInput_:DL});function AL(t,e,n,r,s){const o=I(t,"x","conv3dTranspose"),a=I(e,"filter","conv3dTranspose");return PL(n,o,a,r,s)}const $I=D({conv3dTranspose_:AL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(t){const n={x:I(t,"x","cos","float32")};return P.runKernel(Ji,n)}const kI=D({cos_:OL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(t){const n={x:I(t,"x","cosh","float32")};return P.runKernel(eu,n)}const II=D({cosh_:FL});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LL(t,e=0,n=!1,r=!1){const o={x:I(t,"x","cumprod")},a={axis:e,exclusive:n,reverse:r};return P.runKernel(Jc,o,a)}const NI=D({cumprod_:LL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zL(t,e=0,n=!1,r=!1){const o={x:I(t,"x","cumsum")},a={axis:e,exclusive:n,reverse:r};return P.runKernel(ed,o,a)}const TI=D({cumsum_:zL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BL(t,e,n,r=!1){const s=I(t,"x","denseBincount"),o=I(e,"weights","denseBincount");k(s.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),k(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),k(n>=0,()=>`size must be non-negative, but got ${n}.`),k(o.size===s.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${o.shape}.`);const a={x:s,weights:o},i={size:n,binaryOutput:r};return P.runKernel(nd,a,i)}const EI=D({denseBincount_:BL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(t,e,n="NHWC"){const r=I(t,"x","depthToSpace","float32"),s=n==="NHWC"?r.shape[1]:r.shape[2],o=n==="NHWC"?r.shape[2]:r.shape[3],a=n==="NHWC"?r.shape[3]:r.shape[1];k(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),k(s*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${e}  for depthToSpace with input shape
    ${r.shape}`),k(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${r.shape}`),k(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:e,dataFormat:n};return P.runKernel(rd,i,u)}const RI=D({depthToSpace_:ML});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VL(t,e,n,r,s="NHWC",o=[1,1],a){const i=I(t,"x","depthwiseConv2d","float32"),u=I(e,"filter","depthwiseConv2d","float32");let l=i,c=!1;i.rank===3&&(c=!0,l=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(l.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),k(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const d=s==="NHWC"?l.shape[3]:l.shape[1];k(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),gr("depthwiseConv2d",r,a);const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a},f=P.runKernel(sd,p,h);return c?Y(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Tm=D({depthwiseConv2d_:VL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WL(t){const n={x:I(t,"x","diag")};return P.runKernel(id,n)}const _I=D({diag_:WL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(t,e,n,r,s=[1,1],o="NHWC"){const a=I(t,"x","dilation2d"),i=I(e,"filter","dilation2d");k(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),k(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),k(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let u=a,l=!1;a.rank===3&&(u=Y(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=!0),k(u.shape[3]===i.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${i.shape[2]}`);const c={x:u,filter:i},d={strides:n,pad:r,dilations:s},p=P.runKernel(ud,c,d);return l?Y(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const DI=D({dilation2d_:UL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $s(t,e){const n=t.length,r=[];for(let s=0;s<n;s++){const o=n-1-s,a=t[o]||1;(e[e.length-1-s]||1)>1&&a===1&&r.unshift(o)}return r}function U1(t,e){const n=[];for(let r=0;r<e.length;r++){const s=t[t.length-r-1],o=e.length-r-1,a=e[o];(s==null||s===1&&a>1)&&n.unshift(o)}return n}function $e(t,e){const n=Math.max(t.length,e.length),r=new Array(n);for(let s=0;s<n;s++){let o=t[t.length-s-1];o==null&&(o=1);let a=e[e.length-s-1];if(a==null&&(a=1),o===1)r[n-s-1]=a;else if(a===1)r[n-s-1]=o;else if(o!==a){const i=`Operands could not be broadcast together with shapes ${t} and ${e}.`;throw Error(i)}else r[n-s-1]=o}return r}var GL=Object.freeze(Object.defineProperty({__proto__:null,getBroadcastDims:$s,getReductionAxes:U1,assertAndGetBroadcastShape:$e},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(t,e){let n=I(t,"a","equal","string_or_numeric"),r=I(e,"b","equal","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(su,s)}const G1=D({equal_:HL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jL(t,e,n){const r=I(e,"a","where"),s=I(n,"b","where"),o=I(t,"condition","where","bool"),a=$e($e(o.shape,r.shape),s.shape),i=di(o,a),u=di(r,a),l=di(s,a),c={condition:i,t:u,e:l};return P.runKernel(Xd,c)}const ys=D({where_:jL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(t){const n={x:I(t,"x","zerosLike")};return P.runKernel(dp,n)}const En=D({zerosLike_:KL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(t,e){let n=I(t,"a","div"),r=I(e,"b","div");[n,r]=ut(n,r);const s=je(n,r),o=En(s),a=G1(r,o);return ys(a,o,s)}const PI=D({divNoNan_:qL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(t,e){const n=I(t,"t1","dot"),r=I(e,"t2","dot");k((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const s=n.rank===1?n.size:n.shape[1],o=r.rank===1?r.size:r.shape[0];if(k(s===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${o}.`),n.rank===1&&r.rank===1){const a=Y(n,[1,-1]),i=Y(r,[-1,1]),u=Be(a,i);return Y(u,[])}else if(n.rank===1&&r.rank===2){const a=Y(n,[1,-1]),i=Y(r,[r.shape[0],r.shape[1]]),u=Be(a,i);return Y(u,[u.size])}else if(n.rank===2&&r.rank===1){const a=Y(r,[-1,1]),i=Be(n,a);return Y(i,[i.size])}else{const a=Y(r,[r.shape[0],r.shape[1]]);return Be(n,a)}}const AI=D({dot_:XL});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(t,...e){const n=e.map((s,o)=>I(s,`tensors${o}`,"einsum")),r={equation:t};return P.runKernel(cd,n,r)}const Fo=D({einsum_:YL});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(t){const n={x:I(t,"x","elu","float32")};return P.runKernel(nu,n)}const H1=D({elu_:QL});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(t,e){const n=I(t,"x","ensureShape","string_or_numeric");if(!ck(n.shape,e))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${e}`);return t}const OI=D({ensureShape_:ZL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JL(t){let e=I(t,"x","erf");k(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Ke(e,"float32"));const n={x:e};return P.runKernel(ru,n)}const FI=D({erf_:JL});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function LI(t,e,n){const r=t.length+e.length,s=[];let o=0,a=0;for(let i=0;i<r;i++)n.indexOf(i)===-1?s.push(t[o++]):s.push(e[a++]);return s}function wt(t,e){const n=[],r=t.length;for(let o=0;o<r;o++)e.indexOf(o)===-1&&n.push(t[o]);const s=e.map(o=>t[o]);return[n,s]}function vt(t,e){const n=e.map(r=>1);return LI(t,n,e)}function bt(t,e,n){k(j1(e,n),()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`)}function Ye(t,e){if(j1(t,e))return null;const n=[];for(let r=0;r<e;++r)t.indexOf(r)===-1&&n.push(r);return t.forEach(r=>n.push(r)),n}function ka(t){return t.map((e,n)=>[n,e]).sort((e,n)=>e[1]-n[1]).map(e=>e[0])}function Qe(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ez(t,e=null,n=!1){const s={x:I(t,"x","max")},o={reductionIndices:e,keepDims:n};return P.runKernel(Sd,s,o)}const Jo=D({max_:ez});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tz(t,e=null,n=!1){const s={x:I(t,"x","min")},o={axis:e,keepDims:n};return P.runKernel(Td,s,o)}const gf=D({min_:tz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nz(t,e){let n=I(t,"base","pow"),r=I(e,"exp","pow");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(Nu,s)}const Ni=D({pow_:nz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Re(t,e){if((Tt(t)&&e!=="string"||Array.isArray(t))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Tt(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return wo(t,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rz(t){const n={x:I(t,"x","sqrt","float32")};return P.runKernel(Bu,n)}const Zr=D({sqrt_:rz});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sz(t){const e=I(t,"x","square"),n={};return P.runKernel("Square",{x:e},n)}const dr=D({square_:sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(t,e=null,n=!1){let r=I(t,"x","sum");r.dtype==="bool"&&(r=Ke(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return P.runKernel(Qd,s,o)}const He=D({sum_:oz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function az(t,e="euclidean",n=null,r=!1){t=I(t,"x","norm");const s=zI(t,e,n);let o=s.shape;if(r){const a=Ie(n,t.shape);o=vt(s.shape,a)}return Y(s,o)}function zI(t,e,n=null){if(t.rank===0)return vn(t);if(t.rank!==1&&n===null)return zI(Y(t,[-1]),e,n);if(t.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(e===1)return He(vn(t),n);if(e===1/0)return Jo(vn(t),n);if(e===-1/0)return gf(vn(t),n);if(e==="euclidean"||e===2)return Zr(He(Ni(vn(t),Re(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&n.length===2){if(e===1)return Jo(He(vn(t),n[0]),n[1]-1);if(e===1/0)return Jo(He(vn(t),n[1]),n[0]);if(e===-1/0)return gf(He(vn(t),n[1]),n[0]);if(e==="fro"||e==="euclidean")return Zr(He(dr(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const wp=D({norm_:az});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(t,e=null,n=!1){return wp(t,"euclidean",e,n)}const BI=D({euclideanNorm_:iz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(t){const n={x:I(t,"x","exp")};return P.runKernel(ou,n)}const uo=D({exp_:uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lz(t,e=0){const n=I(t,"x","expandDims","string_or_numeric");k(e<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},s={dim:e};return P.runKernel(dd,r,s)}const us=D({expandDims_:lz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cz(t){const n={x:I(t,"x","expm1")};return P.runKernel(au,n)}const MI=D({expm1_:cz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dz(t,e){const n=I(t,"x","tile","string_or_numeric");k(n.rank===e.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`);const r={x:n},s={reps:e};return P.runKernel(Gu,r,s)}const pi=D({tile_:dz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pz(t,e,n,r="float32"){e==null&&(e=t);const s=be([t,e],r),o=t<=e?t:e;for(let i=0;i<o;++i)s.set(1,i,i);const a=Y(s.toTensor(),[t,e]);if(n==null)return a;if(n.length===1)return pi(us(a,0),[n[0],1,1]);if(n.length===2)return pi(us(us(a,0),0),[n[0],n[1],1,1]);if(n.length===3)return pi(us(us(us(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const K1=D({eye_:pz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(t){const n={x:I(t,"x","floor","float32")};return P.runKernel(iu,n)}const q1=D({floor_:hz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(t,e,n=0,r=0){const s=I(t,"x","gather"),o=I(e,"indices","gather","int32"),a={x:s,indices:o},i={axis:n,batchDims:r};return P.runKernel(gd,a,i)}const X1=D({gather_:fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mz(t,e){let n=I(t,"a","greater","string_or_numeric"),r=I(e,"b","greater","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(lu,s)}const vp=D({greater_:mz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(t,e){let n=I(t,"a","greaterEqual","string_or_numeric"),r=I(e,"b","greaterEqual","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(cu,s)}const Y1=D({greaterEqual_:gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yz(t){const n={input:I(t,"input","imag")};return P.runKernel(wd,n)}const bp=D({imag_:yz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(t){const n={x:I(t,"x","isFinite")};return P.runKernel(pu,n)}const VI=D({isFinite_:xz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(t){const n={x:I(t,"x","isInf")};return P.runKernel(hu,n)}const WI=D({isInf_:wz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(t){const n={x:I(t,"x","isNaN")};return P.runKernel(fu,n)}const UI=D({isNaN_:vz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bz(t,e=.2){const r={x:I(t,"x","leakyRelu")},s={alpha:e};return P.runKernel(vd,r,s)}const Q1=D({leakyRelu_:bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cz(t,e){let n=I(t,"a","less","string_or_numeric"),r=I(e,"b","less","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(mu,s)}const yf=D({less_:Cz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(t,e){let n=I(t,"a","lessEqual","string_or_numeric"),r=I(e,"b","lessEqual","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(gu,s)}const Em=D({lessEqual_:Sz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GI(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return P.runKernel(bd,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $z(t,e=5,n=1,r=1,s=.5){const o=I(t,"x","localResponseNormalization");k(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),k(aa(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=Y(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const u={x:a},l={depthRadius:e,bias:n,alpha:r,beta:s},c=P.runKernel(Cd,u,l);return i?Y(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const HI=D({localResponseNormalization_:$z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(t){const n={x:I(t,"x","log","float32")};return P.runKernel(yu,n)}const Ti=D({log_:kz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iz(t){const n={x:I(t,"x","log1p")};return P.runKernel(xu,n)}const Z1=D({log1p_:Iz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nz(t){return k(oo(t),()=>"The f passed in grad(f) must be a function"),(e,n)=>{const r=I(e,"x","tf.grad","string_or_numeric"),s=n!=null?I(n,"dy","tf.grad"):null;return P.tidy(()=>{const{value:o,grads:a}=P.gradients(()=>t(r),[r],s);return s!=null&&_t(o.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Rm(a),a[0]})}}function Tz(t){return k(oo(t),()=>"The f passed in grads(f) must be a function"),(e,n)=>{k(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=ac(e,"args","tf.grads","string_or_numeric"),s=n!=null?I(n,"dy","tf.grads"):null;return P.tidy(()=>{const{value:o,grads:a}=P.gradients(()=>t(...r),r,s);return s!=null&&_t(o.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rm(a),a})}}function Ez(t){return k(oo(t),()=>"The f passed in valueAndGrad(f) must be a function"),(e,n)=>{k(e instanceof ct,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),k(n==null||n instanceof ct,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:s}=P.gradients(()=>t(e),[e],n);return Rm(r),{grad:r[0],value:s}}}function Rz(t){return k(oo(t),()=>"The f passed in valueAndGrads(f) must be a function"),(e,n)=>{k(Array.isArray(e)&&e.every(s=>s instanceof ct),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),k(n==null||n instanceof ct,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=P.gradients(()=>t(...e),e,n);return n!=null&&_t(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Rm(r.grads),r}}function jI(t,e){k(oo(t),()=>"The f passed in variableGrads(f) must be a function"),k(e==null||Array.isArray(e)&&e.every(l=>l instanceof oc),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=e!=null;if(!n){e=[];for(const l in P.registeredVariables)e.push(P.registeredVariables[l])}const r=n?e.filter(l=>!l.trainable):null,s=e.length;e=e.filter(l=>l.trainable),k(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`);const o=!0,{value:a,grads:i}=P.gradients(t,e,null,o);k(i.some(l=>l!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),k(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const u={};return e.forEach((l,c)=>{i[c]!=null&&(u[l.name]=i[c])}),r!=null&&r.forEach(l=>u[l.name]=null),{value:a,grads:u}}function Jr(t){return P.customGrad(t)}function Rm(t){if(t.filter(n=>n==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(t){const n={x:I(t,"x","neg")};return P.runKernel(_d,n)}const Pr=D({neg_:_z});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dz(t){const n={x:I(t,"x","softplus")};return P.runKernel(zu,n)}const J1=D({softplus_:Dz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pz(t){const e=I(t,"x","logSigmoid");return Jr(r=>({value:Pr(J1(Pr(r))),gradFunc:a=>ie(a,Zo(Pr(r)))}))(e)}const KI=D({logSigmoid_:Pz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(t,e){let n=I(t,"a","sub"),r=I(e,"b","sub");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel(Vu,s)}const Ne=D({sub_:Az});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oz(t,e=-1){const n=I(t,"logits","logSoftmax");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);return Jr((s,o)=>{const i=Jo(s,e,!0),u=Ne(s,i),l=Ne(Ke(u,"float32"),Ti(He(uo(u),e,!0)));return o([l]),{value:l,gradFunc:(d,p)=>{const[h]=p,f=!0,m=uo(h);return Ne(d,ie(He(d,e,f),m))}}})(n)}const qI=D({logSoftmax_:Oz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(t,e=null,n=!1){const r=I(t,"x","logSumExp"),s=Ie(e,r.shape),o=Jo(r,s,!0),a=Ne(r,o),i=uo(a),u=He(i,s),l=Ti(u),c=ve(Y(o,l.shape),l);if(n){const d=vt(c.shape,s);return Y(c,d)}return c}const ew=D({logSumExp_:Fz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(t,e){const n=I(t,"a","logicalAnd","bool"),r=I(e,"b","logicalAnd","bool");$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(wu,s)}const cc=D({logicalAnd_:Lz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zz(t){const n={x:I(t,"x","logicalNot","bool")};return P.runKernel(vu,n)}const tw=D({logicalNot_:zz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(t,e){const n=I(t,"a","logicalOr","bool"),r=I(e,"b","logicalOr","bool");$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(bu,s)}const nw=D({logicalOr_:Bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mz(t,e){const n=I(t,"a","logicalXor","bool"),r=I(e,"b","logicalXor","bool");return $e(n.shape,r.shape),cc(nw(t,e),tw(cc(t,e)))}const XI=D({logicalXor_:Mz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zp=2147483648;function Vz(t,e,n="left"){const r=I(t,"sortedSequence","searchSorted"),s=I(e,"values","searchSorted"),o=r.shape[r.shape.length-1],a=s.shape[s.shape.length-1],i=Y(r,[-1,o]),u=Y(s,[-1,a]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(L(u.shape)>=Zp)throw new Error(`values tensor size must less than ${Zp}`);if(i.shape[1]>=Zp)throw new Error(`trailing dim_size must less than ${Zp} for int32 output type, was ${i.shape[1]}`);const l={sortedSequence:i,values:u},c={side:n};return P.runKernel(qd,l,c)}const _m=D({searchSorted_:Vz});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YI(t,e){return _m(t,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(t,e,n,r,s){const o=I(t,"x","maxPool"),a=1;let i=o,u=!1;o.rank===3&&(u=!0,i=Y(o,[1,o.shape[0],o.shape[1],o.shape[2]])),k(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),k(Dt(n,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`),gr("maxPool",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s},d=P.runKernel($d,l,c);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const rw=D({maxPool_:Wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(t,e=[1,1,1],n,r,s,o="NDHWC"){const a=I(t,"x","maxPool3d");let i=a,u=!1;a.rank===4&&(u=!0,i=Y(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),k(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),k(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),gr("maxPool3d",r,s);const l={x:i},c={filterSize:e,strides:n,pad:r,dimRoundingMode:s,dataFormat:o},d=P.runKernel(kd,l,c);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const QI=D({maxPool3d_:Uz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(t,e,n,r,s=!1){const a={x:I(t,"x","maxPoolWithArgmax")},i={filterSize:e,strides:n,pad:r,includeBatchInIndex:s},u=P.runKernel(Id,a,i);return{result:u[0],indexes:u[1]}}const ZI=D({maxPoolWithArgmax_:Gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(t,e){let n=I(t,"a","maximum"),r=I(e,"b","maximum");[n,r]=ut(n,r),n.dtype==="bool"&&(n=Ke(n,"int32"),r=Ke(r,"int32")),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(Cu,s)}const sw=D({maximum_:Hz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(t,e=null,n=!1){const s={x:I(t,"x","mean")},o={axis:e,keepDims:n};return P.runKernel(Nd,s,o)}const dc=D({mean_:jz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(t,e="float32"){if(Dn(t),e==="complex64"){const r=ks(t,"float32"),s=ks(t,"float32");return Ss(r,s)}const n=Rt(L(t),e);return P.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gs(t,e="float32"){if(Dn(t),e==="complex64"){const r=Gs(t,"float32"),s=ks(t,"float32");return Ss(r,s)}const n=im(L(t),e);return P.makeTensor(n,t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JI(t,e,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(t===void 0)return[];let r=I(t,"x","meshgrid",t instanceof ct?t.dtype:"float32");if(e===void 0)return[r];let s=I(e,"y","meshgrid",e instanceof ct?e.dtype:"float32");const o=L(r.shape),a=L(s.shape);return n==="xy"?(r=Y(r,[1,-1]),s=Y(s,[-1,1]),[Be(Gs([a,1],r.dtype),r),Be(s,Gs([1,o],s.dtype))]):(r=Y(r,[-1,1]),s=Y(s,[1,-1]),[Be(r,Gs([1,a],r.dtype)),Be(Gs([o,1],s.dtype),s)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(t,e){let n=I(t,"a","minimum"),r=I(e,"b","minimum");[n,r]=ut(n,r),n.dtype==="bool"&&(n=Ke(n,"int32"),r=Ke(r,"int32")),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(Su,s)}const pc=D({minimum_:Kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(t,e,n){k(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=I(t,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");k(e.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${e.length}.`);const s=n==="reflect"?1:0;for(let i=0;i<r.rank;i++)k(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),k(e[i][0]>=0&&e[i][0]<=r.shape[i]-s&&e[i][1]>=0&&e[i][1]<=r.shape[i]-s,()=>`Padding in dimension ${i} cannot be greater than or equal to ${r.shape[i]-s} or less than 0 for input of shape ${r.shape}`);const o={paddings:e,mode:n},a={x:r};return P.runKernel(Ed,a,o)}const eN=D({mirrorPad_:qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(t,e){let n=I(t,"a","mod"),r=I(e,"b","mod");[n,r]=ut(n,r);const s={a:n,b:r};return P.runKernel($u,s)}const tN=D({mod_:Xz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(t,e=null,n=!1){t=I(t,"x","moments");const r=Ie(e,t.shape),s=dc(t,r,n);let o=s.shape;n||(o=vt(s.shape,r));const a=dr(Ne(Ke(t,"float32"),Y(s,o))),i=dc(a,r,n);return{mean:s,variance:i}}const nN=D({moments_:Yz});function Qz(t,e,n,r){const s=I(e,"data","multiRNNCell"),o=ac(n,"c","multiRNNCell"),a=ac(r,"h","multiRNNCell");let i=s;const u=[];for(let d=0;d<t.length;d++){const p=t[d](i,o[d],a[d]);u.push(p[0]),u.push(p[1]),i=p[1]}const l=[],c=[];for(let d=0;d<u.length;d+=2)l.push(u[d]),c.push(u[d+1]);return[l,c]}const rN=D({multiRNNCell_:Qz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(t,e,n,r=!1){const s=I(t,"logits","multinomial"),o=s.size,a=s.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(a>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${a}`);n=n||Math.random();const u={logits:a===1?Y(s,[1,-1]):s},l={numSamples:e,seed:n,normalized:r},c=P.runKernel(Rd,u,l);return a===1?Y(c,[c.size]):c}const sN=D({multinomial_:Zz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(t,e){let n=I(t,"a","notEqual","string_or_numeric"),r=I(e,"b","notEqual","string_or_numeric");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r};return P.runKernel(Iu,s)}const ow=D({notEqual_:Jz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(t,e,n=1,r=0,s="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:I(t,"indices","oneHot","int32")},i={dtype:s,depth:e,onValue:n,offValue:r};return P.runKernel(Od,a,i)}const xf=D({oneHot_:eB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(t){const n={x:I(t,"x","onesLike")};return P.runKernel(Ad,n)}const oN=D({onesLike_:tB});function nB(t,e){const n=I(t,"v1","outerProduct"),r=I(e,"v2","outerProduct");k(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const s=Y(n,[-1,1]),o=Y(r,[1,-1]);return Be(s,o)}const aN=D({outerProduct_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(t,e,n=0){const r=I(t,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:e,constantValue:n},o={x:r};return P.runKernel(Ld,o,s)}const Ku=D({pad_:rB});function sB(t,e,n=0){return k(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),Ku(t,[e],n)}const iN=D({pad1d_:sB});function oB(t,e,n=0){return k(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ku(t,e,n)}const uN=D({pad2d_:oB});function aB(t,e,n=0){return k(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ku(t,e,n)}const lN=D({pad3d_:aB});function iB(t,e,n=0){return k(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Ku(t,e,n)}const cN=D({pad4d_:iB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(t,e,n){const r=I(t,"x","spaceToBatchND");k(r.rank>=1+e.length,()=>`input rank ${r.rank} should be > than [blockShape] ${e.length}`),k(n.length===e.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`),k(r.shape.reduce((a,i,u)=>u>0&&u<=e.length?a&&(i+n[u-1][0]+n[u-1][1])%e[u-1]===0:a,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`);const s={x:r},o={blockShape:e,paddings:n};return P.runKernel(Zd,s,o)}const aw=D({spaceToBatchND_:uB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(t,e,n,r,s,o,a){s==null&&(s=[1,1]),o==null&&(o=1),r===0&&(r="valid");const i=I(t,"x","maxPool");let u=i,l=!1;i.rank===3&&(l=!0,u=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),k(Dt(o,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${s}'`);const c=jt(u.shape,e,o,s,r),d=[c.dilationHeight,c.dilationWidth];let p;r==="same"?p=dB([c.filterHeight,c.filterWidth],d):p=[[0,0],[0,0]];const h=d[0]===1&&d[1]===1,[f,m]=cB([c.inHeight,c.inWidth],d,p),y=h?r:"valid",g=h?u:aw(u,d,f),w=(n==="avg"?()=>M1(g,e,o,y,a):()=>rw(g,e,o,y,a))(),v=h?w:V1(w,d,m);return l?Y(v,[v.shape[1],v.shape[2],v.shape[3]]):v}function cB(t,e,n){const r=n.map(c=>c[0]),s=n.map(c=>c[1]),o=t.concat(r,s),a=e.map((c,d)=>(c-o[d]%c)%c),i=s.map((c,d)=>c+a[d]),u=e.map((c,d)=>[r[d],i[d]]),l=e.map((c,d)=>[0,a[d]]);return[u,l]}function dB(t,e){const r=t.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),s=r.map(a=>Math.floor(a/2)),o=r.map((a,i)=>a-s[i]);return r.map((a,i)=>[s[i],o[i]])}const dN=D({pool_:lB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(t,e){const n=I(t,"x","prelu"),r=I(e,"alpha","prelu"),s={x:n,alpha:r};return P.runKernel(zd,s)}const iw=D({prelu_:pB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(t,e=null,n=!1){let r=I(t,"x","prod");r.dtype==="bool"&&(r=Ke(r,"int32"));const s={x:r},o={axis:e,keepDims:n};return P.runKernel(Bd,s,o)}const pN=D({prod_:hB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(t,e,n,r){const s=t.map((c,d)=>I(c,`tensors${d}`,"raggedGather","int32")),o=I(e,"paramsDenseValues","raggedGather"),a=I(n,"indices","raggedGather","int32"),i={paramsNestedSplits:s,paramsDenseValues:o,indices:a},u={outputRaggedRank:r},l=P.runKernel(gm,i,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}const hN=D({raggedGather_:fB});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(t,e,n){const r=I(t,"starts","raggedRange"),s=I(e,"limits","raggedRange",r.dtype),o=I(n,"deltas","raggedRange",r.dtype),a={starts:r,limits:s,deltas:o},i=P.runKernel(ym,a);return{rtNestedSplits:i[0],rtDenseValues:i[1]}}const fN=D({raggedRange_:mB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(t,e,n,r,s){const o=I(t,"shape","raggedTensorToTensor","int32"),a=I(e,"values","raggedTensorToTensor"),i=I(n,"defaultValue","raggedTensorToTensor",a.dtype),u=r.map((d,p)=>I(d,`tensors${p}`,"raggedTensorToTensor","int32")),l={shape:o,values:a,defaultValue:i,rowPartitionTensors:u},c={rowPartitionTypes:s};return P.runKernel(xm,l,c)}const mN=D({raggedTensorToTensor_:gB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(t,e,n){Dn(t);const r=L(t);let s=null;if(n==null||n==="float32")s=new Float32Array(r);else if(n==="int32")s=new Int32Array(r);else if(n==="bool")s=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let o=0;o<r;o++)s[o]=e();return P.makeTensor(s,t,n)}const gN=D({rand_:yB});var yN={exports:{}};(function(t){(function(e,n,r){function s(u){var l=this,c=i();l.next=function(){var d=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=d-(l.c=d|0)},l.c=1,l.s0=c(" "),l.s1=c(" "),l.s2=c(" "),l.s0-=c(u),l.s0<0&&(l.s0+=1),l.s1-=c(u),l.s1<0&&(l.s1+=1),l.s2-=c(u),l.s2<0&&(l.s2+=1),c=null}function o(u,l){return l.c=u.c,l.s0=u.s0,l.s1=u.s1,l.s2=u.s2,l}function a(u,l){var c=new s(u),d=l&&l.state,p=c.next;return p.int32=function(){return c.next()*4294967296|0},p.double=function(){return p()+(p()*2097152|0)*11102230246251565e-32},p.quick=p,d&&(typeof d=="object"&&o(d,c),p.state=function(){return o(c,{})}),p}function i(){var u=4022871197,l=function(c){c=String(c);for(var d=0;d<c.length;d++){u+=c.charCodeAt(d);var p=.02519603282416938*u;u=p>>>0,p-=u,p*=u,u=p>>>0,p-=u,u+=p*4294967296}return(u>>>0)*23283064365386963e-26};return l}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.alea=a})(Ln,t,!1)})(yN);var xN={exports:{}};(function(t){(function(e,n,r){function s(i){var u=this,l="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var d=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^d^d>>>8},i===(i|0)?u.x=i:l+=i;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u}function a(i,u){var l=new s(i),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,h=(l.next()>>>0)/4294967296,f=(p+h)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.xor128=a})(Ln,t,!1)})(xN);var wN={exports:{}};(function(t){(function(e,n,r){function s(i){var u=this,l="";u.next=function(){var d=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(d^d<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,i===(i|0)?u.x=i:l+=i;for(var c=0;c<l.length+64;c++)u.x^=l.charCodeAt(c)|0,c==l.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function o(i,u){return u.x=i.x,u.y=i.y,u.z=i.z,u.w=i.w,u.v=i.v,u.d=i.d,u}function a(i,u){var l=new s(i),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,h=(l.next()>>>0)/4294967296,f=(p+h)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.xorwow=a})(Ln,t,!1)})(wN);var vN={exports:{}};(function(t){(function(e,n,r){function s(i){var u=this;u.next=function(){var c=u.x,d=u.i,p,h;return p=c[d],p^=p>>>7,h=p^p<<24,p=c[d+1&7],h^=p^p>>>10,p=c[d+3&7],h^=p^p>>>3,p=c[d+4&7],h^=p^p<<7,p=c[d+7&7],p=p^p<<13,h^=p^p<<9,c[d]=h,u.i=d+1&7,h};function l(c,d){var p,h=[];if(d===(d|0))h[0]=d;else for(d=""+d,p=0;p<d.length;++p)h[p&7]=h[p&7]<<15^d.charCodeAt(p)+h[p+1&7]<<13;for(;h.length<8;)h.push(0);for(p=0;p<8&&h[p]===0;++p);for(p==8?h[7]=-1:h[p],c.x=h,c.i=0,p=256;p>0;--p)c.next()}l(u,i)}function o(i,u){return u.x=i.x.slice(),u.i=i.i,u}function a(i,u){i==null&&(i=+new Date);var l=new s(i),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,h=(l.next()>>>0)/4294967296,f=(p+h)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(c.x&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.xorshift7=a})(Ln,t,!1)})(vN);var bN={exports:{}};(function(t){(function(e,n,r){function s(i){var u=this;u.next=function(){var c=u.w,d=u.X,p=u.i,h,f;return u.w=c=c+1640531527|0,f=d[p+34&127],h=d[p=p+1&127],f^=f<<13,h^=h<<17,f^=f>>>15,h^=h>>>12,f=d[p]=f^h,u.i=p,f+(c^c>>>16)|0};function l(c,d){var p,h,f,m,y,g=[],x=128;for(d===(d|0)?(h=d,d=null):(d=d+"\0",h=0,x=Math.max(x,d.length)),f=0,m=-32;m<x;++m)d&&(h^=d.charCodeAt((m+32)%d.length)),m===0&&(y=h),h^=h<<10,h^=h>>>15,h^=h<<4,h^=h>>>13,m>=0&&(y=y+1640531527|0,p=g[m&127]^=h+y,f=p==0?f+1:0);for(f>=128&&(g[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)h=g[f+34&127],p=g[f=f+1&127],h^=h<<13,p^=p<<17,h^=h>>>15,p^=p>>>12,g[f]=h^p;c.w=y,c.X=g,c.i=f}l(u,i)}function o(i,u){return u.i=i.i,u.w=i.w,u.X=i.X.slice(),u}function a(i,u){i==null&&(i=+new Date);var l=new s(i),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,h=(l.next()>>>0)/4294967296,f=(p+h)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(c.X&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.xor4096=a})(Ln,t,!1)})(bN);var CN={exports:{}};(function(t){(function(e,n,r){function s(i){var u=this,l="";u.next=function(){var d=u.b,p=u.c,h=u.d,f=u.a;return d=d<<25^d>>>7^p,p=p-h|0,h=h<<24^h>>>8^f,f=f-d|0,u.b=d=d<<20^d>>>12^p,u.c=p=p-h|0,u.d=h<<16^p>>>16^f,u.a=f-d|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,i===Math.floor(i)?(u.a=i/4294967296|0,u.b=i|0):l+=i;for(var c=0;c<l.length+20;c++)u.b^=l.charCodeAt(c)|0,u.next()}function o(i,u){return u.a=i.a,u.b=i.b,u.c=i.c,u.d=i.d,u}function a(i,u){var l=new s(i),c=u&&u.state,d=function(){return(l.next()>>>0)/4294967296};return d.double=function(){do var p=l.next()>>>11,h=(l.next()>>>0)/4294967296,f=(p+h)/(1<<21);while(f===0);return f},d.int32=l.next,d.quick=d,c&&(typeof c=="object"&&o(c,l),d.state=function(){return o(l,{})}),d}n&&n.exports?n.exports=a:r&&r.amd?r(function(){return a}):this.tychei=a})(Ln,t,!1)})(CN);var SN={exports:{}};(function(t){(function(e,n,r){var s=256,o=6,a=52,i="random",u=r.pow(s,o),l=r.pow(2,a),c=l*2,d=s-1,p;function h(v,b,S){var $=[];b=b==!0?{entropy:!0}:b||{};var N=g(y(b.entropy?[v,w(n)]:v==null?x():v,3),$),E=new f($),R=function(){for(var F=E.g(o),B=u,M=0;F<l;)F=(F+M)*s,B*=s,M=E.g(1);for(;F>=c;)F/=2,B/=2,M>>>=1;return(F+M)/B};return R.int32=function(){return E.g(4)|0},R.quick=function(){return E.g(4)/4294967296},R.double=R,g(w(E.S),n),(b.pass||S||function(F,B,M,V){return V&&(V.S&&m(V,E),F.state=function(){return m(E,{})}),M?(r[i]=F,B):F})(R,N,"global"in b?b.global:this==r,b.state)}function f(v){var b,S=v.length,$=this,N=0,E=$.i=$.j=0,R=$.S=[];for(S||(v=[S++]);N<s;)R[N]=N++;for(N=0;N<s;N++)R[N]=R[E=d&E+v[N%S]+(b=R[N])],R[E]=b;($.g=function(F){for(var B,M=0,V=$.i,W=$.j,H=$.S;F--;)B=H[V=d&V+1],M=M*s+H[d&(H[V]=H[W=d&W+B])+(H[W]=B)];return $.i=V,$.j=W,M})(s)}function m(v,b){return b.i=v.i,b.j=v.j,b.S=v.S.slice(),b}function y(v,b){var S=[],$=typeof v,N;if(b&&$=="object")for(N in v)try{S.push(y(v[N],b-1))}catch{}return S.length?S:$=="string"?v:v+"\0"}function g(v,b){for(var S=v+"",$,N=0;N<S.length;)b[d&N]=d&($^=b[d&N]*19)+S.charCodeAt(N++);return w(b)}function x(){try{var v;return p&&(v=p.randomBytes)?v=v(s):(v=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(v)),w(v)}catch{var b=e.navigator,S=b&&b.plugins;return[+new Date,e,S,e.screen,w(n)]}}function w(v){return String.fromCharCode.apply(0,v)}if(g(r.random(),n),t.exports){t.exports=h;try{p=require("crypto")}catch{}}else r["seed"+i]=h})(typeof self!="undefined"?self:Ln,[],Math)})(SN);var xB=yN.exports,wB=xN.exports,vB=wN.exports,bB=vN.exports,CB=bN.exports,SB=CN.exports,Ia=SN.exports;Ia.alea=xB;Ia.xor128=wB;Ia.xorwow=vB;Ia.xorshift7=bB;Ia.xor4096=CB;Ia.tychei=SB;var Dm=Ia;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $B=.001,$N=.1;function kB(t,e,n){return n==null&&(n=uw()),Ux(t,e,(r,s)=>lw(r,s,n))}function uw(){return P.backend.floatPrecision()===32?$B:$N}function Ux(t,e,n){let r=!0;if((Tt(t)||Tt(e))&&(r=!1),Tt(t)&&Tt(e)&&(r=!0),r){const a=t.constructor.name,i=e.constructor.name;if(a!==i)throw new Error(`Arrays are of different type. Actual: ${a}. Expected: ${i}`)}if(Array.isArray(t)&&Array.isArray(e)){const a=Qr(t),i=Qr(e);if(!Pe(a,i))throw new Error(`Arrays have different shapes. Actual: [${a}]. Expected: [${i}]`)}const s=Tt(t)?t:mr(t),o=Tt(e)?e:mr(e);if(s.length!==o.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${o.length}.
Actual:   ${s}.
Expected: ${o}.`);for(let a=0;a<o.length;++a){const i=s[a],u=o[a];if(!n(i,u))throw new Error(`Arrays differ: actual[${a}] = ${i}, expected[${a}] = ${u}.
Actual:   ${s}.
Expected: ${o}.`)}typeof expect!="undefined"&&expect().nothing()}function IB(t,e){t().then(()=>e.fail(),()=>e()),typeof expect!="undefined"&&expect().nothing()}function NB(t,e){const n=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Ir(t)||Ir(t[0])||Ir(e)||Ir(e[0])?Ux(t,n,(r,s)=>r==s):Ux(t,e,(r,s)=>lw(r,s,0))}function TB(t,e,n){if(n==null&&(n=uw()),!lw(t,e,n))throw new Error(`Numbers differ: actual === ${t}, expected === ${e}`);typeof expect!="undefined"&&expect().nothing()}function lw(t,e,n){return!isFinite(t)&&!isFinite(e)?!0:!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}function EB(t,e,n){for(let r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(`Value out of range:${t[r]} low: ${e}, high: ${n}`)}function RB(t,e){const n=new Float32Array(t),r=new Float32Array(e);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let s=0;s<r.length;s++)if(n[s]!==r[s])throw new Error(`Expected ArrayBuffer value at ${s} to be ${r[s]} but got ${n[s]} instead`)}function kN(t){for(let e=0;e<t.length;e++){const n=t[e];Array.isArray(n)?kN(n):t[e]=_r(n)}return t}function _B(t){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(t),new Promise(n=>{e.addEventListener("loadeddata",r=>n(e)),e.load()})}async function DB(t){await t.play(),"requestVideoFrameCallback"in t&&await new Promise(e=>{t.requestVideoFrameCallback(e)})}var PB=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:$N,expectArraysClose:kB,testEpsilon:uw,expectPromiseToFail:IB,expectArraysEqual:NB,expectNumbersClose:TB,expectValuesInRange:EB,expectArrayBuffersEqual:RB,encodeStrings:kN,createVideoElement:_B,play:DB},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cw{constructor(e,n,r,s,o){this.mean=e,this.stdDev=n,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=Dm.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let e,n,r=!1;for(;!r;){let s,o,a;do s=2*this.random()-1,o=2*this.random()-1,a=s*s+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,n=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(r=!0)}return(!this.truncated||this.isValidTruncated(n))&&(this.nextVal=this.convertValue(n)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class AB{constructor(e,n,r,s){this.alpha=e,this.beta=1/n,this.dtype=r;const o=s||Math.random();this.randu=Dm.alea(o.toString()),this.randn=new cw(0,1,r,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,n,r,s,o,a;for(;;){do s=this.randn.nextValue(),a=1+this.c*s;while(a<=0);if(a*=a*a,e=s*s,n=1-.331*e*e,r=.5*e+this.d*(1-a+Math.log(a)),o=this.randu(),o<n||Math.log(o)<r)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class OB{constructor(e=0,n=1,r,s){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=n-e,this.dtype=r,s==null&&(s=Math.random()),typeof s=="number"&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${n} <= 1 and dtype is not float`);this.random=Dm.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(t,e,n=1,r="float32",s){if(Dn(t),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);const o=new AB(e,n,r,s),a=be(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const IN=D({randomGamma_:FB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LB(t,e=0,n=1,r,s){if(Dn(t),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);const o=new cw(e,n,r,!1,s),a=be(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const dw=D({randomNormal_:LB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(t,e,n){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return dw(t,0,1,e,n)}const NN=D({randomStandardNormal_:zB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(t,e=0,n=1,r="float32",s){Dn(t);const o=be(t,r),a=new OB(e,n,null,s);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const Pm=D({randomUniform_:BB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(t,e,n,r){return Pm(t,e,n,"int32",r)}const TN=D({randomUniformInt_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ei(t,e,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");const s={start:t,stop:e,step:n,dtype:r};return P.runKernel(Md,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(t){const n={input:I(t,"input","real")};return P.runKernel(Vd,n)}const Ri=D({real_:VB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(t){const n={x:I(t,"x","reciprocal")};return P.runKernel(Tu,n)}const EN=D({reciprocal_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(t){const n={x:I(t,"x","relu")};return P.runKernel(Eu,n)}const Cp=D({relu_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(t){const n={x:I(t,"x","relu6")};return P.runKernel(Ru,n)}const pw=D({relu6_:GB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(t,e){const r={x:I(t,"x","reverse")},s={dims:e};return P.runKernel(Hd,r,s)}const lo=D({reverse_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(t){const e=I(t,"x","reverse");return k(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),lo(e,0)}const RN=D({reverse1d_:jB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(t,e){const n=I(t,"x","reverse");return k(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),lo(n,e)}const _N=D({reverse2d_:KB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qB(t,e){const n=I(t,"x","reverse");return k(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),lo(n,e)}const DN=D({reverse3d_:qB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(t,e){const n=I(t,"x","reverse");return k(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),lo(n,e)}const PN=D({reverse4d_:XB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(t){const n={x:I(t,"x","round")};return P.runKernel(_u,n)}const hw=D({round_:YB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(t){const n={x:I(t,"x","rsqrt","float32")};return P.runKernel(Du,n)}const AN=D({rsqrt_:QB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(t){const n={x:I(t,"x","selu")};return P.runKernel(Pu,n)}const ON=D({selu_:ZB});function JB(t,e,n,r,s,o=[1,1],a="NHWC"){const i=I(t,"x","separableConv2d"),u=I(e,"depthwiseFilter","separableConv2d"),l=I(n,"pointwiseFilter","separableConv2d");let c=i,d=!1;if(i.rank===3&&(d=!0,c=Y(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");k(c.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),k(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),k(l.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),k(l.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),k(l.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const p=u.shape[2],h=u.shape[3];k(l.shape[2]===p*h,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${l.shape[2]}.`);const f=Tm(c,u,r,s,a,o),y=xp(f,l,1,"valid",a);return d?Y(y,[y.shape[1],y.shape[2],y.shape[3]]):y}const FN=D({separableConv2d_:JB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eM(t,e){const n=I(t,"x","setdiff1d"),r=I(e,"y","setdiff1d");k(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),k(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),k(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await n.data(),o=await r.data(),a=new Set(o);let i=0;for(let c=0;c<s.length;c++)a.has(s[c])||i++;const u=new yt([i],n.dtype),l=new yt([i],"int32");for(let c=0,d=0;c<s.length;c++)a.has(s[c])||(u.values[d]=s[c],l.values[d]=c,d++);return[u.toTensor(),l.toTensor()]}const LN=eM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(t){const n={x:I(t,"x","sign")};return P.runKernel(Fu,n)}const zN=D({sign_:tM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(t){const n={x:I(t,"x","sin","float32")};return P.runKernel(Au,n)}const BN=D({sin_:nM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rM(t){const n={x:I(t,"x","sinh")};return P.runKernel(Ou,n)}const MN=D({sinh_:rM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(t,e,n){const r=I(t,"x","slice1d");return k(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ue(r,[e],[n])}const VN=D({slice1d_:sM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oM(t,e,n){const r=I(t,"x","slice2d");return k(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ue(r,e,n)}const WN=D({slice2d_:oM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(t,e,n){const r=I(t,"x","slice3d");return k(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ue(r,e,n)}const UN=D({slice3d_:aM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iM(t,e,n){const r=I(t,"x","slice4d");return k(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ue(r,e,n)}const GN=D({slice4d_:iM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(t,e=-1){const n=I(t,"logits","softmax","float32");if(e===-1&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const r={logits:n},s={dim:e};return P.runKernel(ep,r,s)}const HN=D({softmax_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lM(t){k(t.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`);const e={input:t};return P.runKernel(pd,e)}const Am=D({fft_:lM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(t){k(t.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`);const e={input:t};return P.runKernel(xd,e)}const hc=D({ifft_:cM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(t){const e=t.shape[t.shape.length-1],n=t.size/e;let r;if(e<=2){const s=Y(t,[n,e]);r=hc(s)}else{const s=[n,2*(e-1)],o=Y(Ri(t),[n,e]),a=Y(bp(t),[n,e]),i=lo(Ue(o,[0,1],[n,e-2]),1),u=ie(lo(Ue(a,[0,1],[n,e-2]),1),Re(-1)),l=Gt([o,i],1),c=Gt([a,u],1),d=Y(Ss(l,c),[s[0],s[1]]);r=hc(d)}if(r=Ri(r),t.rank===3&&t.shape[0]!==0){const s=r,o=t.shape[0];r=Y(r,[o,r.shape[0]/o,r.shape[1]]),s.dispose()}return r}const fw=D({irfft_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(t,e,n=0){const s={x:I(t,"x","split")},o={numOrSizeSplits:e,axis:n};return P.runKernel(Jd,s,o)}const _i=D({split_:pM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(t,e){k(t.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${t.dtype}`);let n=t.shape[t.shape.length-1];const r=t.size/n;let s;if(e!=null&&e<n){const f=t.shape.map(y=>0),m=t.shape.map(y=>y);m[t.shape.length-1]=e,s=Ue(t,f,m),n=e}else if(e!=null&&e>n){const f=t.shape.map(m=>m);f[t.shape.length-1]=e-n,s=Gt([t,ks(f)],t.shape.length-1),n=e}else s=t;const o=En(s),a=Y(Ss(s,o),[r,n]),i=Am(a),u=Math.floor(n/2)+1,l=Ri(i),c=bp(i),d=_i(l,[u,n-u],l.shape.length-1),p=_i(c,[u,n-u],c.shape.length-1),h=s.shape.slice();return h[s.shape.length-1]=u,Y(Ss(d[0],p[0]),h)}const Om=D({rfft_:hM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(t,e){let n=I(t,"a","squaredDifference"),r=I(e,"b","squaredDifference");[n,r]=ut(n,r),$e(n.shape,r.shape);const s={a:n,b:r},o={};return P.runKernel(Mu,s,o)}const mw=D({squaredDifference_:fM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(t,e){const n=I(t,"x","squeeze","string_or_numeric");return Y(n,Ts(n.shape,e).newShape)}const Fm=D({squeeze_:mM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(t,e=0){const n=ac(t,"tensors","stack","string_or_numeric");k(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&k(e<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,s={axis:e};return P.runKernel(Fd,r,s)}const es=D({stack_:gM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(t,e=0){const r={x:I(t,"x","step")},s={alpha:e};return P.runKernel(Hu,r,s)}const gw=D({step_:yM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xM(t,e,n,r,s=0,o=0,a=0,i=0,u=0){const c={x:I(t,"x","stridedSlice","string_or_numeric")},d={begin:e,end:n,strides:r,beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};return P.runKernel(op,c,d)}const jN=D({stridedSlice_:xM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wM(t){const n={x:I(t,"x","tan","float32")};return P.runKernel(Wu,n)}const KN=D({tan_:wM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mn(t,e){ba(t);const n=Qr(t,e);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return wo(t,null,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hi(t,e,n){if(ba(t),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const r=Qr(t,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return wo(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(t,e,n){if(ba(t),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const r=Qr(t,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return wo(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(t,e,n){if(ba(t),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const r=Qr(t,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return wo(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(t,e,n){if(ba(t),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const r=Qr(t,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return wo(t,e,r,n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(t,e,n){if(ba(t),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const r=Qr(t,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||r,wo(t,e,r,n)}function xw(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,s=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(o+` update.rank < ${s}. `);if(t.length<r+(n.rank-s))throw new Error(o+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+t.length-r)throw new Error(o+` update.rank != ${s+t.length-r}`);for(let a=0;a<s;++a)if(n.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==t[a+r])throw new Error(o+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${t[a+s]})`)}function Lm(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(t.size===0)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}xw(n,e,t)}function Wr(t,e,n){const r=e.shape.length,s=r>1?e.shape[r-1]:1,o=n.length;let a=1;for(let d=s;d<o;++d)a*=n[d];const i=s<1?1:s,u=L(e.shape)/i,l=[...fe(n.slice(0,s)),1],c=L(n);return{sliceRank:s,numUpdates:u,sliceSize:a,strides:l,outputSize:c}}var vM=Object.freeze(Object.defineProperty({__proto__:null,validateUpdateShape:xw,validateInput:Lm,calculateShapes:Wr},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(t,e,n){const r=I(t,"tensor","tensorScatterupdate"),s=I(e,"indices","tensorScatterupdate","int32"),o=I(n,"updates","tensorScatterupdate");if(Lm(o,s,r.shape),r.dtype!==o.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${o.dtype}.`);const a={tensor:r,indices:s,updates:o},i={};return P.runKernel(Kd,a,i)}const QN=D({tensorScatterUpdate_:bM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(t,e=1,n=!0){const r=I(t,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${e}`);const o={x:r},a={k:e,sorted:n},[i,u]=P.runKernel(ip,o,a);return{values:i,indices:u}}const ZN=D({topk_:CM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SM(t,e=0,n=1,r,s){if(Dn(t),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new cw(e,n,r,!0,s),a=be(t,r);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const JN=D({truncatedNormal_:SM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(t,e=0){const n=I(t,"x","unique","string_or_numeric");k(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},s={axis:e},[o,a]=P.runKernel(Im,r,s);return{values:o,indices:a}}const eT=D({unique_:$M});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(t,e,n){const r=I(t,"x","unsortedSegmentSum"),s=I(e,"segmentIds","unsortedSegmentSum","int32");k(aa(n),()=>"numSegments must be of dtype int");const o={x:r,segmentIds:s},a={numSegments:n};return P.runKernel(cp,o,a)}const tT=D({unsortedSegmentSum_:kM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(t,e=0){const n=I(t,"x","unstack","string_or_numeric");k(e>=-n.shape.length&&e<n.shape.length,()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},s={axis:e};return P.runKernel(lp,r,s)}const bo=D({unstack_:IM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(t,e){return _m(t,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(t,e=!0,n,r){return P.makeVariable(t,e,n,r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zm(t,e){const n=[];for(let o=0;o<e.length;o++)e[o]&&n.push(o);const r=be(t,"int32"),s=be([n.length,t.length],"int32");for(let o=0;o<n.length;o++){const a=r.indexToLoc(n[o]),i=o*t.length;s.values.set(a,i)}return s.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function NM(t){const e=I(t,"condition","whereAsync","bool"),n=await e.data(),r=zm(e.shape,n);return t!==e&&e.dispose(),r}const ww=NM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function TM(t,e,n){const r=I(t,"tensor","boolMask"),s=I(e,"mask","boolMask","bool"),o=n==null?0:n,a=s.rank,i=r.shape;k(a>0,()=>"mask cannot be scalar"),_t(i.slice(o,o+a),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=o;m<o+a;m++)u*=i[m];const l=i.slice(0,o).concat([u],i.slice(o+a)),c=Y(r,l),d=Y(s,[-1]),p=await ww(d),h=Fm(p,[1]),f=X1(c,h,o);return t!==r&&r.dispose(),e!==s&&s.dispose(),h.dispose(),c.dispose(),d.dispose(),p.dispose(),f}const sT=TM;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(t,e,n){const r=I(t,"x","transpose");if(e==null&&(e=r.shape.map((a,i)=>i).reverse()),k(r.rank===e.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${e}.`),e.forEach(a=>{k(a>=0&&a<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${e}`)}),r.rank<=1)return r.clone();const s={x:r},o={perm:e};return r.dtype==="complex64"?Le(()=>{let a=Ri(r),i=bp(r);return a=P.runKernel(Qo,{x:a},o),i=P.runKernel(Qo,{x:i},o),n&&(i=Pr(i)),Ss(a,i)}):P.runKernel(Qo,s,o)}const fc=D({transpose_:EM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RM(t,e,n,r,s=!0){const o=I(t,"v","movingAverage"),a=I(e,"x","movingAverage"),i=I(n,"decay","movingAverage");_k(o,a),k(Pe(o.shape,a.shape),()=>"Shape mismatch in v and x");const u=Re(1),l=Ne(u,i);let c=ie(Ne(a,o),l);if(s){k(r!=null,()=>"When using zeroDebias: true, step is required.");const d=I(r,"step","movingAverage");c=je(c,Ne(u,Ni(i,d)))}return ve(o,c)}const oT=D({movingAverage_:RM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(t,e,n){Dn(n);const r=I(t,"indices","scatterND","int32"),s=I(e,"updates","scatterND");Lm(s,r,n);const o={indices:r,updates:s},a={shape:n};return P.runKernel(jd,o,a)}const aT=D({scatterND_:_M});function DM(t,e,n,r){if(t.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const s=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const a=e.size;if(!(e.rank===0||e.rank===1&&a===s))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${s}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(t,e,n,r=0){Dn(n);const s=I(t,"sparseIndices","sparseToDense","int32"),o=I(e,"sparseValues","sparseToDense","string_or_numeric"),a=I(r,"defaultValue","sparseToDense",o.dtype);DM(s,o,n,a);const i={sparseIndices:s,sparseValues:o,defaultValue:a},u={outputShape:n};return P.runKernel(rp,i,u)}const iT=D({sparseToDense_:PM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AM(t,e){const n=I(e,"indices","gatherND","int32"),s={params:I(t,"x","gatherND","string_or_numeric"),indices:n};return P.runKernel(yd,s)}const uT=D({gatherND_:AM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OM(t,e){if(e==null)return t.shape.slice();if(Pe(t.shape,e))return e;if(t.shape.length===e.length){const n=[];for(let r=0;r<t.shape.length;r++)e[r]==null&&t.shape[r]!=null?n.push(t.shape[r]):n.push(e[r]);return n}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FM(t,e,n,r){const s=I(t,"x","dropout");if(k(s.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),k(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return t instanceof ct?s.clone():s;const o=OM(s,n),a=1-e,i=je(q1(ve(Pm(o,0,1,"float32",r),a)),a);return ie(s,i)}const lT=D({dropout_:FM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(t){return Math.floor(Math.pow(2,Math.ceil(Math.log(t)/Math.log(2))))}function Bm(t,e,n){const r=1-t%2,s=new Float32Array(t);for(let o=0;o<t;++o){const a=2*Math.PI*o/(t+r-1);s[o]=e-n*Math.cos(a)}return Mn(s,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function LM(t,e,n=1){const r=I(t,"predictions","inTopK"),s=I(e,"targets","inTopK");k(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),k(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),_t(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=r.shape[r.shape.length-1];k(n>0&&n<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${n}`);const a=await r.data(),i=await s.data(),[u,l]=[a.length/o,o],c=xt("bool",u);for(let d=0;d<u;d++){const p=d*l,h=a.subarray(p,p+l),f=[];for(let m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort((m,y)=>y.value-m.value),c[d]=0;for(let m=0;m<n;m++)if(f[m].index===i[d]){c[d]=1;break}}return t!==r&&r.dispose(),e!==s&&s.dispose(),Dr(c,s.shape,"bool")}const cT=LM;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zM(t,e,n,r,s,o="NHWC",a){let i=t;t.rank===3&&(i=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=Y(e,[1,e.shape[0],e.shape[1],e.shape[2]])),k(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),k(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),k(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l=o==="NHWC"?i.shape[3]:i.shape[1],c=o==="NHWC"?u.shape[3]:u.shape[1];k(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),k(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),gr("conv2dDerFilter",s,a);const d={x:i,dy:u},p={strides:r,pad:s,dataFormat:o,dimRoundingMode:a,filterShape:n};return P.runKernel(Xc,d,p)}const BM=D({conv2DBackpropFilter_:zM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mm(t,e,n){if(n==null||n==="linear")return t;if(n==="relu")return ie(t,gw(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Vm(t,e){let n=e;const r=U1(t.shape,e.shape);return r.length>0&&(n=He(n,r)),Y(n,t.shape)}function Wm(t,e,n,r){if(e==="linear")return t;if(e==="relu")return Cp(t);if(e==="elu")return H1(t);if(e==="relu6")return pw(t);if(e==="prelu")return iw(t,n);if(e==="leakyrelu")return Q1(t,r);if(e==="sigmoid")return Zo(t);throw new Error(`Unknown fused activation ${e}.`)}const Um=(t,e)=>!(t>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",Um(P.state.gradientDepth,u)===!1){k(s==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let S=xp(t,e,n,r,s,o,a);return i!=null&&(S=ve(S,i)),Wm(S,u,l,c)}const d=I(t,"x","conv2d","float32"),p=I(e,"filter","conv2d","float32");let h=d,f=!1;d.rank===3&&(f=!0,h=Y(d,[1,d.shape[0],d.shape[1],d.shape[2]])),k(h.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`),k(p.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),gr("fused conv2d",r,a);const m=s==="NHWC"?h.shape[3]:h.shape[1];k(p.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),k(Dt(n,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`);const y=Xe(h.shape,p.shape,n,o,r,a);let g;i!=null&&(g=I(i,"bias","fused conv2d"),[g]=ut(g,d),s==="NHWC"?$e(y.outShape,g.shape):(k(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),k(g.shape.length===0||g.shape[0]===y.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${y.outChannels})`)));let x;if(l!=null){const S=l.shape;if(k(S.length<=1||S.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${S.length}.`),S.length===1)k(S[0]===1||S[0]===y.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the number of output channels (${y.outChannels}).`);else if(S.length===3)try{$e(S,y.outShape)}catch{const N=`Error in fused conv2d: PReLU activation weights (${S}) is not compatible with the output shape of the conv2d (${y.outShape}).`;throw Error(N)}x=I(l,"prelu weights","fused conv2d")}const w=(S,$)=>{k(s==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[N,E,R,F]=$,B=Mm(S,R,u);k(lc(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const M=bI(E.shape,B,N,n,r),V=BM(E,B,N.shape,n,r),W=[M,V];if(F!=null){const H=Vm(F,B);W.push(H)}return W},v={x:h,filter:p,bias:g,preluActivationWeights:x},b={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:c};return i==null?Jr(($,N,E)=>{let R=P.runKernel(Ci,v,b);return E([N,$,R]),f&&(R=Y(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:w}})(h,p):Jr(($,N,E,R)=>{let F=P.runKernel(Ci,v,b);return R([N,$,F,E]),f&&(F=Y(F,[F.shape[1],F.shape[2],F.shape[3]])),{value:F,gradFunc:w}})(h,p,g)}const VM=D({fusedConv2d_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(t,e,n,r,s,o=[1,1],a){let i=t;t.rank===3&&(i=Y(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u=e;u.rank===3&&(u=Y(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,filterShape:n};return P.runKernel(od,l,c)}const UM=D({depthwiseConv2dNativeBackpropFilter_:WM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(t,e,n,r,s,o=[1,1],a){let i=e,u=!1;e.rank===3&&(u=!0,i=Y(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:o,inputShape:t},d=P.runKernel(ad,l,c);return u?Y(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const HM=D({depthwiseConv2dNativeBackpropInput_:GM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM({x:t,filter:e,strides:n,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(Um(P.state.gradientDepth,u)===!1){let b=Tm(t,e,n,r,s,o,a);return i!=null&&(b=ve(b,i)),Wm(b,u,l,c)}const d=I(t,"x","depthwiseConv2d","float32"),p=I(e,"filter","depthwiseConv2d","float32");let h=d,f=!1;d.rank===3&&(f=!0,h=Y(d,[1,d.shape[0],d.shape[1],d.shape[2]])),k(h.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),k(p.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),k(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),o==null&&(o=[1,1]),k(Dt(n,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`),gr("fused depthwiseConv2d",r,a);const m=Xe(h.shape,p.shape,n,o,r,a,!0);let y;i!=null&&(y=I(i,"bias","fused conv2d"),[y]=ut(y,d),$e(m.outShape,y.shape));let g;l!=null&&(g=I(l,"prelu weights","fused depthwiseConv2d"));const x=(b,S)=>{k(lc(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[$,N,E,R]=S,F=Mm(b,E,u),B=HM(N.shape,F,$,n,r,o,a),M=UM(N,F,$.shape,n,r,o,a);if(R!=null){const V=Vm(y,F);return[B,M,V]}return[B,M]},w={x:h,filter:p,bias:y,preluActivationWeights:g},v={strides:n,pad:r,dataFormat:s,dilations:o,dimRoundingMode:a,activation:u,leakyreluAlpha:c};return i==null?Jr((S,$,N)=>{let E=P.runKernel(Si,w,v);return N([$,S,E]),f&&(E=Y(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:x}})(h,p):Jr((S,$,N,E)=>{let R=P.runKernel(Si,w,v);return E([$,S,R,N]),f&&(R=Y(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(h,p,y)}const KM=D({fusedDepthwiseConv2d_:jM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Um(P.state.gradientDepth,o)===!1){let F=Be(t,e,n,r);return s!=null&&(F=ve(F,s)),Wm(F,o,a,i)}let u=I(t,"a","fused matMul"),l=I(e,"b","fused matMul");[u,l]=ut(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),y=L(f),g=L(m);k(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=$e(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,h]),v=n?Y(u,[y,c,p]):Y(u,[y,p,c]),b=r?Y(l,[g,h,d]):Y(l,[g,d,h]);let S;s!=null&&(S=I(s,"bias","fused matMul"),[S]=ut(S,u),$e(w,S.shape));let $;a!=null&&($=I(a,"prelu weights","fused matMul"));const N=(F,B)=>{const[M,V,W,H]=B,q=Mm(Y(F,W.shape),W,o);let O,U;if(!n&&!r?(O=Be(q,V,!1,!0),U=Be(M,q,!0,!1)):!n&&r?(O=Be(q,V,!1,!1),U=Be(q,M,!0,!1)):n&&!r?(O=Be(V,q,!1,!0),U=Be(M,q,!1,!1)):(O=Be(V,q,!0,!0),U=Be(q,M,!0,!0)),s!=null){const j=Vm(H,q);return[O,U,j]}else return[O,U]},E={a:v,b,bias:S,preluActivationWeights:$},R={transposeA:n,transposeB:r,activation:o,leakyreluAlpha:i};return s==null?Jr((B,M,V)=>{const W=P.runKernel(bi,E,R);return V([B,M,W]),{value:Y(W,w),gradFunc:N}})(v,b):Jr((B,M,V,W)=>{const H=P.runKernel(bi,E,R);return W([B,M,H,V]),{value:Y(H,w),gradFunc:N}})(v,b,S)}const XM=D({fusedMatMul_:qM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var dT=Object.freeze(Object.defineProperty({__proto__:null,conv2d:VM,depthwiseConv2d:KM,matMul:XM},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YM(t){return Bm(t,.54,.46)}const QM=D({hammingWindow_:YM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(t){return Bm(t,.5,.5)}const pT=D({hannWindow_:ZM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(t,e,n,r=!1,s=0){let o=0;const a=[];for(;o+e<=t.size;)a.push(Ue(t,o,e)),o+=n;if(r)for(;o<t.size;){const i=o+e-t.size,u=Gt([Ue(t,o,e-i),ju([i],s)]);a.push(u),o+=n}return a.length===0?hi([],[0,e]):Y(Gt(a),[a.length,e])}const hT=D({frame_:JM});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(t,e,n,r,s=pT){r==null&&(r=vw(e));const o=hT(t,e,n),a=ie(o,s(e));return Om(a,r)}const t4=D({stft_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(t,e,n,r,s="bilinear",o=0){const a=I(t,"image","cropAndResize"),i=I(e,"boxes","cropAndResize","float32"),u=I(n,"boxInd","cropAndResize","int32"),l=i.shape[0];k(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),k(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),k(u.rank===1&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),k(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),k(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),k(s==="bilinear"||s==="nearest",()=>`method must be bilinear or nearest, but was ${s}`);const c={image:a,boxes:i,boxInd:u},d={method:s,extrapolationValue:o,cropSize:r};return P.runKernel(td,c,d)}const r4=D({cropAndResize_:n4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s4(t){const e=I(t,"image","flipLeftRight","float32");k(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const n={image:e};return P.runKernel(fd,n,{})}const o4=D({flipLeftRight_:s4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(t){const e=I(t,"image","grayscaleToRGB"),n=e.rank-1,r=e.shape[n];k(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),k(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(e.rank);return s.fill(1,0,n),s[n]=3,pi(e,s)}const i4=D({grayscaleToRGB_:a4});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(t){const e=I(t,"image","RGBToGrayscale"),n=e.rank-1,r=e.shape[n];k(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),k(r===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`);const s=e.dtype,o=Ke(e,"float32"),a=Mn([.2989,.587,.114]);let i;switch(e.rank){case 2:i=Fo("ij,j->i",o,a);break;case 3:i=Fo("ijk,k->ij",o,a);break;case 4:i=Fo("ijkl,l->ijk",o,a);break;case 5:i=Fo("ijklm,m->ijkl",o,a);break;case 6:i=Fo("ijklmn,n->ijklm",o,a);break;default:throw new Error("Not a valid tensor rank.")}return i=us(i,-1),Ke(i,s)}const l4=D({rgbToGrayscale_:u4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c4(t,e,n=0,r=.5){const s=I(t,"image","rotateWithOffset","float32");k(s.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`);const o={image:s},a={radians:e,fillValue:n,center:r};return P.runKernel(pp,o,a)}const d4=D({rotateWithOffset_:c4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qu(t,e,n,r,s,o){r==null&&(r=.5),s==null&&(s=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=t.shape[0];return n=Math.min(n,a),k(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),k(t.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`),k(t.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`),k(e.rank===1,()=>"scores must be a 1D tensor"),k(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),k(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppression","float32"),a=I(e,"scores","nonMaxSuppression","float32"),i=qu(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return P.runKernel(Dd,{boxes:o,scores:a},u)}const h4=D({nonMaxSuppression_:p4});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f4(t,e,n){const r=m4(t,e,n),s=r<0?-(r+1):r;t.splice(s,0,e)}function m4(t,e,n){return y4(t,e,n||g4)}function g4(t,e){return t>e?1:t<e?-1:0}function y4(t,e,n){let r=0,s=t.length,o=0,a=!1;for(;r<s;){o=r+(s-r>>>1);const i=n(e,t[o]);i>0?r=o+1:(s=o,a=!i)}return a?r:-r-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sp(t,e,n,r,s){return bw(t,e,n,r,s,0)}function Gm(t,e,n,r,s,o){return bw(t,e,n,r,s,0,!1,o,!0)}function $p(t,e,n,r,s,o){return bw(t,e,n,r,s,o,!0)}function bw(t,e,n,r,s,o,a=!1,i=!1,u=!1){const l=[];for(let y=0;y<e.length;y++)e[y]>s&&l.push({score:e[y],boxIndex:y,suppressBeginIndex:0});l.sort(Zb);const c=o>0?-.5/o:0,d=[],p=[];for(;d.length<n&&l.length>0;){const y=l.pop(),{score:g,boxIndex:x,suppressBeginIndex:w}=y;if(g<s)break;let v=!1;for(let b=d.length-1;b>=w;--b){const S=x4(t,x,d[b]);if(S>=r){v=!0;break}if(y.score=y.score*w4(r,c,S),y.score<=s)break}y.suppressBeginIndex=d.length,v||(y.score===g?(d.push(x),p.push(y.score)):y.score>s&&f4(l,y,Zb))}const h=d.length,f=n-h;i&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=p),u&&(m.validOutputs=h),m}function x4(t,e,n){const r=t.subarray(e*4,e*4+4),s=t.subarray(n*4,n*4+4),o=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),d=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),h=(i-o)*(u-a),f=(d-l)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(o,l),y=Math.max(a,c),g=Math.min(i,d),x=Math.min(u,p),w=Math.max(g-m,0)*Math.max(x-y,0);return w/(h+f-w)}function w4(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function Zb(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function v4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY){const o=I(t,"boxes","nonMaxSuppressionAsync"),a=I(e,"scores","nonMaxSuppressionAsync"),i=qu(o,a,n,r,s);n=i.maxOutputSize,r=i.iouThreshold,s=i.scoreThreshold;const u=await Promise.all([o.data(),a.data()]),l=u[0],c=u[1],{selectedIndices:d}=Sp(l,c,n,r,s);return o!==t&&o.dispose(),a!==e&&a.dispose(),Mn(d,"int32")}const b4=v4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=I(t,"boxes","nonMaxSuppression"),i=I(e,"scores","nonMaxSuppression"),u=qu(a,i,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const l={boxes:a,scores:i},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:o},d=P.runKernel(Pd,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}const S4=D({nonMaxSuppressionWithScore_:C4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function $4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=0){const a=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),u=qu(a,i,n,r,s,o);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,o=u.softNmsSigma;const l=await Promise.all([a.data(),i.data()]),c=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=$p(c,d,n,r,s,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Mn(p,"int32"),selectedScores:Mn(h)}}const k4=$4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=I(t,"boxes","nonMaxSuppression"),i=I(e,"scores","nonMaxSuppression"),u=qu(a,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,p={boxes:a,scores:i},h={maxOutputSize:l,iouThreshold:c,scoreThreshold:d,padToMaxOutputSize:o},f=P.runKernel(mm,p,h);return{selectedIndices:f[0],validOutputs:f[1]}}const N4=D({nonMaxSuppressionPadded_:I4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function T4(t,e,n,r=.5,s=Number.NEGATIVE_INFINITY,o=!1){const a=I(t,"boxes","nonMaxSuppressionAsync"),i=I(e,"scores","nonMaxSuppressionAsync"),u=qu(a,i,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Gm(p,h,l,c,d,o);return a!==t&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Mn(f,"int32"),validOutputs:Re(m,"int32")}}const E4=T4;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R4(t,e,n=!1,r=!1){const s=I(t,"images","resizeBilinear");k(s.rank===3||s.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),k(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),k(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=Y(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=P.runKernel(Gd,i,u);return a?Y(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const _4=D({resizeBilinear_:R4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D4(t,e,n=!1,r=!1){const s=I(t,"images","resizeNearestNeighbor");k(s.rank===3||s.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),k(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),k(s.dtype==="float32"||s.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),k(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=s,a=!1;s.rank===3&&(a=!0,o=Y(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const i={images:o},u={alignCorners:n,halfPixelCenters:r,size:e},l=P.runKernel(Ud,i,u);return a?Y(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const P4=D({resizeNearestNeighbor_:D4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A4(t,e="binary",n=!1,r=.5){const s=I(t,"image","threshold"),o=.2989,a=.587,i=.114,u=s.shape[0]*s.shape[1];let l=ie(Mn([r]),255),c,d,p,h;if(k(s.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),k(s.shape[2]===3||s.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),k(s.dtype==="int32"||s.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),k(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),s.shape[2]===3){[c,d,p]=_i(s,[1,1,1],-1);const y=ie(c,o),g=ie(d,a),x=ie(p,i);h=ve(ve(y,g),x)}else h=t;if(e==="otsu"){const y=W1(Ke(hw(h),"int32"),Dr([]),256);l=O4(y,u)}const f=n?Em(h,l):vp(h,l);return Ke(ie(f,255),"int32")}function O4(t,e){let n=Mn([-1]),r=Mn([0]),s=Mn([0]),o,a,i,u,l,c;for(let d=0;d<t.size-1;d++){o=Ue(t,0,d+1),a=Ue(t,d+1),l=je(He(o),e),c=je(He(a),e);const p=He(ie(o,Ei(0,o.size)));i=je(p,He(o));const h=ju(a.shape,o.size),f=ve(Ei(0,a.size),h),m=ie(a,f);u=je(He(m),He(a));const y=Ne(i,u),g=Ne(i,u),x=ie(l,c);s=ie(ie(x,y),g);const w=vp(s,r);r=ys(w,s,r),n=ys(w,Mn([d]),n)}return n}const F4=D({threshold_:A4});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L4(t,e,n="nearest",r="constant",s=0,o){const a=I(t,"image","transform","float32"),i=I(e,"transforms","transform","float32");k(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),k(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),k(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const u={image:a,transforms:i},l={interpolation:n,fillMode:r,fillValue:s,outputShape:o};return P.runKernel(up,u,l)}const z4=D({transform_:L4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B4(t,e,n){const r=I(t,"a","bandPart");k(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[o,a]=r.shape.slice(-2);let i,u;typeof e=="number"?(k(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),k(e<=o,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`),i=I(e<0?o:e,"numLower","bandPart")):(k(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),i=ys(yf(e,0),o,pc(e,o))),typeof n=="number"?(k(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),k(n<=a,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`),u=I(n<0?a:n,"numUpper","bandPart")):(k(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=ys(yf(n,0),a,pc(n,a)));const l=Y(Ei(0,o,1,"int32"),[-1,1]),c=Ei(0,a,1,"int32"),d=Ne(l,c),p=cc(Em(d,i),Y1(d,Pr(u))),h=ks([o,a],r.dtype);return Y(es(bo(Y(r,[-1,o,a])).map(f=>ys(p,f,h))),s)}const M4=D({bandPart_:B4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V4(t){let e;if(Array.isArray(t)){e=!1,k(t!=null&&t.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=t[0].shape[0];for(let o=1;o<t.length;++o)k(t[o].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[o].shape[0]} vs. ${s})`)}else e=!0,t=_i(t,t.shape[0],0).map(s=>Fm(s,[0]));k(t.length<=t[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`);const n=[],r=t;for(let s=0;s<t.length;++s)n.push(P.tidy(()=>{let o=r[s];if(s>0)for(let a=0;a<s;++a){const i=ie(He(ie(n[a],o)),n[a]);o=Ne(o,i)}return je(o,wp(o,"euclidean"))}));return e?es(n,0):n}const W4=D({gramSchmidt_:V4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U4(t,e=!1){if(k(t.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`),t.rank===2)return Jb(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce((u,l)=>u*l),r=bo(Y(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),s=[],o=[];r.forEach(u=>{const[l,c]=Jb(u,e);s.push(l),o.push(c)});const a=Y(es(s,0),t.shape),i=Y(es(o,0),t.shape);return[a,i]}}function Jb(t,e=!1){return P.tidy(()=>{k(t.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`);const n=t.shape[0],r=t.shape[1];let s=K1(n),o=gs(t);const a=hi([[1]],[1,1]);let i=gs(a);const u=n>=r?r:n;for(let l=0;l<u;++l){const c=o,d=i,p=s;[i,o,s]=P.tidy(()=>{const h=Ue(o,[l,l],[n-l,1]),f=wp(h),m=Ue(o,[l,l],[1,1]),y=ys(vp(m,0),hi([[-1]]),hi([[1]])),g=Ne(m,ie(y,f)),x=je(h,g);x.shape[0]===1?i=gs(a):i=Gt([a,Ue(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const w=Pr(je(Be(y,g),f)),v=Ue(o,[l,0],[n-l,r]),b=ie(w,i),S=fc(i);if(l===0)o=Ne(v,Be(b,Be(S,v)));else{const E=Ne(v,Be(b,Be(S,v)));o=Gt([Ue(o,[0,0],[l,r]),E],0)}const $=fc(b),N=Ue(s,[0,l],[n,s.shape[1]-l]);if(l===0)s=Ne(N,Be(Be(N,i),$));else{const E=Ne(N,Be(Be(N,i),$));s=Gt([Ue(s,[0,0],[n,l]),E],1)}return[i,o,s]}),tn([c,d,p])}return!e&&n>r&&(s=Ue(s,[0,0],[n,r]),o=Ue(o,[0,0],[r,r])),[s,o]})}const G4=D({qr_:U4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jt;(function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Jt||(Jt={}));function H4(t,e,n=Jt.SUM_BY_NONZERO_WEIGHTS){const r=I(t,"losses","computeWeightedLoss");let s=null;e!=null&&(s=I(e,"weights","computeWeightedLoss"));const o=s==null?r:ie(r,s);if(n===Jt.NONE)return o;if(n===Jt.SUM)return He(o);if(n===Jt.MEAN){if(s==null)return dc(o);{const a=r.size/s.size,i=je(He(o),He(s));return a>1?je(i,Re(a)):i}}if(n===Jt.SUM_BY_NONZERO_WEIGHTS){if(s==null)return je(He(o),Re(r.size));{const a=ie(s,Gs(r.shape)),i=Ke(He(ow(a,Re(0))),"float32");return je(He(o),i)}}throw Error(`Unknown reduction: ${n}`)}const Rs=D({computeWeightedLoss_:H4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j4(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"labels","absoluteDifference"),o=I(e,"predictions","absoluteDifference");let a=null;n!=null&&(a=I(n,"weights","absoluteDifference")),_t(s.shape,o.shape,"Error in absoluteDifference: ");const i=vn(Ne(s,o));return Rs(i,a,r)}const K4=D({absoluteDifference_:j4});function q4(t,e,n,r,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","cosineDistance"),a=I(e,"predictions","cosineDistance");let i=null;r!=null&&(i=I(r,"weights","cosineDistance")),_t(o.shape,a.shape,"Error in cosineDistance: ");const u=Re(1),l=Ne(u,He(ie(o,a),n,!0));return Rs(l,i,s)}const X4=D({cosineDistance_:q4});function Y4(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){let s=I(t,"labels","hingeLoss");const o=I(e,"predictions","hingeLoss");let a=null;n!=null&&(a=I(n,"weights","hingeLoss")),_t(s.shape,o.shape,"Error in hingeLoss: ");const i=Re(1);s=Ne(ie(Re(2),s),i);const u=Cp(Ne(i,ie(s,o)));return Rs(u,a,r)}const Q4=D({hingeLoss_:Y4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z4(t,e,n,r=1,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","huberLoss"),a=I(e,"predictions","huberLoss");let i=null;n!=null&&(i=I(n,"weights","huberLoss")),_t(o.shape,a.shape,"Error in huberLoss: ");const u=Re(r),l=vn(Ne(a,o)),c=pc(l,u),d=Ne(l,c),p=ve(ie(Re(.5),dr(c)),ie(u,d));return Rs(p,i,s)}const J4=D({huberLoss_:Z4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(t,e,n,r=1e-7,s=Jt.SUM_BY_NONZERO_WEIGHTS){const o=I(t,"labels","logLoss"),a=I(e,"predictions","logLoss");let i=null;n!=null&&(i=I(n,"weights","logLoss")),_t(o.shape,a.shape,"Error in logLoss: ");const u=Re(1),l=Re(r),c=Pr(ie(o,Ti(ve(a,l)))),d=ie(Ne(u,o),Ti(ve(Ne(u,a),l))),p=Ne(c,d);return Rs(p,i,s)}const tV=D({logLoss_:eV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(t,e,n,r=Jt.SUM_BY_NONZERO_WEIGHTS){const s=I(t,"labels","meanSquaredError"),o=I(e,"predictions","meanSquaredError");let a=null;n!=null&&(a=I(n,"weights","meanSquaredError")),_t(s.shape,o.shape,"Error in meanSquaredError: ");const i=mw(s,o);return Rs(i,a,r)}const rV=D({meanSquaredError_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(t,e){const n=I(t,"labels","sigmoidCrossEntropyWithLogits"),r=I(e,"logits","sigmoidCrossEntropyWithLogits");_t(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Cp(r),o=ie(r,n),a=Z1(uo(Pr(vn(r))));return ve(Ne(s,o),a)}function oV(t,e,n,r=0,s=Jt.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"multiClassLabels","sigmoidCrossEntropy");const a=I(e,"logits","sigmoidCrossEntropy");let i=null;if(n!=null&&(i=I(n,"weights","sigmoidCrossEntropy")),_t(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const l=Re(r),c=Re(1),d=Re(.5);o=ve(ie(o,Ne(c,l)),ie(d,l))}const u=sV(o,a);return Rs(u,i,s)}const aV=D({sigmoidCrossEntropy_:oV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(t,e,n=-1){if(n===-1&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return Jr((s,o,a)=>{const u=ew(o,[n],!0),l=Ne(Ke(o,"float32"),u);a([s,l]);const c=Pr(ie(l,s));return{value:He(c,[n]),gradFunc:(h,f)=>{const[m,y]=f,g=vt(h.shape,[n]);return[ie(Y(h,g),Ne(Ke(m,"float32"),uo(y))),ie(Y(h,g),Ne(uo(y),Ke(m,"float32")))]}}})(t,e)}function uV(t,e,n,r=0,s=Jt.SUM_BY_NONZERO_WEIGHTS){let o=I(t,"onehotLabels","softmaxCrossEntropy");const a=I(e,"logits","softmaxCrossEntropy");let i=null;if(n!=null&&(i=I(n,"weights","softmaxCrossEntropy")),_t(o.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const l=Re(r),c=Re(1),d=Re(o.shape[1]);o=ve(ie(o,Ne(c,l)),je(l,d))}const u=iV(o,a);return Rs(u,i,s)}const lV=D({softmaxCrossEntropy_:uV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(t,e,n,r){const s=I(t,"indices","sparseFillEmptyRows","int32"),o=I(e,"values","sparseFillEmptyRows"),a=I(n,"denseShape","sparseFillEmptyRows","int32"),i=I(r,"defaultValue","sparseFillEmptyRows",o.dtype);if(s.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const u={indices:s,values:o,denseShape:a,defaultValue:i},l=P.runKernel(bm,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}const dV=D({sparseFillEmptyRows_:cV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(t,e,n){const r=I(t,"inputIndices","sparseReshape","int32"),s=I(e,"inputShape","sparseReshape","int32"),o=I(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(s.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:r,inputShape:s,newShape:o},i=P.runKernel(Cm,a);return{outputIndices:i[0],outputShape:i[1]}}const hV=D({sparseReshape_:pV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(t,e,n){const r=I(t,"data","sparseSegmentMean"),s=I(e,"indices","sparseSegmentMean","int32"),o=I(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return P.runKernel(tp,a)}const mV=D({sparseSegmentMean_:fV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(t,e,n){const r=I(t,"data","sparseSegmentSum"),s=I(e,"indices","sparseSegmentSum","int32"),o=I(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${s.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:r,indices:s,segmentIds:o};return P.runKernel(np,a)}const yV=D({sparseSegmentSum_:gV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(t,e,n,r,s,o,a,i){const u=I(t,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=I(e,"dataSplits","stringNGrams");if(l.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:u,dataSplits:l},p=P.runKernel(ap,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}const wV=D({stringNGrams_:xV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(t,e,n=!0){const r=I(t,"input","stringSplit","string"),s=I(e,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(s.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o={skipEmpty:n},a={input:r,delimiter:s},i=P.runKernel($m,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const bV=D({stringSplit_:vV});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(t,e){const n=I(t,"input","stringToHashBucketFast","string"),r={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return P.runKernel(km,s,r)}const SV=D({stringToHashBucketFast_:CV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(t,e,n,r=!0){const s=I(t,"input","staticRegexReplace","string"),o={pattern:e,rewrite:n,replaceGlobal:r};return P.runKernel(sp,{x:s},o)}const kV=D({staticRegexReplace_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fT={fft:Am,ifft:hc,rfft:Om,irfft:fw},mT={hammingWindow:QM,hannWindow:pT,frame:hT,stft:t4},gT={flipLeftRight:o4,grayscaleToRGB:i4,resizeNearestNeighbor:P4,resizeBilinear:_4,rgbToGrayscale:l4,rotateWithOffset:d4,cropAndResize:r4,nonMaxSuppression:h4,nonMaxSuppressionAsync:b4,nonMaxSuppressionWithScore:S4,nonMaxSuppressionWithScoreAsync:k4,nonMaxSuppressionPadded:N4,nonMaxSuppressionPaddedAsync:E4,threshold:F4,transform:z4},yT={bandPart:M4,gramSchmidt:W4,qr:G4},xT={absoluteDifference:K4,computeWeightedLoss:Rs,cosineDistance:X4,hingeLoss:Q4,huberLoss:J4,logLoss:tV,meanSquaredError:rV,sigmoidCrossEntropy:aV,softmaxCrossEntropy:lV},wT={sparseFillEmptyRows:dV,sparseReshape:hV,sparseSegmentMean:mV,sparseSegmentSum:yV},vT={stringNGrams:wV,stringSplit:bV,stringToHashBucketFast:SV,staticRegexReplace:kV};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV=new Map,Gx=new Map;class bT{getClassName(){return this.constructor.className}static fromConfig(e,n){return new e(n)}}class Bs{constructor(){this.classNameMap={}}static getMap(){return Bs.instance==null&&(Bs.instance=new Bs),Bs.instance}static register(e){Bs.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function CT(t,e,n){k(t.className!=null,()=>"Class being registered does not have the static className property defined."),k(typeof t.className=="string",()=>"className is required to be a string, but got type "+typeof t.className),k(t.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e=="undefined"&&(e="Custom"),typeof n=="undefined"&&(n=t.className);const r=n,s=e+">"+r;return Bs.register(t),IV.set(s,t),Gx.set(t,s),t}function NV(t){return Gx.has(t)?Gx.get(t):t.className}var TV=Object.freeze(Object.defineProperty({__proto__:null,Serializable:bT,SerializationMap:Bs,registerClass:CT,getRegisteredName:NV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Co extends bT{minimize(e,n=!1,r){const{value:s,grads:o}=this.computeGradients(e,r);if(r!=null){const a=r.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return tn(o),n?s:(s.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,n){return jI(e,n)}dispose(){this.iterations_!=null&&tn(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Re(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Co,Symbol.hasInstance,{value:t=>t.minimize!=null&&t.computeGradients!=null&&t.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cw extends Co{static get className(){return"Adadelta"}constructor(e,n,r=null){super(),this.learningRate=e,this.rho=n,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],r==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=P.registeredVariables[r],a=!1;this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accum_grad`,variable:Le(()=>En(o).variable(a))}),this.accumulatedUpdates[s]==null&&(this.accumulatedUpdates[s]={originalName:`${r}/accum_var`,variable:Le(()=>En(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedGrads[s].variable,l=this.accumulatedUpdates[s].variable;Le(()=>{const c=ve(ie(u,this.rho),ie(dr(i),1-this.rho)),d=ie(je(Zr(ve(l,this.epsilon)),Zr(ve(u,this.epsilon))),i),p=ve(ie(l,this.rho),ie(dr(d),1-this.rho));u.assign(c),l.assign(p);const h=ve(ie(d,-this.learningRate),o);o.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(tn(this.accumulatedGrads.map(e=>e.variable)),tn(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=e.length/2,r=!1;this.accumulatedGrads=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedUpdates=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.rho,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sw extends Co{static get className(){return"Adagrad"}constructor(e,n=.1){super(),this.learningRate=e,this.initialAccumulatorValue=n,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=P.registeredVariables[r];this.accumulatedGrads[s]==null&&(this.accumulatedGrads[s]={originalName:`${r}/accumulator`,variable:Le(()=>ju(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[s].tensor:e[r];if(a==null)return;const i=this.accumulatedGrads[s].variable;Le(()=>{const u=ve(i,dr(a));i.assign(u);const l=ve(ie(je(a,Zr(ve(u,P.backend.epsilon()))),-this.learningRate),o);o.assign(l)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&tn(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulatedGrads=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,n){return new e(n.learningRate,n.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $w extends Co{static get className(){return"Adam"}constructor(e,n,r,s=null){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Le(()=>{this.accBeta1=Re(n).variable(),this.accBeta2=Re(r).variable()}),s==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Le(()=>{const r=Ne(1,this.accBeta1),s=Ne(1,this.accBeta2);n.forEach((o,a)=>{const i=P.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Le(()=>En(i).variable(u))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:Le(()=>En(i).variable(u))});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const c=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,p=ve(ie(c,this.beta1),ie(l,1-this.beta1)),h=ve(ie(d,this.beta2),ie(dr(l),1-this.beta2)),f=je(p,r),m=je(h,s);c.assign(p),d.assign(h);const y=ve(ie(je(f,ve(Zr(m),this.epsilon)),-this.learningRate),i);i.assign(y)}),this.accBeta1.assign(ie(this.accBeta1,this.beta1)),this.accBeta2.assign(ie(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&tn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&tn(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e),Le(()=>{this.accBeta1.assign(Ni(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ni(this.beta2,this.iterations_+1))});const n=e.length/2,r=!1;this.accumulatedFirstMoment=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedSecondMoment=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw extends Co{static get className(){return"Adamax"}constructor(e,n,r,s=null,o=0){super(),this.learningRate=e,this.beta1=n,this.beta2=r,this.epsilon=s,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Le(()=>{this.iteration=Re(0).variable(),this.accBeta1=Re(n).variable()}),s==null&&(this.epsilon=P.backend.epsilon())}applyGradients(e){const n=Array.isArray(e)?e.map(r=>r.name):Object.keys(e);Le(()=>{const r=Ne(1,this.accBeta1),s=je(-this.learningRate,ve(ie(this.iteration,this.decay),1));n.forEach((o,a)=>{const i=P.registeredVariables[o],u=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:En(i).variable(u)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:En(i).variable(u)});const l=Array.isArray(e)?e[a].tensor:e[o];if(l==null)return;const c=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,p=ve(ie(c,this.beta1),ie(l,1-this.beta1)),h=ie(d,this.beta2),f=vn(l),m=sw(h,f);c.assign(p),d.assign(m);const y=ve(ie(je(s,r),je(p,ve(m,this.epsilon))),i);i.assign(y)}),this.iteration.assign(ve(this.iteration,1)),this.accBeta1.assign(ie(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&tn(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&tn(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,n){return new e(n.learningRate,n.beta1,n.beta2,n.epsilon,n.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hm extends Co{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=Array.isArray(e)?e[s].tensor:e[r];if(o==null)return;const a=P.registeredVariables[r];Le(()=>{const i=ve(ie(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Nr(Re(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,n){return new e(n.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iw extends Hm{static get className(){return"Momentum"}constructor(e,n,r=!1){super(e),this.learningRate=e,this.momentum=n,this.useNesterov=r,this.accumulations=[],this.m=Re(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=P.registeredVariables[r];this.accumulations[s]==null&&(this.accumulations[s]={originalName:`${r}/momentum`,variable:Le(()=>En(o).variable(!1))});const a=this.accumulations[s].variable,i=Array.isArray(e)?e[s].tensor:e[r];i!=null&&Le(()=>{let u;const l=ve(ie(this.m,a),i);this.useNesterov?u=ve(ie(this.c,ve(i,ie(l,this.m))),o):u=ve(ie(this.c,l),o),a.assign(l),o.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&tn(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=!1;this.accumulations=e.map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,n){return new e(n.learningRate,n.momentum,n.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nw extends Co{static get className(){return"RMSProp"}constructor(e,n=.9,r=0,s=null,o=!1){if(super(),this.learningRate=e,this.decay=n,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,s==null&&(this.epsilon=P.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(r=>r.name):Object.keys(e)).forEach((r,s)=>{const o=P.registeredVariables[r],a=!1;this.accumulatedMeanSquares[s]==null&&(this.accumulatedMeanSquares[s]={originalName:`${r}/rms`,variable:Le(()=>En(o).variable(a))}),this.accumulatedMoments[s]==null&&(this.accumulatedMoments[s]={originalName:`${r}/momentum`,variable:Le(()=>En(o).variable(a))}),this.accumulatedMeanGrads[s]==null&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${r}/mg`,variable:Le(()=>En(o).variable(a))});const i=Array.isArray(e)?e[s].tensor:e[r];if(i==null)return;const u=this.accumulatedMeanSquares[s].variable,l=this.accumulatedMoments[s].variable;Le(()=>{const c=ve(ie(u,this.decay),ie(dr(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[s].variable,p=ve(ie(d,this.decay),ie(i,1-this.decay)),h=je(ie(i,this.learningRate),Zr(Ne(c,ve(dr(p),this.epsilon)))),f=ve(ie(l,this.momentum),h);u.assign(c),d.assign(p),l.assign(f);const m=Ne(o,f);o.assign(m)}else{const d=ve(ie(u,this.decay),ie(dr(i),1-this.decay)),p=ve(ie(l,this.momentum),je(ie(i,this.learningRate),Zr(ve(d,this.epsilon))));u.assign(d),l.assign(p);const h=Ne(o,p);o.assign(h)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&tn(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&tn(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&tn(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(n=>({name:n.originalName,tensor:n.variable})))}async setWeights(e){e=await this.extractIterations(e);const n=this.centered?e.length/3:e.length/2,r=!1;this.accumulatedMeanSquares=e.slice(0,n).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=e.slice(n,n*2).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=e.slice(n*2,n*3).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,n){return new e(n.learningRate,n.decay,n.momentum,n.epsilon,n.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EV=[Cw,Sw,$w,kw,Iw,Nw,Hm];function RV(){for(const t of EV)CT(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V="model",DV=".json",PV=".weights.bin";function eC(t){return new Promise(e=>setTimeout(e)).then(t)}class da{constructor(e){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(da.URL_SCHEME)&&(e=e.slice(da.URL_SCHEME.length)),(e==null||e.length===0)&&(e=_V),this.modelJsonFileName=e+DV,this.weightDataFileName=e+PV}async save(e){if(typeof document=="undefined")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const n=Mr.join(e.weightData),r=window.URL.createObjectURL(new Blob([n],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=Vk(e,s),a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=a,await eC(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=r,await eC(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:gp(e)}}}}da.URL_SCHEME="downloads://";class AV{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,n)=>{const r=new FileReader;r.onload=s=>{const o=JSON.parse(s.target.result),a=o.modelTopology;if(a==null){n(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(o.weightsManifest==null){n(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:a});return}const u=F1(o,l=>this.loadWeights(l));e(u)},r.onerror=s=>n(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(e){const n=[],r=[];for(const a of e)n.push(...a.weights),r.push(...a.paths);const s=this.checkManifestAndWeightFiles(e),o=r.map(a=>this.loadWeightsFile(a,s[a]));return Promise.all(o).then(a=>[n,a])}loadWeightsFile(e,n){return new Promise((r,s)=>{const o=new FileReader;o.onload=a=>{const i=a.target.result;r(i)},o.onerror=a=>s(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(n)})}checkManifestAndWeightFiles(e){const n=[],r=this.weightsFiles.map(o=>Qb(o.name)),s={};for(const o of e)o.paths.forEach(a=>{const i=Qb(a);if(n.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(n.push(i),r.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);s[a]=this.weightsFiles[r.indexOf(i)]});if(n.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}const OV=t=>z().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(da.URL_SCHEME)?FV(t.slice(da.URL_SCHEME.length)):null;ot.registerSaveRouter(OV);function FV(t="model"){return new da(t)}function LV(t){return new AV(t)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tC(t,e,n,r){a(t),n=n==null?0:n,r=r==null?1:r,i(n,r);let s=0;const o=u=>(u.then(l=>{const c=n+ ++s/t.length*(r-n);return e(c),l}),u);function a(u){k(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function i(u,l){k(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),k(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),k(l>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${l}`)}return Promise.all(t.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ST(t,e){e==null&&(e={});const n=e.fetchFunc==null?z().platform.fetch:e.fetchFunc,r=t.map(d=>n(d,e.requestInit,{isBinary:!0})),s=0,o=.5,i=(e.onProgress==null?await Promise.all(r):await tC(r,e.onProgress,s,o)).map(d=>d.arrayBuffer()),u=.5,l=1;return e.onProgress==null?await Promise.all(i):await tC(i,e.onProgress,u,l)}function zV(t,e){var n;const r=e.fetchFunc==null?z().platform.fetch:e.fetchFunc;let s=0,o;return(n=e.onProgress)===null||n===void 0||n.call(e,0),new ReadableStream({pull:async a=>{for(var i;s<t.length;){o||(o=(await r(t[s],e.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:l}=await o.read();if(u){s++,o=void 0,(i=e.onProgress)===null||i===void 0||i.call(e,s/t.length);continue}a.enqueue(l);return}a.close()}})}async function BV(t,e="",n,r){return $T(a=>ST(a,{requestInit:r}))(t,e,n)}function $T(t){return async(e,n="",r)=>{const s=e.map(()=>!1),o={},a=r!=null?r.map(()=>!1):[],i=[];if(e.forEach((h,f)=>{let m=0;h.weights.forEach(y=>{const g="quantization"in y?y.quantization.dtype:y.dtype,x=ia[g]*L(y.shape),w=()=>{s[f]=!0,o[f]==null&&(o[f]=[]),o[f].push({manifestEntry:y,groupOffset:m,sizeBytes:x})};r!=null?r.forEach((v,b)=>{v===y.name&&(w(),a[b]=!0)}):w(),i.push(y.name),m+=x})}),!a.every(h=>h)){const h=r.filter((f,m)=>!a[m]);throw new Error(`Could not find weights in manifest with names: ${h.join(", ")}. 
Manifest JSON has weights with names: ${i.join(", ")}.`)}const u=s.reduce((h,f,m)=>(f&&h.push(m),h),[]),l=[];u.forEach(h=>{e[h].paths.forEach(f=>{const m=n+(n.endsWith("/")?"":"/")+f;l.push(m)})});const c=await t(l),d={};let p=0;return u.forEach(h=>{const f=e[h].paths.length,m=new Mr(c.slice(p,p+f));o[h].forEach(g=>{const x=m.slice(g.groupOffset,g.groupOffset+g.sizeBytes),w=zk(x,[g.manifestEntry]);for(const v in w)d[v]=w[v]}),p+=f}),d}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MV="application/octet-stream",VV="application/json";class Tw{constructor(e,n){if(this.DEFAULT_METHOD="POST",n==null&&(n={}),this.weightPathPrefix=n.weightPathPrefix,this.weightUrlConverter=n.weightUrlConverter,n.fetchFunc!=null?(k(typeof n.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=n.fetchFunc):this.fetch=z().platform.fetch,k(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&k(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,n.requestInit!=null&&n.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=n.requestInit||{},this.loadOptions=n}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const n=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);n.body=new FormData;const r=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Vk(e,r);if(n.body.append("model.json",new Blob([JSON.stringify(s)],{type:VV}),"model.json"),e.weightData!=null){const a=Mr.join(e.weightData);n.body.append("model.weights.bin",new Blob([a],{type:MV}),"model.weights.bin")}const o=await this.fetch(this.path,n);if(o.ok)return{modelArtifactsInfo:gp(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let n;try{n=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const r=n.modelTopology,s=n.weightsManifest;if(r==null&&s==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return n}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return F1(e,n=>this.loadWeights(n))}async loadStream(){const e=await this.loadModelJSON(),n=await this.getWeightUrls(e.weightsManifest),r=ff(e.weightsManifest),s=()=>zV(n,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:r,getWeightStream:s})}async getWeightUrls(e){const n=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=WV(n),o=this.weightPathPrefix||r,a=[],i=[];for(const u of e)for(const l of u.paths)this.weightUrlConverter!=null?i.push(this.weightUrlConverter(l)):a.push(o+l+s);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const n=await this.getWeightUrls(e),r=ff(e),s=await ST(n,this.loadOptions);return[r,s]}}Tw.URL_SCHEME_REGEX=/^https?:\/\//;function WV(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?"),r=t.substring(0,e),s=n>e?t.substring(n):"";return[r+"/",s]}function Hx(t){return t.match(Tw.URL_SCHEME_REGEX)!=null}const kT=(t,e)=>{if(typeof fetch=="undefined"&&(e==null||e.fetchFunc==null))return null;{let n=!0;if(Array.isArray(t)?n=t.every(r=>Hx(r)):n=Hx(t),n)return Ew(t,e)}return null};ot.registerSaveRouter(kT);ot.registerLoadRouter(kT);function Ew(t,e){return new Tw(t,e)}function UV(t,e){return Ew(t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gy{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class IT{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class GV{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=n=>Promise.resolve(e.save(n)))}}function HV(t,e,n,r){const s=arguments;return new GV(wf(...s))}function wf(t,e,n,r){return arguments.length===1?t.modelTopology!=null||t.weightSpecs!=null?new gy(t):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gy({modelTopology:t})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new gy({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))}function jV(t){return new IT(t)}function KV(t){return new IT(t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Rw=Object.freeze(Object.defineProperty({__proto__:null,browserFiles:LV,browserHTTPRequest:UV,CompositeArrayBuffer:Mr,concatenateArrayBuffers:oF,decodeWeights:zk,decodeWeightsStream:Mk,encodeWeights:JO,fromMemory:HV,fromMemorySync:wf,getLoadHandlers:hF,getModelArtifactsForJSON:F1,getModelArtifactsForJSONSync:O1,getModelArtifactsInfoForJSON:gp,getSaveHandlers:pF,getWeightSpecs:ff,http:Ew,isHTTPScheme:Hx,loadWeights:BV,registerLoadRouter:dF,registerSaveRouter:cF,weightsLoaderFactory:$T,withSaveHandler:jV,withSaveHandlerSync:KV,copyModel:NF,listModels:kF,moveModel:TF,removeModel:IF},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(t,e,n){const r=I(t,"labels","confusionMatrix"),s=I(e,"predictions","confusionMatrix");k(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),k(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),k(s.rank===1,()=>`Expected the rank of predictions to be 1, but got ${s.rank}`),k(r.shape[0]===s.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`),k(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const o=xf(Ke(r,"int32"),n),a=xf(Ke(s,"int32"),n),i=fc(o),u=Be(i,a);return Ke(u,"int32")}const XV=D({confusionMatrix_:qV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var YV=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:XV},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let To,nC=!1;function NT(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(t==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,o=!1,a=!1,i=!1;if(t.data instanceof Uint8Array)n=!0;else if(typeof ImageData!="undefined"&&t instanceof ImageData)r=!0;else if(typeof HTMLVideoElement!="undefined"&&t instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement)o=!0;else if(t.getContext!=null)a=!0;else if(typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap)i=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);if(sc(nc,P.backendName)!=null){const f={pixels:t},m={numChannels:e};return P.runKernel(nc,f,m)}const[l,c]=s?[t.videoWidth,t.videoHeight]:[t.width,t.height];let d;if(a)d=t.getContext("2d").getImageData(0,0,l,c).data;else if(r||n)d=t.data;else if(o||s||i){if(To==null)if(typeof document=="undefined")if(typeof OffscreenCanvas!="undefined"&&typeof OffscreenCanvasRenderingContext2D!="undefined")To=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else To=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});To.canvas.width=l,To.canvas.height=c,To.drawImage(t,0,0,l,c),d=To.getImageData(0,0,l,c).data}let p;if(e===4)p=new Int32Array(d);else{const f=l*c;p=new Int32Array(f*e);for(let m=0;m<f;m++)for(let y=0;y<e;++y)p[m*e+y]=d[m*4+y]}return yw(p,[c,l,e],"int32")}function QV(t){return t!=null&&t.data instanceof Uint8Array}function ZV(){return typeof window!="undefined"&&typeof ImageBitmap!="undefined"&&window.hasOwnProperty("createImageBitmap")}function JV(t){return t!=null&&t.width!==0&&t.height!==0}function eW(t){return ZV()&&!(t instanceof ImageBitmap)&&JV(t)&&!QV(t)}async function tW(t,e=3){let n=null;if(z().getBool("WRAP_TO_IMAGEBITMAP")&&eW(t)){let r;try{r=await createImageBitmap(t,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===t.width&&r.height===t.height?n=r:n=t}else n=t;return NT(n,e)}function TT(t){if(t.rank!==2&&t.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const e=t.rank===2?1:t.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(t.dtype!=="float32"&&t.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`)}function nW(t){const e=(t==null?void 0:t.alpha)||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function rW(t,e){let n=I(t,"img","toPixels");if(!(t instanceof ct)){const l=n;n=Ke(l,"int32"),l.dispose()}TT(n);const[r,s]=n.shape.slice(0,2),o=n.rank===2?1:n.shape[2],a=await n.data(),i=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const c=[0,0,0,255];for(let p=0;p<o;p++){const h=a[l*o+p];if(n.dtype==="float32"){if(h<0||h>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${h}.`)}else if(n.dtype==="int32"&&(h<0||h>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${h}.`);o===1?(c[0]=h*i,c[1]=h*i,c[2]=h*i):c[p]=h*i}const d=l*4;u[d+0]=Math.round(c[0]),u[d+1]=Math.round(c[1]),u[d+2]=Math.round(c[2]),u[d+3]=Math.round(c[3])}if(e!=null){nC||sc(ld,P.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),nC=!0),e.width=s,e.height=r;const l=e.getContext("2d"),c=new ImageData(u,s,r);l.putImageData(c,0,0)}return n!==t&&n.dispose(),u}function sW(t,e,n){let r=I(t,"img","draw");if(!(t instanceof ct)){const a=r;r=Ke(a,"int32"),a.dispose()}TT(r),nW(n==null?void 0:n.imageOptions);const s={image:r},o={canvas:e,options:n};P.runKernel(ld,s,o)}const oW=D({fromPixels_:NT});var aW=Object.freeze(Object.defineProperty({__proto__:null,fromPixelsAsync:tW,toPixels:rW,draw:sW,fromPixels:oW},Symbol.toStringTag,{value:"Module"}));function kp(t,e){const n=t.shape.length,r=e.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[r-1]} vs. ${n}`);if(L(t.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const s=e.shape,o=s[s.length-1];let a=1;for(let d=0;d<s.length-1;++d)a*=s[d];const i=t.shape,u=s.slice();u.pop();let l=1;for(let d=o;d<n;++d)l*=i[d],u.push(i[d]);const c=[...fe(t.shape).map(d=>d/l),1].slice(0,o);return[u,a,l,c]}var iW=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:kp},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jx=-2,uW=-1;function jm(t,e,n){const r=t.shape.length;k(r===e.length,()=>`Error in slice${r}D: Length of begin ${e} must match the rank of the array (${r}).`),k(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)k(e[s]+n[s]<=t.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${e[s]+n[s]}) would overflow input.shape[${s}] (${t.shape[s]})`)}function lW(t){const e=[];let n=0;for(;t>0;)t&1&&e.push(n),t/=2,n++;return e}function Km(t,e,n){const r=[];for(let s=0;s<t.length;s++)r[s]=Math.ceil((e[s]-t[s])/n[s]);return r}function ET(t,e,n,r){const s=[...t];for(let o=s.length;o<r.length;o++)s.push(1);for(let o=0;o<n;o++)o===0?s[e]=1:(s.splice(e,0,1),s.pop());return s}function RT(t,e,n){return n<=t?n:n-(e-1)}function _T(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function cW(t,e,n,r,s,o,a,i,u){const l=t.length;let c=new Array(l),d=new Array(l),p=new Array(l);if(e.length&&n>0){const h=e[0],f=n+1;c=DT(a,h,f,r,t),d=PT(i,h,f,s,t),p=ET(o,h,f,t)}else for(let h=0;h<l;h++)c[h]=OT(a,r,o,t,h,u),d[h]=FT(i,s,o,t,h,u),p[h]=AT(o,h,u);return{begin:c,end:d,strides:p}}function DT(t,e,n,r,s){const o=[...s],a=_T(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const u=RT(e,n,i);let l=r[u];t&1<<u&&(l=0),o[i]=l}return o}function PT(t,e,n,r,s){const o=[...s],a=_T(n,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const u=RT(e,n,i);let l=r[u];t&1<<u&&(l=Number.MAX_SAFE_INTEGER),o[i]=l}for(let i=0;i<o.length;i++){const u=s[i];o[i]<0&&(o[i]+=u),o[i]=so(0,o[i],s[i])}return o}function AT(t,e,n){let r=t[e];return(n&1<<e||r==null)&&(r=1),r}function OT(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),a=so(0,a,u-1),a}function FT(t,e,n,r,s,o){let a=e[s];const i=n[s]||1;(t&1<<s||o&1<<s||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const u=r[s];return a<0&&(a+=u),i>0?a=so(0,a,u):a=so(-1,a,u-1),a}function _w(t,e,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(e[s]>0||n[s]!==t[s])return!1;return!0}function Dw(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function qm(t,e,n){let r;const s=t.shape.length;typeof e=="number"?r=[e,...new Array(s-1).fill(0)]:e.length<s?r=e.concat(new Array(s-e.length).fill(0)):r=e.slice(),r.forEach(a=>{k(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return n==null?o=new Array(s).fill(-1):typeof n=="number"?o=[n,...new Array(s-1).fill(-1)]:n.length<s?o=n.concat(new Array(s-n.length).fill(-1)):o=n,o=o.map((a,i)=>a>=0?a:(k(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),t.shape[i]-r[i])),[r,o]}function Xm(t,e,n,r,s,o,a,i,u){let l;if(r==null?(l=new Array(e.length),l.fill(1)):l=r,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let w=0;w<d.dims;w++)c&&(1<<w&i)!==0&&d.numAddAxisAfterEllipsis++,1<<w&a&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:t.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};dW(d,p);let h=!0,f=!0,m=!0;const y=[],g=[];for(let w=0;w<t.length;++w){if(p.strides[w]===0)throw Error(`strides[${w}] must be non-zero`);const v=!!(p.shrinkAxisMask&1<<w),b=t[w];if(b===-1){y.push(v?1:-1);continue}const S=[p.beginMask&1<<w,p.endMask&1<<w],$=[p.strides[w]>0?0:-1,p.strides[w]>0?b:b-1];if(v&&p.strides[w]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&p.strides[w]===1;const N=!!(p.beginMask&1<<w&&p.endMask&1<<w);if(p.beginValid&&p.endValid){if(v){const B=p.begin[w]<0?b+p.begin[w]:p.begin[w];if(p.begin[w]=B,p.end[w]=p.begin[w]+1,B<0||B>=b)throw Error(`slice index ${p.begin[w]} of dimension ${w} out of bounds.`)}else p.begin[w]=rC(p.begin[w],0,p.strides[w],b,S,$),p.end[w]=rC(p.end[w],1,p.strides[w],b,S,$);const F=p.strides[w]===1&&p.begin[w]===0&&p.end[w]===b;h=h&&F,f=f&&(w===0&&p.strides[w]===1||F)}else h=h&&p.strides[w]===1&&N,f=f&&(w===0&&p.strides[w]===1||N);let E,R=!1;if(p.beginValid&&p.endValid?(E=p.end[w]-p.begin[w],R=!0):v?(E=1,R=!0):N&&b>=0&&(p.strides[w]<0?E=-b:E=b,R=!0),R){let F;E===0||E<0!=p.strides[w]<0?F=0:F=Math.trunc(E/p.strides[w])+(E%p.strides[w]!==0?1:0),y.push(F)}else y.push(-1)}for(let w=0;w<p.finalShapeGatherIndices.length;++w){const v=p.finalShapeGatherIndices[w];v>=0?g.push(y[v]):v===jx&&g.push(1)}return{finalShapeSparse:g.filter((w,v)=>p.finalShapeGatherIndices[v]!==jx),finalShape:g,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function dW(t,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let n=0;e.beginValid=t.begin!=null,e.endValid=t.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let r=0;r<t.dims;r++)if(1<<r&t.ellipsisMask){const s=Math.min(e.dims-(t.dims-r)+1+t.numAddAxisAfterEllipsis,e.dims);for(;n<s;n++)e.begin[n]=0,e.end[n]=0,e.strides[n]=1,e.beginMask|=1<<n,e.endMask|=1<<n,e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&t.newAxisMask)e.finalShapeGatherIndices.push(jx),e.finalShapeGatherIndicesSparse.push(-1);else{if(n===e.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${e.dims} dims, ${e.begin.length}.`);t.begin!=null&&(e.begin[n]=t.begin[r]),t.end!=null&&(e.end[n]=t.end[r]),e.strides[n]=t.strides[r],t.beginMask&1<<r&&(e.beginMask|=1<<n),t.endMask&1<<r&&(e.endMask|=1<<n),t.shrinkAxisMask&1<<r?(e.finalShapeGatherIndices.push(uW),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<n):(e.finalShapeGatherIndices.push(n),e.finalShapeGatherIndicesSparse.push(r)),e.inputShapeGatherIndicesSparse[n]=r,n++}}function rC(t,e,n,r,s,o){if(s[e])return n>0?o[e]:o[e+1&1];{const a=t<0?r+t:t;return a<o[0]?o[0]:a>o[1]?o[1]:a}}var LT=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:jm,maskToAxes:lW,computeOutShape:Km,stridesWithElidedDims:ET,getNormalizedAxes:cW,startIndicesWithElidedDims:DT,stopIndicesWithElidedDims:PT,stridesForAxis:AT,startForAxis:OT,stopForAxis:FT,isSliceContinous:_w,computeFlatOffset:Dw,parseSliceParams:qm,sliceInfo:Xm},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const pW="4.15.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zT{static sgd(e){return new Hm(e)}static momentum(e,n,r=!1){return new Iw(e,n,r)}static rmsprop(e,n=.9,r=0,s=null,o=!1){return new Nw(e,n,r,s,o)}static adam(e=.001,n=.9,r=.999,s=null){return new $w(e,n,r,s)}static adadelta(e=.001,n=.95,r=null){return new Cw(e,n,r)}static adamax(e=.002,n=.9,r=.999,s=null,o=0){return new kw(e,n,r,s,o)}static adagrad(e,n=.1){return new Sw(e,n)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=zT;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=(()=>typeof requestAnimationFrame!="undefined"?requestAnimationFrame:typeof setImmediate!="undefined"?setImmediate:t=>t())();function BT(){return new Promise(t=>fW(()=>t()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(t,e){const n=t[0].length;t.forEach((s,o)=>{k(s.length===n,()=>`Error in concat${n}D: rank of tensors[${o}] must be the same as the rank of the rest (${n})`)}),k(e>=0&&e<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=t[0];t.forEach((s,o)=>{for(let a=0;a<n;a++)k(a===e||s[a]===r[a],()=>`Error in concat${n}D: Shape of tensors[${o}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`)})}function ln(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var $r;(function(t){t[t.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",t[t.VALUE_ROWIDS=1]="VALUE_ROWIDS",t[t.ROW_LENGTHS=2]="ROW_LENGTHS",t[t.ROW_SPLITS=3]="ROW_SPLITS",t[t.ROW_LIMITS=4]="ROW_LIMITS",t[t.ROW_STARTS=5]="ROW_STARTS"})($r||($r={}));function MT(t,e,n){let r=new Array;if(n==null&&e==null)return r;if(e==null)for(;r.length<t+n.length;)r.push(-1);else r=e.slice();if(n==null)return r;if(t+n.length!==r.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${t+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const o=n[s],a=r[r.length-n.length+s],i=r[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${s+t}] = ${o} but shape[${s+t}] = ${i}`)}else r[a]=o}return r}function VT(t){const e={FIRST_DIM_SIZE:$r.FIRST_DIM_SIZE,VALUE_ROWIDS:$r.VALUE_ROWIDS,ROW_LENGTHS:$r.ROW_LENGTHS,ROW_SPLITS:$r.ROW_SPLITS,ROW_LIMITS:$r.ROW_LIMITS,ROW_STARTS:$r.ROW_STARTS},n=[];for(const r of t)if(r in e)n.push(e[r]);else break;return n}function WT(t){return t.length===0?0:t[0]===$r.FIRST_DIM_SIZE?t.length-1:t.length}function UT(t,e){if(t==null||e==null)return;const n=t.length,r=e.length;if(n>=r)throw new Error(`defaultValue.shape=${t} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const o=t[s],a=e[s+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${t}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${s-t.length}] = ${o} but ragged tensor input.flatValues.shape[${s-t.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw=30;function Qm(t){return t<=Pw?t:lf(t,Math.floor(Math.sqrt(t)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zm(t,e,n){const r=n*(typeof t=="number"?t:t[0]),s=e*(typeof t=="number"?t:t[1]);return[r,s]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(t,e,n,r=!0){let s=[];if(r)s=s.concat(e.slice(0)),s.push(t[0]/n),s=s.concat(t.slice(1));else{s=s.concat(t[0]);const o=e.length;for(let a=0;a<o;++a)s=s.concat([t[a+1]/e[a],e[a]]);s=s.concat(t.slice(o+1))}return s}function Ta(t,e,n=!0){const r=[];if(n){r.push(e);for(let s=e+1;s<t;++s)s<=2*e?(r.push(s),r.push(s-(e+1))):r.push(s)}else{const s=[],o=[];for(let a=1;a<t;++a)a>=e*2+1||a%2===1?o.push(a):s.push(a);r.push(...s),r.push(0),r.push(...o)}return r}function Ea(t,e,n,r=!0){const s=[];r?s.push(t[0]/n):s.push(t[0]*n);for(let o=1;o<t.length;++o)o<=e.length?r?s.push(e[o-1]*t[o]):s.push(t[o]/e[o-1]):s.push(t[o]);return s}function Jm(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function eg(t,e,n){const r=t.slice(0,1);for(let s=0;s<n;++s)r.push(t[s+1]-e[s][0]-e[s][1]);return r}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tg=1.7580993408473768,ng=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rg=.3275911,sg=.254829592,og=-.284496736,ag=1.421413741,ig=-1.453152027,ug=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fr(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(t.length*2);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function GT(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function HT(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=0;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function jT(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let s=2;s<t.length;s+=4)n[Math.floor(s/4)]=t[s],r[Math.floor(s/4)]=t[s+1];return{real:n,imag:r}}function Aw(t,e){const n=t[e*2],r=t[e*2+1];return{real:n,imag:r}}function KT(t,e,n,r){t[r*2]=e,t[r*2+1]=n}function qT(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let s=0;s<Math.ceil(t/2);s++){const o=(e?2:-2)*Math.PI*(s/t);n[s]=Math.cos(o),r[s]=Math.sin(o)}return{real:n,imag:r}}function XT(t,e,n){const r=(n?2:-2)*Math.PI*(t/e),s=Math.cos(r),o=Math.sin(r);return{real:s,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yy="->",mW=/->/g,sC=",",oC="...";function lg(t,e){t=t.replace(/\s/g,"");const n=(t.length-t.replace(mW,"").length)/yy.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${yy}").`);const[r,s]=t.split(yy);k(r.indexOf(oC)===-1,()=>`The ellipsis notation ("${oC}") is not supported yet.`);const o=r.split(sC),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let p=0;p<s.length;++p){const h=s[p];if(!o.some(f=>f.indexOf(h)!==-1))throw new Error(`Output subscripts contain the label ${h} not present in the input subscripts.`);i.indexOf(h)===-1&&i.push(h)}for(let p=0;p<r.length;++p){const h=r[p];i.indexOf(h)===-1&&h!==sC&&i.push(h)}const u=new Array(o.length);for(let p=0;p<a;++p){if(new Set(o[p].split("")).size!==o[p].length)throw new Error(`Found duplicate axes in input component ${o[p]}. Support for duplicate axes in input is not implemented yet.`);u[p]=[];for(let h=0;h<o[p].length;++h)u[p].push(i.indexOf(o[p][h]))}const l=i.length,c=s.length,d=[];for(let p=c;p<l;++p)d.push(p);return{allDims:i,summedDims:d,idDims:u}}function cg(t,e){let n=new Array(t);n.fill(-1);for(let s=0;s<e.length;++s)n[e[s]]=s;const r=[];for(let s=0;s<t;++s)n[s]===-1&&r.push(s);return n=n.filter(s=>s!==-1),{permutationIndices:n,expandDims:r}}function dg(t,e,n){const r=new Array(t);for(let s=0;s<n.length;++s){const o=n[s].shape;for(let a=0;a<e[s].length;++a)r[e[s][a]]===void 0?r[e[s][a]]=o[a]:k(r[e[s][a]]===o[a],()=>`Expected dimension ${r[e[s][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function pg(t,e){const n=t,r=[];let s=0;t.length===0&&n.push(-1),s=t.length+1;for(let a=0;a<s;++a)r.push([]);const o=[];for(let a=0;a<n.length;++a){const i=n[a],u=gW(e,i);for(const l of u)o.indexOf(l)===-1&&(r[a].push(l),o.push(l))}return{path:n,steps:r}}function hg(t){return t.every((e,n)=>e===n)}function gW(t,e){const n=[];for(let r=0;r<t.length;++r)(t[r].length===0||t[r].indexOf(e)!==-1||e===-1)&&n.push(r);return n}function fg(t,e,n=0){let r=[];if(typeof e=="number")k(t.shape[n]%e===0,()=>"Number of splits must evenly divide the axis."),r=new Array(e).fill(t.shape[n]/e);else{const s=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);k(s<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,u)=>u>0?i+u:i);e[o]=t.shape[n]-a}k(t.shape[n]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),r=e}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(t){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${t}`}function QT(t,e){return`indices(${t}, 0) is invalid: ${e} < 0`}function ZT(t,e,n){return`indices(${t}, 0) is invalid: ${e} >= ${n}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(t,e){return`only one output dimension may be -1, not both ${t} and ${e}`}function eE(t,e){return`size ${t} must be non-negative, not ${e}`}function tE(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function nE(t,e){const n=L(t),r=L(e);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${t} outputShape= ${e}`}function rE(t,e){const n=L(t),r=L(e);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${t} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kx(){return"segment ids must be >= 0"}function sE(){return"segment ids are not increasing"}function oE(t,e){return`Segment id ${t} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function aE(t,e,n){return`Bad: indices[${t}] == ${e} out of range [0, ${n})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(t,e){let n=!1,r;for(t<=Pw?(r=t,n=!0):r=lf(t,Math.floor(Math.sqrt(t)));!n;)r>e||r===t?n=!0:r=lf(t,r+1);return r}function Ow(t,e,n){const r=[],s=t.length;for(let o=0;o<s;o++)o!==e?r.push(t[o]):r.push(n);return r}function mg(t,e,n,r){const s=e.shape.length,o=t.shape.length;if(r!==0&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>o)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${o}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(t.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${t.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=t.shape[n],i=[];let u=1,l=1,c=1;for(let d=0;d<r;++d)i.push(t.shape[d]),u*=t.shape[d];for(let d=r;d<n;d++)i.push(t.shape[d]),l*=t.shape[d];for(let d=r;d<s;d++)i.push(e.shape[d]);for(let d=n+1;d<o;d++)i.push(t.shape[d]),c*=t.shape[d];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:a,outputShape:i}}var yW=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:iE,computeOutShape:Ow,collectGatherOpShapeInfo:mg},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lr(t){try{return t.map(e=>fr(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function uE(t){return t.map(e=>_r(e))}var lE=Object.freeze(Object.defineProperty({__proto__:null,slice_util:LT,segment_util:yW,fromUint8ToStringArray:Lr,fromStringArrayToUint8:uE,upcastType:$t,axesAreInnerMostDims:j1,combineLocations:LI,computeOutAndReduceShapes:wt,expandShapeToKeepDim:vt,assertAxesAreInnerMostDims:bt,getAxesPermutation:Ye,getUndoAxesPermutation:ka,getInnerMostAxes:Qe,getBroadcastDims:$s,getReductionAxes:U1,assertAndGetBroadcastShape:$e,assertParamsConsistent:Ym,computeOutShape:ln,computeDilation2DInfo:vo,computePool2DInfo:jt,computePool3DInfo:Yn,computeConv2DInfo:Xe,computeConv3DInfo:Vr,computeDefaultPad:B1,tupleValuesAreOne:lc,eitherStridesOrDilationsAreOne:Dt,stridesOrDilationsArePositive:ca,convertConv2DDataFormat:An,checkPadOnDimRoundingMode:gr,getFusedDyActivation:Mm,getFusedBiasGradient:Vm,applyActivation:Wm,shouldFuse:Um,get RowPartitionType(){return $r},combineRaggedTensorToTensorShapes:MT,getRowPartitionTypesHelper:VT,getRaggedRank:WT,validateDefaultValueShape:UT,PARALLELIZE_THRESHOLD:Pw,computeOptimalWindowSize:Qm,getImageCenter:Zm,getReshaped:Na,getPermuted:Ta,getReshapedPermuted:Ea,getSliceBeginCoords:Jm,getSliceSize:eg,prepareAndValidate:kp,validateUpdateShape:xw,validateInput:Lm,calculateShapes:Wr,SELU_SCALEALPHA:tg,SELU_SCALE:ng,ERF_P:rg,ERF_A1:sg,ERF_A2:og,ERF_A3:ag,ERF_A4:ig,ERF_A5:ug,warn:zn,log:aO,mergeRealAndImagArrays:Fr,splitRealAndImagArrays:GT,complexWithEvenIndex:HT,complexWithOddIndex:jT,getComplexWithIndex:Aw,assignToTypedArray:KT,exponents:qT,exponent:XT,decodeEinsumEquation:lg,getEinsumPermutation:cg,checkEinsumDimSizes:dg,getEinsumComputePath:pg,isIdentityPermutation:hg,prepareSplitSize:fg,getSparseFillEmptyRowsIndicesDenseShapeMismatch:YT,getSparseFillEmptyRowsNegativeIndexErrorMessage:QT,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:ZT,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:JT,getSparseReshapeNegativeOutputDimErrorMessage:eE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:tE,getSparseReshapeInputOutputMultipleErrorMessage:nE,getSparseReshapeInputOutputMismatchErrorMessage:rE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:Kx,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:sE,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:oE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:aE},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xW=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:Sp,nonMaxSuppressionV4Impl:Gm,nonMaxSuppressionV5Impl:$p,whereImpl:zm},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */RV();var wW=Object.freeze(Object.defineProperty({__proto__:null,AdadeltaOptimizer:Cw,AdagradOptimizer:Sw,AdamOptimizer:$w,AdamaxOptimizer:kw,MomentumOptimizer:Iw,Optimizer:Co,OptimizerConstructors:zT,RMSPropOptimizer:Nw,SGDOptimizer:Hm,Tensor:ct,TensorBuffer:yt,Variable:oc,get Rank(){return Px},sumOutType:mp,upcastType:$t,get Reduction(){return Jt},customGrad:Jr,grad:Nz,grads:Tz,valueAndGrad:Ez,valueAndGrads:Rz,variableGrads:jI,Environment:yk,env:z,get ENV(){return I1},nextFrame:BT,KernelBackend:_c,DataStorage:rm,abs:vn,acos:Xk,acosh:Yk,add:ve,addN:Qk,all:Zk,any:Jk,argMax:eI,argMin:tI,asin:nI,asinh:rI,atan:sI,atan2:oI,atanh:aI,avgPool:M1,avgPool3d:iI,basicLSTMCell:uI,batchToSpaceND:V1,batchNorm:yp,batchNorm2d:lI,batchNorm3d:cI,batchNorm4d:dI,bincount:W1,bitwiseAnd:pI,broadcastArgs:hI,broadcastTo:di,buffer:be,cast:Ke,ceil:fI,clipByValue:mI,clone:gs,complex:Ss,concat:Gt,concat1d:gI,concat2d:yI,concat3d:xI,concat4d:wI,conv1d:vI,conv2d:xp,conv2dTranspose:CI,conv3d:SI,conv3dTranspose:$I,cos:kI,cosh:II,cumprod:NI,cumsum:TI,denseBincount:EI,depthToSpace:RI,depthwiseConv2d:Tm,diag:_I,dilation2d:DI,div:je,divNoNan:PI,dot:AI,einsum:Fo,elu:H1,ensureShape:OI,equal:G1,erf:FI,euclideanNorm:BI,exp:uo,expandDims:us,expm1:MI,eye:K1,fill:ju,floor:q1,floorDiv:z1,gather:X1,greater:vp,greaterEqual:Y1,imag:bp,isFinite:VI,isInf:WI,isNaN:UI,leakyRelu:Q1,less:yf,lessEqual:Em,linspace:GI,localResponseNormalization:HI,log:Ti,log1p:Z1,logSigmoid:KI,logSoftmax:qI,logSumExp:ew,logicalAnd:cc,logicalNot:tw,logicalOr:nw,logicalXor:XI,lowerBound:YI,matMul:Be,max:Jo,maxPool:rw,maxPool3d:QI,maxPoolWithArgmax:ZI,maximum:sw,mean:dc,meshgrid:JI,min:gf,minimum:pc,mirrorPad:eN,mod:tN,moments:nN,mul:ie,multiRNNCell:rN,multinomial:sN,neg:Pr,notEqual:ow,oneHot:xf,ones:Gs,onesLike:oN,outerProduct:aN,pad:Ku,pad1d:iN,pad2d:uN,pad3d:lN,pad4d:cN,pool:dN,pow:Ni,prelu:iw,print:L1,prod:pN,raggedGather:hN,raggedRange:fN,raggedTensorToTensor:mN,rand:gN,randomGamma:IN,randomNormal:dw,randomStandardNormal:NN,randomUniform:Pm,randomUniformInt:TN,range:Ei,real:Ri,reciprocal:EN,relu:Cp,relu6:pw,reshape:Y,reverse:lo,reverse1d:RN,reverse2d:_N,reverse3d:DN,reverse4d:PN,round:hw,rsqrt:AN,scalar:Re,selu:ON,separableConv2d:FN,setdiff1dAsync:LN,sigmoid:Zo,sign:zN,sin:BN,sinh:MN,slice:Ue,slice1d:VN,slice2d:WN,slice3d:UN,slice4d:GN,softmax:HN,softplus:J1,spaceToBatchND:aw,fft:Am,ifft:hc,irfft:fw,rfft:Om,split:_i,sqrt:Zr,square:dr,squaredDifference:mw,squeeze:Fm,stack:es,step:gw,stridedSlice:jN,sub:Ne,sum:He,tan:KN,tanh:mf,tensor:Dr,tensor1d:Mn,tensor2d:hi,tensor3d:yw,tensor4d:qN,tensor5d:XN,tensor6d:YN,tensorScatterUpdate:QN,tile:pi,topk:ZN,truncatedNormal:JN,unique:eT,unsortedSegmentSum:tT,unstack:bo,upperBound:nT,variable:rT,where:ys,whereAsync:ww,zeros:ks,zerosLike:En,op:D,OP_SCOPE_SUFFIX:P1,booleanMaskAsync:sT,transpose:fc,norm:wp,movingAverage:oT,scatterND:aT,searchSorted:_m,sparseToDense:iT,gatherND:uT,dropout:lT,enclosingPowerOfTwo:vw,cosineWindow:Bm,inTopKAsync:cT,image:gT,linalg:yT,losses:xT,spectral:fT,fused:dT,signal:mT,sparse:wT,string:vT,train:hW,enableProdMode:MO,enableDebugMode:VO,disableDeprecationWarnings:WO,deprecationWarn:UO,disposeVariables:GO,engine:wn,memory:HO,profile:jO,tidy:Le,dispose:tn,keep:Nr,time:KO,setBackend:qO,ready:Ok,getBackend:Fk,removeBackend:XO,findBackend:YO,findBackendFactory:QO,registerBackend:Nm,backend:Lk,setPlatform:ZO,getKernel:sc,getGradient:Ex,getKernelsForBackend:pf,registerKernel:hp,registerGradient:iO,unregisterKernel:uO,unregisterGradient:lO,copyRegisteredKernels:cO,Abs:Dc,Acos:Ui,Acosh:Gi,Add:Sa,AddN:Pc,All:Ac,Any:Oc,ArgMax:Fc,ArgMin:Lc,Asin:Hi,Asinh:ji,Atan:Ki,Atanh:qi,Atan2:Xi,AvgPool:zc,AvgPoolGrad:um,AvgPool3D:Bc,AvgPool3DGrad:lm,BatchMatMul:Mc,BatchToSpaceND:Vc,Bincount:Wc,BitwiseAnd:Uc,BroadcastTo:JA,BroadcastArgs:Gc,Cast:Yi,Ceil:Qi,ClipByValue:Zi,Complex:Hc,ComplexAbs:jc,Concat:Kc,Conv2D:qc,Conv2DBackpropFilter:Xc,Conv2DBackpropInput:Yc,Conv3D:Qc,Conv3DBackpropFilterV2:cm,Conv3DBackpropInputV2:Zc,Cos:Ji,Cosh:eu,Cumprod:Jc,Cumsum:ed,CropAndResize:td,DenseBincount:nd,DepthToSpace:rd,DepthwiseConv2dNative:sd,DepthwiseConv2dNativeBackpropFilter:od,DepthwiseConv2dNativeBackpropInput:ad,Diag:id,Dilation2D:ud,Dilation2DBackpropInput:cf,Dilation2DBackpropFilter:df,Draw:ld,RealDiv:tu,Einsum:cd,Elu:nu,EluGrad:dm,Erf:ru,Equal:su,Exp:ou,ExpandDims:dd,Expm1:au,FFT:pd,Fill:hd,FlipLeftRight:fd,Floor:iu,FloorDiv:uu,FusedBatchNorm:md,GatherV2:gd,GatherNd:yd,Greater:lu,GreaterEqual:cu,Identity:du,IFFT:xd,Imag:wd,IsFinite:pu,IsInf:hu,IsNan:fu,LeakyRelu:vd,Less:mu,LessEqual:gu,LinSpace:bd,Log:yu,Log1p:xu,LogicalAnd:wu,LogicalNot:vu,LogicalOr:bu,LogicalXor:eO,LogSoftmax:tO,LowerBound:nO,LRN:Cd,LRNGrad:pm,MatrixBandPart:rO,Max:Sd,Maximum:Cu,MaxPool:$d,MaxPoolGrad:hm,MaxPool3D:kd,MaxPool3DGrad:fm,MaxPoolWithArgmax:Id,Mean:Nd,Min:Td,Minimum:Su,MirrorPad:Ed,Mod:$u,Multinomial:Rd,Multiply:ku,Neg:_d,NotEqual:Iu,NonMaxSuppressionV3:Dd,NonMaxSuppressionV4:mm,NonMaxSuppressionV5:Pd,OnesLike:Ad,OneHot:Od,Pack:Fd,PadV2:Ld,Pool:sO,Pow:Nu,Prelu:zd,Prod:Bd,RaggedGather:gm,RaggedRange:ym,RaggedTensorToTensor:xm,Range:Md,Real:Vd,Reciprocal:Tu,Relu:Eu,Reshape:Wd,ResizeNearestNeighbor:Ud,ResizeNearestNeighborGrad:wm,ResizeBilinear:Gd,ResizeBilinearGrad:vm,Relu6:Ru,Reverse:Hd,Round:_u,Rsqrt:Du,ScatterNd:jd,TensorScatterUpdate:Kd,SearchSorted:qd,Select:Xd,Selu:Pu,Slice:Yd,Sin:Au,Sinh:Ou,Sign:Fu,Sigmoid:Lu,Softplus:zu,Sqrt:Bu,Sum:Qd,SpaceToBatchND:Zd,SplitV:Jd,Softmax:ep,SparseFillEmptyRows:bm,SparseReshape:Cm,SparseSegmentMean:tp,SparseSegmentSum:np,SparseToDense:rp,SquaredDifference:Mu,Square:Sm,StaticRegexReplace:sp,StridedSlice:op,StringNGrams:ap,StringSplit:$m,StringToHashBucketFast:km,Sub:Vu,Tan:Wu,Tanh:Uu,Tile:Gu,TopK:ip,Transform:up,Transpose:Qo,Unique:Im,Unpack:lp,UnsortedSegmentSum:cp,UpperBound:oO,ZerosLike:dp,Step:Hu,FromPixels:nc,RotateWithOffset:pp,_FusedMatMul:bi,FusedConv2D:Ci,FusedDepthwiseConv2D:Si,version_core:pW,browser:aW,io:Rw,math:YV,serialization:TV,test_util:PB,util:wO,backend_util:lE,broadcast_util:GL,tensor_util:DO,slice_util:LT,gather_util:iW,scatter_util:vM,device_util:LO,kernel_impls:xW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=z();vW.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,t=>{t&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var tr;(function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_QINT16=15]="DT_QINT16",t[t.DT_QUINT16=16]="DT_QUINT16",t[t.DT_UINT16=17]="DT_UINT16",t[t.DT_COMPLEX128=18]="DT_COMPLEX128",t[t.DT_HALF=19]="DT_HALF",t[t.DT_RESOURCE=20]="DT_RESOURCE",t[t.DT_VARIANT=21]="DT_VARIANT",t[t.DT_UINT32=22]="DT_UINT32",t[t.DT_UINT64=23]="DT_UINT64",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",t[t.DT_QINT16_REF=115]="DT_QINT16_REF",t[t.DT_QUINT16_REF=116]="DT_QUINT16_REF",t[t.DT_UINT16_REF=117]="DT_UINT16_REF",t[t.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",t[t.DT_HALF_REF=119]="DT_HALF_REF",t[t.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",t[t.DT_VARIANT_REF=121]="DT_VARIANT_REF",t[t.DT_UINT32_REF=122]="DT_UINT32_REF",t[t.DT_UINT64_REF=123]="DT_UINT64_REF"})(tr||(tr={}));var aC;(function(t){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))})(aC||(aC={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fw={};function bW(t,e){const n={tfOpName:t,category:"custom",inputs:[],attrs:[],customExecutor:e};Fw[t]=n}function cE(t){return Fw[t]}function CW(t){delete Fw[t]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C(t,e,n,r,s){const o=e.inputParams[t];if(o&&o.inputIndexStart!==void 0){const i=o.inputIndexStart,u=o.inputIndexEnd===0?void 0:o.inputIndexEnd===void 0?i+1:o.inputIndexEnd,l=i<0?e.inputNames.length+i:i;if(o.type==="tensor")return Ot(e.inputNames[l],n,r,s);if(o.type==="tensors"){const p=e.inputs.slice(i,u);return e.inputNames.slice(i,u).filter((f,m)=>{var y;return((y=p[m])===null||y===void 0?void 0:y.op)!=="NoOp"}).map(f=>Ot(f,n,r,s))}const c=Ot(e.inputNames[l],n,r,s),d=c.dataSync();return o.type==="number"?d[0]:Gn(c.shape,d)}const a=e.attrParams[t];return a&&a.value}function Ot(t,e,n,r){const[s,o]=xn(t,n);if(r!=null){const i=r.getHashTableHandleByName(s);if(i!=null)return i}const a=n.currentContextIds.find(i=>!!e[vf(s,i)]);return a!==void 0?e[vf(s,a)][o]:void 0}function iC(t,e,n){return e[vf(t,n.currentContextId)]}function ls(t,e){const[n,r,s]=xn(t,e);return[vf(n,e&&e.currentContextId),r,s]}function vf(t,e){return e?`${t}-${e}`:t}function xn(t,e){if(t==="")return["",0,void 0];const n=e!=null&&e.parseNodeNameCache!=null;if(n){const o=e.parseNodeNameCache.get(t);if(o!=null)return o}const r=t.split(":");let s;if(r.length===1)s=[t,0,void 0];else{const o=r[0],a=r.length===3?r[1]:void 0,i=Number(r[r.length-1]);s=[o,i,a]}return n&&e.parseNodeNameCache.set(t,s),s}function kh(t,e,n){let r=C("pad",t,e,n);if(r==="explicit"){r=C("explicitPaddings",t,e,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)s[o][0]=r[o*2],s[o][1]=r[o*2+1];return s}return r}function cs(t){return t.kept?t:gs(t)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SW=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var $W=Object.freeze(Object.defineProperty({__proto__:null,json:SW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kW=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var IW=Object.freeze(Object.defineProperty({__proto__:null,json:kW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NW=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}];var TW=Object.freeze(Object.defineProperty({__proto__:null,json:NW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EW=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}];var RW=Object.freeze(Object.defineProperty({__proto__:null,json:EW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}];var DW=Object.freeze(Object.defineProperty({__proto__:null,json:_W},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}];var AW=Object.freeze(Object.defineProperty({__proto__:null,json:PW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}];var FW=Object.freeze(Object.defineProperty({__proto__:null,json:OW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}];var zW=Object.freeze(Object.defineProperty({__proto__:null,json:LW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var MW=Object.freeze(Object.defineProperty({__proto__:null,json:BW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}];var WW=Object.freeze(Object.defineProperty({__proto__:null,json:VW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}];var GW=Object.freeze(Object.defineProperty({__proto__:null,json:UW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HW=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}];var jW=Object.freeze(Object.defineProperty({__proto__:null,json:HW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KW=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}];var qW=Object.freeze(Object.defineProperty({__proto__:null,json:KW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XW=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}];var YW=Object.freeze(Object.defineProperty({__proto__:null,json:XW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QW=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}];var ZW=Object.freeze(Object.defineProperty({__proto__:null,json:QW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JW=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}];var eU=Object.freeze(Object.defineProperty({__proto__:null,json:JW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}];var nU=Object.freeze(Object.defineProperty({__proto__:null,json:tU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rU=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}];var sU=Object.freeze(Object.defineProperty({__proto__:null,json:rU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var aU=Object.freeze(Object.defineProperty({__proto__:null,json:oU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uC{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[$W,IW,TW,RW,DW,AW,FW,zW,MW,WW,GW,jW,qW,YW,ZW,eU,nU,sU,aU],n=[].concat(...e.map(r=>r.json));this.opMappers=n.reduce((r,s)=>(r[s.tfOpName]=s,r),{})}transformGraph(e,n={}){const r=e.node,s=[],o=[],a=[],i=r.reduce((m,y)=>(m[y.name]=this.mapNode(y),y.op.startsWith("Placeholder")?s.push(m[y.name]):y.op==="Const"?o.push(m[y.name]):(y.input==null||y.input.length===0)&&a.push(m[y.name]),m),{});let u=[];const l=[];let c={},d={};n!=null&&(c=this.mapSignatureEntries(n.inputs),d=this.mapSignatureEntries(n.outputs));const p=Object.keys(i);p.forEach(m=>{const y=i[m];y.inputNames.forEach((g,x)=>{const[w,,v]=ls(g),b=i[w];if(b.outputs!=null){const S=b.outputs.indexOf(v);if(S!==-1){const $=`${w}:${S}`;y.inputNames[x]=$}}y.inputs.push(b),b.children.push(y)})}),Object.keys(d).length===0?p.forEach(m=>{const y=i[m];y.children.length===0&&l.push(y)}):Object.keys(d).forEach(m=>{const[y]=ls(m),g=i[y];g!=null&&(g.signatureKey=d[m],l.push(g))}),Object.keys(c).length>0?Object.keys(c).forEach(m=>{const[y]=ls(m),g=i[y];g&&(g.signatureKey=c[m],u.push(g))}):u=s;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((m,y)=>(m[y.signature.name]=this.mapFunction(y),m),{}));const f={nodes:i,inputs:u,outputs:l,weights:o,placeholders:s,signature:n,functions:h};return a.length>0&&(f.initNodes=a),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce((n,r)=>(n[e[r].name]=r,n),{})}mapNode(e){const n=cE(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const r={name:e.name,op:e.op,category:n.category,inputNames:(e.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:n.outputs};return n.inputs!=null&&(r.inputParams=n.inputs.reduce((s,o)=>(s[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},s),{})),n.attrs!=null&&(r.attrParams=n.attrs.reduce((s,o)=>{const a=o.type;let i;switch(o.type){case"string":i=qx(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=qx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":i=t0(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=t0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":i=Yx(e.attr,o.tfName,o.defaultValue||0),i===void 0&&!!o.tfDeprecatedName&&(i=Yx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":i=e0(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=e0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":i=Xx(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=Xx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":i=r0(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=r0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":i=Jx(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=Jx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":i=n0(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=n0(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":i=Qx(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=Qx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":i=Zx(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=Zx(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":i=lC(e.attr,o.tfName,o.defaultValue),i===void 0&&!!o.tfDeprecatedName&&(i=lC(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return s[o.name]={value:i,type:a},s},{})),r}mapFunction(e){const n=e.nodeDef,r=[],s=[];let o={};n!=null&&(o=n.reduce((d,p)=>(d[p.name]=this.mapNode(p),p.op==="Const"&&s.push(d[p.name]),d),{}));const a=[],i=[];e.signature.inputArg.forEach(d=>{const[p]=ls(d.name),h={name:p,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Lw(d.type),type:"dtype"}},children:[]};h.signatureKey=d.name,a.push(h),o[p]=h}),Object.keys(o).forEach(d=>{const p=o[d];p.inputNames.forEach((h,f)=>{const[m,,y]=ls(h),g=o[m];if(g.outputs!=null){const x=g.outputs.indexOf(y);if(x!==-1){const w=`${m}:${x}`;p.inputNames[f]=w}}p.inputs.push(g),g.children.push(p)})});const l=e.ret;e.signature.outputArg.forEach(d=>{const[p,h]=ls(l[d.name]),f=o[p];f!=null&&(f.defaultOutput=h,i.push(f))});const c=this.mapArgsToSignature(e);return{nodes:o,inputs:a,outputs:i,weights:s,placeholders:r,signature:c}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r),n),{}),outputs:e.signature.outputArg.reduce((n,r)=>(n[r.name]=this.mapArgToTensorInfo(r,e.ret),n),{})}}mapArgToTensorInfo(e,n){let r=e.name;return n!=null&&(r=n[r]),{name:r,dtype:e.type}}}function iU(t){const e=z().global;if(typeof e.atob!="undefined")return e.atob(t);if(typeof Buffer!="undefined")return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function dE(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):iU(t);return e?n:n.toLowerCase()}function qx(t,e,n,r=!1){const s=t[e];return s!=null?dE(s.s,r):n}function Xx(t,e,n){const r=t[e];return r?r.b:n}function Yx(t,e,n){const r=t[e]||{},s=r.i!=null?r.i:r.f!=null?r.f:n;return typeof s=="number"?s:parseInt(s,10)}function Lw(t){switch(typeof t=="string"&&(t=tr[t]),t){case tr.DT_FLOAT:case tr.DT_HALF:return"float32";case tr.DT_INT32:case tr.DT_INT64:case tr.DT_INT8:case tr.DT_UINT8:return"int32";case tr.DT_BOOL:return"bool";case tr.DT_DOUBLE:return"float32";case tr.DT_STRING:return"string";default:return null}}function lC(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function Qx(t,e,n){const r=t[e];return r&&r.type?Lw(r.type):n}function Zx(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map(s=>Lw(s)):n}function pE(t){if(!t.unknownRank)return t.dim!=null?t.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function Jx(t,e,n){const r=t[e];return r&&r.shape?pE(r.shape):n}function e0(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>typeof s=="number"?s:parseInt(s,10)):n}function t0(t,e,n,r=!1){const s=t[e];return s&&s.list&&s.list.s?s.list.s.map(o=>dE(o,r)):n}function n0(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(s=>pE(s)):n}function r0(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uU{constructor(e,n,r){this.node=e,this.tensorMap=n,this.context=r,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(s=>this.getInput(s)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((s,o)=>(s[o]=this.getAttr(o),s),{}))}getInput(e){return Ot(e,this.tensorMap,this.context)}getAttr(e,n){const r=this.node.rawAttrs[e];if(r.tensor!=null)return Ot(e,this.tensorMap,this.context);if(r.i!=null||r.f!=null)return Yx(this.node.rawAttrs,e,n);if(r.s!=null)return qx(this.node.rawAttrs,e,n);if(r.b!=null)return Xx(this.node.rawAttrs,e,n);if(r.shape!=null)return Jx(this.node.rawAttrs,e,n);if(r.type!=null)return Qx(this.node.rawAttrs,e,n);if(r.list!=null){if(r.list.i!=null||r.list.f!=null)return e0(this.node.rawAttrs,e,n);if(r.list.s!=null)return t0(this.node.rawAttrs,e,n);if(r.list.shape!=null)return n0(this.node.rawAttrs,e,n);if(r.list.b!=null)return r0(this.node.rawAttrs,e,n);if(r.list.type!=null)return Zx(this.node.rawAttrs,e,n)}return n}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var zt=Object.freeze(Object.defineProperty({__proto__:null,abs:vn,acos:Xk,acosh:Yk,add:ve,addN:Qk,all:Zk,any:Jk,argMax:eI,argMin:tI,asin:nI,asinh:rI,atan:sI,atan2:oI,atanh:aI,avgPool:M1,avgPool3d:iI,basicLSTMCell:uI,batchToSpaceND:V1,batchNorm:yp,batchNorm2d:lI,batchNorm3d:cI,batchNorm4d:dI,bincount:W1,bitwiseAnd:pI,broadcastArgs:hI,broadcastTo:di,buffer:be,cast:Ke,ceil:fI,clipByValue:mI,clone:gs,complex:Ss,concat:Gt,concat1d:gI,concat2d:yI,concat3d:xI,concat4d:wI,conv1d:vI,conv2d:xp,conv2dTranspose:CI,conv3d:SI,conv3dTranspose:$I,cos:kI,cosh:II,cumprod:NI,cumsum:TI,denseBincount:EI,depthToSpace:RI,depthwiseConv2d:Tm,diag:_I,dilation2d:DI,div:je,divNoNan:PI,dot:AI,einsum:Fo,elu:H1,ensureShape:OI,equal:G1,erf:FI,euclideanNorm:BI,exp:uo,expandDims:us,expm1:MI,eye:K1,fill:ju,floor:q1,floorDiv:z1,gather:X1,greater:vp,greaterEqual:Y1,imag:bp,isFinite:VI,isInf:WI,isNaN:UI,leakyRelu:Q1,less:yf,lessEqual:Em,linspace:GI,localResponseNormalization:HI,log:Ti,log1p:Z1,logSigmoid:KI,logSoftmax:qI,logSumExp:ew,logicalAnd:cc,logicalNot:tw,logicalOr:nw,logicalXor:XI,lowerBound:YI,matMul:Be,max:Jo,maxPool:rw,maxPool3d:QI,maxPoolWithArgmax:ZI,maximum:sw,mean:dc,meshgrid:JI,min:gf,minimum:pc,mirrorPad:eN,mod:tN,moments:nN,mul:ie,multiRNNCell:rN,multinomial:sN,neg:Pr,notEqual:ow,oneHot:xf,ones:Gs,onesLike:oN,outerProduct:aN,pad:Ku,pad1d:iN,pad2d:uN,pad3d:lN,pad4d:cN,pool:dN,pow:Ni,prelu:iw,print:L1,prod:pN,raggedGather:hN,raggedRange:fN,raggedTensorToTensor:mN,rand:gN,randomGamma:IN,randomNormal:dw,randomStandardNormal:NN,randomUniform:Pm,randomUniformInt:TN,range:Ei,real:Ri,reciprocal:EN,relu:Cp,relu6:pw,reshape:Y,reverse:lo,reverse1d:RN,reverse2d:_N,reverse3d:DN,reverse4d:PN,round:hw,rsqrt:AN,scalar:Re,selu:ON,separableConv2d:FN,setdiff1dAsync:LN,sigmoid:Zo,sign:zN,sin:BN,sinh:MN,slice:Ue,slice1d:VN,slice2d:WN,slice3d:UN,slice4d:GN,softmax:HN,softplus:J1,spaceToBatchND:aw,fft:Am,ifft:hc,irfft:fw,rfft:Om,split:_i,sqrt:Zr,square:dr,squaredDifference:mw,squeeze:Fm,stack:es,step:gw,stridedSlice:jN,sub:Ne,sum:He,tan:KN,tanh:mf,tensor:Dr,tensor1d:Mn,tensor2d:hi,tensor3d:yw,tensor4d:qN,tensor5d:XN,tensor6d:YN,tensorScatterUpdate:QN,tile:pi,topk:ZN,truncatedNormal:JN,unique:eT,unsortedSegmentSum:tT,unstack:bo,upperBound:nT,variable:rT,where:ys,whereAsync:ww,zeros:ks,zerosLike:En,op:D,OP_SCOPE_SUFFIX:P1,booleanMaskAsync:sT,transpose:fc,norm:wp,movingAverage:oT,scatterND:aT,searchSorted:_m,sparseToDense:iT,gatherND:uT,dropout:lT,enclosingPowerOfTwo:vw,cosineWindow:Bm,inTopKAsync:cT,image:gT,linalg:yT,losses:xT,spectral:fT,fused:dT,signal:mT,sparse:wT,string:vT},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lU=(t,e,n,r=zt)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(C("a",t,e,n),C("b",t,e,n))];case"AddN":return[r.addN(C("tensors",t,e,n))];case"FloorMod":case"Mod":return[r.mod(C("a",t,e,n),C("b",t,e,n))];case"Mul":return[r.mul(C("a",t,e,n),C("b",t,e,n))];case"RealDiv":case"Div":return[r.div(C("a",t,e,n),C("b",t,e,n))];case"DivNoNan":return[r.divNoNan(C("a",t,e,n),C("b",t,e,n))];case"FloorDiv":return[r.floorDiv(C("a",t,e,n),C("b",t,e,n))];case"Sub":return[r.sub(C("a",t,e,n),C("b",t,e,n))];case"Minimum":return[r.minimum(C("a",t,e,n),C("b",t,e,n))];case"Maximum":return[r.maximum(C("a",t,e,n),C("b",t,e,n))];case"Pow":return[r.pow(C("a",t,e,n),C("b",t,e,n))];case"SquaredDifference":return[r.squaredDifference(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cU=(t,e,n,r=zt)=>{switch(t.op){case"Abs":case"ComplexAbs":return[r.abs(C("x",t,e,n))];case"Acos":return[r.acos(C("x",t,e,n))];case"Acosh":return[r.acosh(C("x",t,e,n))];case"Asin":return[r.asin(C("x",t,e,n))];case"Asinh":return[r.asinh(C("x",t,e,n))];case"Atan":return[r.atan(C("x",t,e,n))];case"Atan2":return[r.atan2(C("x",t,e,n),C("y",t,e,n))];case"Atanh":return[r.atanh(C("x",t,e,n))];case"Ceil":return[r.ceil(C("x",t,e,n))];case"Complex":return[r.complex(C("real",t,e,n),C("imag",t,e,n))];case"Cos":return[r.cos(C("x",t,e,n))];case"Cosh":return[r.cosh(C("x",t,e,n))];case"Elu":return[r.elu(C("x",t,e,n))];case"Erf":return[r.erf(C("x",t,e,n))];case"Exp":return[r.exp(C("x",t,e,n))];case"Expm1":return[r.expm1(C("x",t,e,n))];case"Floor":return[r.floor(C("x",t,e,n))];case"Log":return[r.log(C("x",t,e,n))];case"Log1p":return[r.log1p(C("x",t,e,n))];case"Imag":return[r.imag(C("x",t,e,n))];case"Neg":return[r.neg(C("x",t,e,n))];case"Reciprocal":return[r.reciprocal(C("x",t,e,n))];case"Real":return[r.real(C("x",t,e,n))];case"Relu":return[r.relu(C("x",t,e,n))];case"Round":return[r.round(C("x",t,e,n))];case"Selu":return[r.selu(C("x",t,e,n))];case"Sigmoid":return[r.sigmoid(C("x",t,e,n))];case"Sin":return[r.sin(C("x",t,e,n))];case"Sign":return[r.sign(C("x",t,e,n))];case"Sinh":return[r.sinh(C("x",t,e,n))];case"Softplus":return[r.softplus(C("x",t,e,n))];case"Sqrt":return[r.sqrt(C("x",t,e,n))];case"Square":return[r.square(C("x",t,e,n))];case"Tanh":return[r.tanh(C("x",t,e,n))];case"Tan":return[r.tan(C("x",t,e,n))];case"ClipByValue":return[r.clipByValue(C("x",t,e,n),C("clipValueMin",t,e,n),C("clipValueMax",t,e,n))];case"Relu6":return[r.relu6(C("x",t,e,n))];case"Rsqrt":return[r.rsqrt(Ot(t.inputNames[0],e,n))];case"LeakyRelu":return[r.leakyRelu(C("x",t,e,n),C("alpha",t,e,n))];case"Prelu":return[r.prelu(C("x",t,e,n),C("alpha",t,e,n))];case"IsNan":return[r.isNaN(Ot(t.inputNames[0],e,n))];case"IsInf":return[r.isInf(Ot(t.inputNames[0],e,n))];case"IsFinite":return[r.isFinite(Ot(t.inputNames[0],e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(t,e,n=""){if(!(typeof t=="number"||typeof e=="number")){k(t.length===e.length,()=>n+` Shapes ${t} and ${e} must match`);for(let r=0;r<t.length;r++){const s=t[r],o=e[r];k(s<0||o<0||s===o,()=>n+` Shapes ${t} and ${e} must match`)}}}function cC(t){return!(typeof t=="number"||t.some(e=>e<0))}function fl(t,e,n){let r=s0(t,n);const s=!cC(r);if(s&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&e.forEach(o=>{r=s0(o.shape,r)}),!cC(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function s0(t,e){if(typeof t=="number")return e;if(typeof e=="number")return t;if(t.length!==e.length)throw new Error(`Incompatible ranks during merge: ${t} vs. ${e}`);const n=[];for(let r=0;r<t.length;++r){const s=t[r],o=e[r];if(s>=0&&o>=0&&s!==o)throw new Error(`Incompatible shape during merge: ${t} vs. ${e}`);n[r]=s>=0?s:o}return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dU{constructor(e,n,r,s,o,a,i){this.name=e,this.dtype=n,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=o,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Re(0),Nr(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.tensor.id))&&n.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const n=this.tensors[e];if(n.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(n.cleared=!0),n.read=!0,n.tensor}readMany(e){return e.map(n=>this.read(n))}write(e,n){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[e]||{};if(n.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${n.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=n.shape),nr(this.elementShape,n.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);r.tensor=n,Nr(n),r.written=!0,this.tensors[e]=r}writeMany(e,n){if(e.length!==n.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${n.length}.`);e.forEach((r,s)=>this.write(r,n[s]))}gather(e,n){if(!!n&&n!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${n}`);if(e)e=e.slice(0,this.size());else{e=[];for(let s=0;s<this.size();s++)e.push(s)}if(e.length===0)return Dr([],[0].concat(this.elementShape));const r=this.readMany(e);return nr(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),es(r,0)}concat(e){if(!!e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return Dr([],[0].concat(this.elementShape));const n=[];for(let s=0;s<this.size();s++)n.push(s);const r=this.readMany(n);return nr(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),Gt(r,0)}scatter(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(e,bo(n,0))}split(e,n){if(n.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${n.dtype}`);let r=0;const s=e.map(u=>(r+=u,r));if(r!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${n.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=r===0?0:n.size/r,a=[];Le(()=>{n=Y(n,[1,r,o]);for(let u=0;u<e.length;++u){const l=u===0?0:s[u-1],c=[0,l,0],d=[1,e[u],o];a[u]=Y(Ue(n,c,d),this.elementShape)}return a});const i=[];for(let u=0;u<e.length;u++)i[u]=u;this.writeMany(i,a)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pa{get id(){return this.idTensor.id}constructor(e,n,r,s=-1){this.tensors=e,this.elementShape=n,this.elementDtype=r,e!=null&&e.forEach(o=>{if(r!==o.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${o.dtype}`);nr(n,o.shape,"TensorList shape mismatch: "),Nr(o)}),this.idTensor=Re(0),this.maxNumElements=s,Nr(this.idTensor)}copy(){return new pa([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(n=>{(e==null||!e.has(n.id))&&n.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,n,r=-1){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(r!==-1&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);nr(e,this.elementShape,"TensorList shape mismatch: ");const s=fl(this.elementShape,this.tensors,e);return Le(()=>{const o=this.tensors.map(a=>Y(a,s));return es(o,0)})}popBack(e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const r=fl(this.elementShape,this.tensors,e),s=this.tensors.pop();return s.kept=!1,nr(s.shape,e,"TensorList shape mismatch: "),Y(s,r)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(nr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Nr(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const n=new pa([],this.elementShape,this.elementDtype,this.maxNumElements);n.tensors.length=e;for(let r=0;r<Math.min(this.tensors.length,e);++r)n.tensors[r]=this.tensors[r];return n}getItem(e,n,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);nr(this.tensors[e].shape,n,"TensorList shape mismatch: ");const s=fl(this.elementShape,this.tensors,n);return Y(this.tensors[e],s)}setItem(e,n){if(n.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);nr(this.elementShape,n.shape,"TensorList shape mismatch: "),Nr(n),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=n}gather(e,n,r){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);nr(this.elementShape,r,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=fl(this.elementShape,this.tensors,r);return e.length===0?Dr([],[0].concat(s)):Le(()=>{const o=e.map(a=>Y(this.tensors[a],s));return es(o,0)})}concat(e,n){if(!!e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);nr(this.elementShape,n,"TensorList shape mismatch: ");const r=fl(this.elementShape,this.tensors,n);return this.size()===0?Dr([],[0].concat(r)):Le(()=>{const s=this.tensors.map(o=>Y(o,r));return Gt(s,0)})}}function pU(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);const s=t.shape.slice(1);nr(s,e,"TensorList shape mismatch: ");const o=bo(t);return new pa(o,e,r)}function hU(t,e,n,r){return new pa([],t,e,r)}function fU(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(r!=null&&r!==-1&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const o=new pa([],n,t.dtype,r),a=bo(t,0);return e.forEach((i,u)=>{o.setItem(i,a[u])}),o}function mU(t,e,n){let r=0;const s=e.map(c=>(r+=c,r));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${t.shape}`);const o=t.shape.slice(1),a=s0(o,n),i=r===0?0:t.size/r,u=Le(()=>{const c=[];t=Y(t,[1,r,i]);for(let d=0;d<e.length;++d){const p=d===0?0:s[d-1],h=[0,p,0],f=[1,e[d],i];c[d]=Y(Ue(t,h,f),a)}return t.dispose(),c}),l=new pa([],n,t.dtype,e.length);for(let c=0;c<u.length;c++)l.setItem(c,u[c]);return l}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gU=async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=C("thenBranch",t,e,n),s=C("elseBranch",t,e,n),o=C("cond",t,e,n),a=C("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=C("body",t,e,n),s=C("cond",t,e,n),o=C("args",t,e,n),a=await n.functionMap[s].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),i=o.map(c=>c.id);let u=await a[0].data();a.forEach(c=>{!c.kept&&i.indexOf(c.id)===-1&&c.dispose()});let l=o;for(;u[0];){const c=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const d=l.map(h=>h.id);c.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()});const p=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await p[0].data(),p.forEach(h=>{!h.kept&&i.indexOf(h.id)===-1&&d.indexOf(h.id)===-1&&h.dispose()})}return l}case"LoopCond":{const r=C("pred",t,e,n);return[cs(r)]}case"Switch":{const r=C("pred",t,e,n);let s=C("data",t,e,n);return s.kept||(s=cs(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=t.inputNames.find(s=>Ot(s,e,n)!==void 0);if(r){const s=Ot(r,e,n);return[cs(s)]}return}case"Enter":{const r=C("frameName",t,e,n),s=C("tensor",t,e,n);return n.enterFrame(r),[cs(s)]}case"Exit":{const r=C("tensor",t,e,n);return n.exitFrame(),[cs(r)]}case"NextIteration":{const r=C("tensor",t,e,n);return n.nextIteration(),[cs(r)]}case"TensorArrayV3":{const r=C("size",t,e,n),s=C("dtype",t,e,n),o=C("elementShape",t,e,n),a=C("dynamicSize",t,e,n),i=C("clearAfterRead",t,e,n),u=C("identicalElementShapes",t,e,n),l=C("name",t,e,n),c=new dU(l,s,r,o,u,a,i);return n.addTensorArray(c),[c.idTensor,Re(1)]}case"TensorArrayWriteV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n),o=C("tensor",t,e,n),a=n.getTensorArray(r.id);return a.write(s,o),[a.idTensor]}case"TensorArrayReadV3":{const r=C("tensorArrayId",t,e,n),s=C("index",t,e,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),o=C("dtype",t,e,n);return[n.getTensorArray(r.id).gather(s,o)]}case"TensorArrayScatterV3":{const r=C("tensorArrayId",t,e,n),s=C("indices",t,e,n),o=C("tensor",t,e,n),a=n.getTensorArray(r.id);return a.scatter(s,o),[a.idTensor]}case"TensorArrayConcatV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id),o=C("dtype",t,e,n);return[s.concat(o)]}case"TensorArraySplitV3":{const r=C("tensorArrayId",t,e,n),s=C("tensor",t,e,n),o=C("lengths",t,e,n),a=n.getTensorArray(r.id);return a.split(o,s),[a.idTensor]}case"TensorArraySizeV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return[Re(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=C("tensorArrayId",t,e,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),o=C("tensor",t,e,n),a=n.getTensorList(r.id);return a.setItem(s,o),[a.idTensor]}case"TensorListGetItem":{const r=C("tensorListId",t,e,n),s=C("index",t,e,n),o=C("elementShape",t,e,n),a=C("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(s,o,a)]}case"TensorListScatterV2":case"TensorListScatter":{const r=C("indices",t,e,n),s=C("tensor",t,e,n),o=C("elementShape",t,e,n),a=C("numElements",t,e,n),i=fU(s,r,o,a);return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=C("elementShape",t,e,n),s=C("elementDType",t,e,n);let o;t.op==="TensorListReserve"?o="numElements":o="maxNumElements";const a=C(o,t,e,n),i=t.op==="TensorListReserve"?-1:a,u=hU(r,s,a,i);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{const r=C("tensorListId",t,e,n),s=C("indices",t,e,n),o=C("elementShape",t,e,n),a=C("elementDType",t,e,n);return[n.getTensorList(r.id).gather(s,a,o)]}case"TensorListStack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n),a=C("numElements",t,e,n);return[n.getTensorList(r.id).stack(s,o,a)]}case"TensorListFromTensor":{const r=C("tensor",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n),a=pU(r,s,o);return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=C("tensorListId",t,e,n),s=n.getTensorList(r.id),o=C("dtype",t,e,n),a=C("elementShape",t,e,n);return[s.concat(o,a)]}case"TensorListPushBack":{const r=C("tensorListId",t,e,n),s=C("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(s),[o.idTensor]}case"TensorListPopBack":{const r=C("tensorListId",t,e,n),s=C("elementShape",t,e,n),o=C("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(s,o)]}case"TensorListSplit":{const r=C("tensor",t,e,n),s=C("elementShape",t,e,n),o=C("lengths",t,e,n),a=mU(r,o,s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=C("tensorListId",t,e,n),s=n.getTensorList(r.id);return[Re(s.size(),"int32")]}case"TensorListResize":{const r=C("tensorListId",t,e,n),s=C("size",t,e,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dC(t,e,n){const[r,s]=C("fusedOps",t,e,n),o=r==="biasadd",a=!o,i=s==="prelu",u=r==="fusedbatchnorm",l=C("numArgs",t,e,n);if(o){if(i&&l!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&o&&l!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=C("strides",t,e,n),d=kh(t,e,n),p=C("dataFormat",t,e,n).toUpperCase(),h=C("dilations",t,e,n);let[f,m]=C("args",t,e,n);a&&(m=f,f=void 0);const y=C("leakyreluAlpha",t,e,n);return{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:y}}const yU=(t,e,n,r=zt)=>{switch(t.op){case"Conv1D":{const s=C("stride",t,e,n),o=C("pad",t,e,n),a=C("dataFormat",t,e,n).toUpperCase(),i=C("dilation",t,e,n);return[r.conv1d(C("x",t,e,n),C("filter",t,e,n),s,o,a,i)]}case"Conv2D":{const s=C("strides",t,e,n),o=kh(t,e,n),a=C("dataFormat",t,e,n).toUpperCase(),i=C("dilations",t,e,n);return[r.conv2d(C("x",t,e,n),C("filter",t,e,n),[s[1],s[2]],o,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=dC(t,e,n);return[r.fused.conv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:o,dataFormat:a,dilations:i,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:d}=dC(t,e,n);return[r.fused.depthwiseConv2d({x:C("x",t,e,n),filter:C("filter",t,e,n),strides:[s[1],s[2]],pad:o,dataFormat:a,dilations:[i[1],i[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=C("outputShape",t,e,n),o=C("strides",t,e,n),a=kh(t,e,n);return[r.conv2dTranspose(C("x",t,e,n),C("filter",t,e,n),s,[o[1],o[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=C("strides",t,e,n),o=kh(t,e,n),a=C("dilations",t,e,n),i=C("dataFormat",t,e,n).toUpperCase();return[r.depthwiseConv2d(C("input",t,e,n),C("filter",t,e,n),[s[1],s[2]],o,i,[a[1],a[2]])]}case"Conv3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("dataFormat",t,e,n).toUpperCase(),i=C("dilations",t,e,n);return[r.conv3d(C("x",t,e,n),C("filter",t,e,n),[s[1],s[2],s[3]],o,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("kernelSize",t,e,n);return[r.avgPool(C("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPool":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("kernelSize",t,e,n);return[r.maxPool(C("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o)]}case"MaxPoolWithArgmax":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("kernelSize",t,e,n),i=C("includeBatchInIndex",t,e,n),{result:u,indexes:l}=r.maxPoolWithArgmax(C("x",t,e,n),[a[1],a[2]],[s[1],s[2]],o,i);return[u,l]}case"AvgPool3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("kernelSize",t,e,n);return[r.avgPool3d(C("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"MaxPool3D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("kernelSize",t,e,n);return[r.maxPool3d(C("x",t,e,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],o)]}case"Dilation2D":{const s=C("strides",t,e,n),o=C("pad",t,e,n),a=C("dilations",t,e,n),i=s[1],u=s[2],l=a[1],c=a[2];return[r.dilation2d(C("x",t,e,n),C("filter",t,e,n),[i,u],o,[l,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xU=(t,e,n,r=zt)=>{switch(t.op){case"Fill":{const s=C("shape",t,e,n),o=C("dtype",t,e,n),a=C("value",t,e,n);return[r.fill(s,a,o)]}case"LinSpace":{const s=C("start",t,e,n),o=C("stop",t,e,n),a=C("num",t,e,n);return[r.linspace(s,o,a)]}case"Multinomial":{const s=C("logits",t,e,n),o=C("numSamples",t,e,n),a=C("seed",t,e,n);return[r.multinomial(s,o,a)]}case"OneHot":{const s=C("indices",t,e,n),o=C("depth",t,e,n),a=C("onValue",t,e,n),i=C("offValue",t,e,n),u=C("dtype",t,e,n);return[r.oneHot(s,o,a,i,u)]}case"Ones":return[r.ones(C("shape",t,e,n),C("dtype",t,e,n))];case"OnesLike":return[r.onesLike(C("x",t,e,n))];case"RandomStandardNormal":return[r.randomStandardNormal(C("shape",t,e,n),C("dtype",t,e,n),C("seed",t,e,n))];case"RandomUniform":return[r.randomUniform(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("dtype",t,e,n))];case"RandomUniformInt":return[r.randomUniformInt(C("shape",t,e,n),C("minval",t,e,n),C("maxval",t,e,n),C("seed",t,e,n))];case"Range":{const s=C("start",t,e,n),o=C("stop",t,e,n),a=C("step",t,e,n);return[r.range(s,o,a,C("dtype",t,e,n))]}case"TruncatedNormal":{const s=C("shape",t,e,n),o=C("mean",t,e,n),a=C("stdDev",t,e,n),i=C("seed",t,e,n);return[r.truncatedNormal(s,o,a,C("dtype",t,e,n),i)]}case"Zeros":return[r.zeros(C("shape",t,e,n),C("dtype",t,e,n))];case"ZerosLike":return[r.zerosLike(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xy(t,e,n){const r=C("boxes",t,e,n),s=C("scores",t,e,n),o=C("maxOutputSize",t,e,n),a=C("iouThreshold",t,e,n),i=C("scoreThreshold",t,e,n),u=C("softNmsSigma",t,e,n);return{boxes:r,scores:s,maxOutputSize:o,iouThreshold:a,scoreThreshold:i,softNmsSigma:u}}const wU=async(t,e,n,r,s=zt)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=xy(t,e,n),d=await s.image.nonMaxSuppressionWithScoreAsync(o,a,i,u,l,c);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=xy(t,e,n),c=C("padToMaxOutputSize",t,e,n),d=await s.image.nonMaxSuppressionPaddedAsync(o,a,i,u,l,c);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:o,scores:a,maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=xy(t,e,n);return[await s.image.nonMaxSuppressionAsync(o,a,i,u,l)]}case"Where":{const o=s.cast(C("condition",t,e,n),"bool"),a=[await s.whereAsync(o)];return o.dispose(),a}case"ListDiff":return s.setdiff1dAsync(C("x",t,e,n),C("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vU=(t,e,n,r=zt)=>{switch(t.op){case"LowerBound":{const s=C("sortedSequence",t,e,n),o=C("values",t,e,n);return[r.lowerBound(s,o)]}case"TopKV2":{const s=C("x",t,e,n),o=C("k",t,e,n),a=C("sorted",t,e,n),i=r.topk(s,o,a);return[i.values,i.indices]}case"UpperBound":{const s=C("sortedSequence",t,e,n),o=C("values",t,e,n);return[r.upperBound(s,o)]}case"Unique":{const s=C("x",t,e,n),o=r.unique(s);return[o.values,o.indices]}case"UniqueV2":{const s=C("x",t,e,n),o=C("axis",t,e,n),a=r.unique(s,o);return[a.values,a.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bU=(t,e,n,r=zt)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const s=C("default",t,e,n);return[Ot(t.name,e,n)||s];case"Placeholder":return[Ot(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const c=C("x",t,e,n);return[cs(c)]}case"IdentityN":return C("x",t,e,n).map(c=>cs(c));case"Snapshot":const o=C("x",t,e,n);return[cs(o)];case"Shape":return[r.tensor1d(C("x",t,e,n).shape,"int32")];case"ShapeN":return C("x",t,e,n).map(c=>r.tensor1d(c.shape));case"Size":return[r.scalar(C("x",t,e,n).size,"int32")];case"Rank":return[r.scalar(C("x",t,e,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=C("x",t,e,n),i=C("data",t,e,n),u=C("message",t,e,n),l=C("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let c=0;c<i.length;c++)console.log(Array.prototype.slice.call(i[c].dataSync()).slice(0,l));return[a];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CU{get id(){return this.handle.id}constructor(e,n){this.keyDType=e,this.valueDType=n,this.handle=Re(0),this.tensorMap=new Map,Nr(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Re(this.size(),"int32")}async import(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),Le(()=>{const s=bo(n),o=r.length,a=s.length;k(o===a,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${a} elements.`);for(let i=0;i<o;i++){const u=r[i],l=s[i];Nr(l),this.tensorMap.set(u,l)}return this.handle})}async find(e,n){this.checkKeyAndValueTensor(e,n);const r=await e.data();return Le(()=>{const s=[];for(let o=0;o<r.length;o++){const a=r[o],i=this.findWithDefault(a,n);s.push(i)}return es(s)})}findWithDefault(e,n){const r=this.tensorMap.get(e);return r!=null?r:n}checkKeyAndValueTensor(e,n){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(n.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${n.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SU=async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(t.name);if(s!=null)return[s];{const o=C("keyDType",t,e,n),a=C("valueDType",t,e,n),i=new CU(o,a);return r.addHashTable(t.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),a=C("values",t,e,n);return[await r.getHashTableById(s.id).import(o,a)]}case"LookupTableFind":case"LookupTableFindV2":{const s=C("tableHandle",t,e,n,r),o=C("keys",t,e,n),a=C("defaultValue",t,e,n);return[await r.getHashTableById(s.id).find(o,a)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=C("tableHandle",t,e,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $U=(t,e,n,r=zt)=>{switch(t.op){case"ResizeBilinear":{const s=C("images",t,e,n),o=C("size",t,e,n),a=C("alignCorners",t,e,n),i=C("halfPixelCenters",t,e,n);return[r.image.resizeBilinear(s,[o[0],o[1]],a,i)]}case"ResizeNearestNeighbor":{const s=C("images",t,e,n),o=C("size",t,e,n),a=C("alignCorners",t,e,n),i=C("halfPixelCenters",t,e,n);return[r.image.resizeNearestNeighbor(s,[o[0],o[1]],a,i)]}case"CropAndResize":{const s=C("image",t,e,n),o=C("boxes",t,e,n),a=C("boxInd",t,e,n),i=C("cropSize",t,e,n),u=C("method",t,e,n),l=C("extrapolationValue",t,e,n);return[r.image.cropAndResize(s,o,a,i,u,l)]}case"ImageProjectiveTransformV3":{const s=C("images",t,e,n),o=C("transforms",t,e,n),a=C("outputShape",t,e,n),i=C("fillValue",t,e,n),u=C("interpolation",t,e,n),l=C("fillMode",t,e,n);return[r.image.transform(s,o,u.toLowerCase(),l.toLowerCase(),i,a)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kU=(t,e,n,r=zt)=>{switch(t.op){case"Equal":return[r.equal(C("a",t,e,n),C("b",t,e,n))];case"NotEqual":return[r.notEqual(C("a",t,e,n),C("b",t,e,n))];case"Greater":return[r.greater(C("a",t,e,n),C("b",t,e,n))];case"GreaterEqual":return[r.greaterEqual(C("a",t,e,n),C("b",t,e,n))];case"Less":return[r.less(C("a",t,e,n),C("b",t,e,n))];case"LessEqual":return[r.lessEqual(C("a",t,e,n),C("b",t,e,n))];case"LogicalAnd":return[r.logicalAnd(C("a",t,e,n),C("b",t,e,n))];case"LogicalNot":return[r.logicalNot(C("a",t,e,n))];case"LogicalOr":return[r.logicalOr(C("a",t,e,n),C("b",t,e,n))];case"Select":case"SelectV2":return[r.where(C("condition",t,e,n),C("a",t,e,n),C("b",t,e,n))];case"BitwiseAnd":return[r.bitwiseAnd(C("a",t,e,n),C("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IU=(t,e,n,r=zt)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(C("a",t,e,n),C("b",t,e,n),C("transposeA",t,e,n),C("transposeB",t,e,n))];case"Einsum":return[r.einsum(C("equation",t,e,n),...C("tensors",t,e,n))];case"Transpose":return[r.transpose(C("x",t,e,n),C("perm",t,e,n))];case"_FusedMatMul":const[s,o]=C("fusedOps",t,e,n),a=s==="biasadd",i=o==="prelu",u=C("numArgs",t,e,n),l=C("leakyreluAlpha",t,e,n);if(a){if(i&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,d]=C("args",t,e,n);return[r.fused.matMul({a:C("a",t,e,n),b:C("b",t,e,n),transposeA:C("transposeA",t,e,n),transposeB:C("transposeB",t,e,n),bias:c,activation:o,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(C("a",t,e,n),C("numLower",t,e,n),C("numUpper",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NU=(t,e,n,r=zt)=>{switch(t.op){case"EuclideanNorm":return[r.euclideanNorm(C("x",t,e,n),C("axis",t,e,n),C("keepDims",t,e,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"FusedBatchNormV3":return[r.batchNorm(C("x",t,e,n),C("mean",t,e,n),C("variance",t,e,n),C("offset",t,e,n),C("scale",t,e,n),C("epsilon",t,e,n))];case"LRN":return[r.localResponseNormalization(C("x",t,e,n),C("radius",t,e,n),C("bias",t,e,n),C("alpha",t,e,n),C("beta",t,e,n))];case"Softmax":return[r.softmax(C("x",t,e,n))];case"LogSoftmax":return[r.logSoftmax(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TU=(t,e,n,r=zt)=>{switch(t.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:o}=r.raggedGather(C("paramsNestedSplits",t,e,n),C("paramsDenseValues",t,e,n),C("indices",t,e,n),C("outputRaggedRank",t,e,n));return s.concat(o)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:o}=r.raggedRange(C("starts",t,e,n),C("limits",t,e,n),C("splits",t,e,n));return[s,o]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(C("shape",t,e,n),C("values",t,e,n),C("defaultValue",t,e,n),C("rowPartitionTensors",t,e,n),C("rowPartitionTypes",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EU=(t,e,n,r=zt)=>{switch(t.op){case"Max":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.max(C("x",t,e,n),i,u)]}case"Mean":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.mean(C("x",t,e,n),i,u)]}case"Min":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.min(C("x",t,e,n),i,u)]}case"Sum":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.sum(C("x",t,e,n),i,u)]}case"All":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.all(C("x",t,e,n),i,u)]}case"Any":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.any(C("x",t,e,n),i,u)]}case"ArgMax":{const i=C("axis",t,e,n);return[r.argMax(C("x",t,e,n),i)]}case"ArgMin":{const i=C("axis",t,e,n);return[r.argMin(C("x",t,e,n),i)]}case"Prod":{const i=C("axis",t,e,n),u=C("keepDims",t,e,n);return[r.prod(C("x",t,e,n),i,u)]}case"Cumprod":{const i=C("axis",t,e,n),u=C("exclusive",t,e,n),l=C("reverse",t,e,n);return[r.cumprod(C("x",t,e,n),i,u,l)]}case"Cumsum":{const i=C("axis",t,e,n),u=C("exclusive",t,e,n),l=C("reverse",t,e,n);return[r.cumsum(C("x",t,e,n),i,u,l)]}case"Bincount":const s=C("x",t,e,n),o=C("weights",t,e,n),a=C("size",t,e,n);return[r.bincount(s,o,a)];case"DenseBincount":{const i=C("x",t,e,n),u=C("weights",t,e,n),l=C("size",t,e,n),c=C("binaryOutput",t,e,n);return[r.denseBincount(i,u,l,c)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RU=(t,e,n,r=zt)=>{switch(t.op){case"ConcatV2":case"Concat":{const s=C("n",t,e,n),o=C("axis",t,e,n);let a=C("tensors",t,e,n);return a=a.slice(0,s),[r.concat(a,o)]}case"Gather":{const s=C("x",t,e,n),o=C("indices",t,e,n);return[r.gather(s,r.cast(o,"int32"),0)]}case"GatherV2":{const s=C("axis",t,e,n),o=C("batchDims",t,e,n),a=C("x",t,e,n),i=C("indices",t,e,n);return[r.gather(a,r.cast(i,"int32"),s,o)]}case"Reverse":{const s=C("dims",t,e,n),o=[];for(let i=0;i<s.length;i++)s[i]&&o.push(i);const a=C("x",t,e,n);return[r.reverse(a,o)]}case"ReverseV2":{const s=C("axis",t,e,n),o=C("x",t,e,n);return[r.reverse(o,s)]}case"Slice":{const s=C("begin",t,e,n),o=C("size",t,e,n);return[r.slice(C("x",t,e,n),s,o)]}case"StridedSlice":{const s=C("begin",t,e,n),o=C("end",t,e,n),a=C("strides",t,e,n),i=C("beginMask",t,e,n),u=C("endMask",t,e,n),l=C("ellipsisMask",t,e,n),c=C("newAxisMask",t,e,n),d=C("shrinkAxisMask",t,e,n),p=C("x",t,e,n);return[r.stridedSlice(p,s,o,a,i,u,l,c,d)]}case"Pack":return Le(()=>{const s=C("axis",t,e,n),o=C("tensors",t,e,n),a=o[0].shape,i=r.squeeze(o[0]).shape,u=o.map(l=>{const c=Pe(l.shape,a);if(!c&&!Pe(r.squeeze(l).shape,i))throw new Error("the input tensors shape does not match");return c?l:r.reshape(l,a)});return[r.stack(u,s)]});case"Unpack":{const s=C("axis",t,e,n),o=C("tensor",t,e,n);return r.unstack(o,s)}case"Tile":{const s=C("reps",t,e,n);return[r.tile(C("x",t,e,n),s)]}case"Split":case"SplitV":{const s=C("axis",t,e,n),o=C("numOrSizeSplits",t,e,n),a=C("x",t,e,n);return r.split(a,o,s)}case"ScatterNd":{const s=C("indices",t,e,n),o=C("values",t,e,n),a=C("shape",t,e,n);return[r.scatterND(s,o,a)]}case"GatherNd":{const s=C("x",t,e,n),o=C("indices",t,e,n);return[r.gatherND(s,o)]}case"SparseToDense":{const s=C("sparseIndices",t,e,n),o=C("outputShape",t,e,n),a=C("sparseValues",t,e,n),i=C("defaultValue",t,e,n);return[r.sparseToDense(s,a,o,a.dtype===i.dtype?i:r.cast(i,a.dtype))]}case"TensorScatterUpdate":{const s=C("indices",t,e,n),o=C("values",t,e,n),a=C("tensor",t,e,n);return[r.tensorScatterUpdate(a,s,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _U=(t,e,n,r=zt)=>{switch(t.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:o,emptyRowIndicator:a,reverseIndexMap:i}=r.sparse.sparseFillEmptyRows(C("indices",t,e,n),C("values",t,e,n),C("denseShape",t,e,n),C("defaultValue",t,e,n));return[s,o,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:o}=r.sparse.sparseReshape(C("inputIndices",t,e,n),C("inputShape",t,e,n),C("newShape",t,e,n));return[s,o]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(C("data",t,e,n),C("indices",t,e,n),C("segmentIds",t,e,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(C("data",t,e,n),C("indices",t,e,n),C("segmentIds",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DU=(t,e,n,r=zt)=>{switch(t.op){case"FFT":return[r.fft(C("x",t,e,n))];case"IFFT":return[r.ifft(C("x",t,e,n))];case"RFFT":return[r.rfft(C("x",t,e,n))];case"IRFFT":return[r.irfft(C("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PU=(t,e,n,r=zt)=>{switch(t.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(C("input",t,e,n),C("pattern",t,e,n),C("rewrite",t,e,n),C("replaceGlobal",t,e,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:o}=r.string.stringNGrams(C("data",t,e,n),C("dataSplits",t,e,n),C("separator",t,e,n),C("nGramWidths",t,e,n),C("leftPad",t,e,n),C("rightPad",t,e,n),C("padWidth",t,e,n),C("preserveShortSequences",t,e,n));return[s,o]}case"StringSplit":{const{indices:s,values:o,shape:a}=r.string.stringSplit(C("input",t,e,n),C("delimiter",t,e,n),C("skipEmpty",t,e,n));return[s,o,a]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(C("input",t,e,n),C("numBuckets",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AU=(t,e,n,r=zt)=>{switch(t.op){case"Cast":return[r.cast(C("x",t,e,n),C("dtype",t,e,n))];case"ExpandDims":{const s=C("axis",t,e,n);return[r.expandDims(C("x",t,e,n),s)]}case"Squeeze":{const s=C("axis",t,e,n);return[r.squeeze(C("x",t,e,n),s)]}case"Reshape":return[r.reshape(C("x",t,e,n),C("shape",t,e,n))];case"EnsureShape":return[r.ensureShape(C("x",t,e,n),C("shape",t,e,n))];case"MirrorPad":return[r.mirrorPad(C("x",t,e,n),C("padding",t,e,n),C("mode",t,e,n))];case"PadV2":case"Pad":return[r.pad(C("x",t,e,n),C("padding",t,e,n),C("constantValue",t,e,n))];case"SpaceToBatchND":{const s=C("blockShape",t,e,n),o=C("paddings",t,e,n);return[r.spaceToBatchND(C("x",t,e,n),s,o)]}case"BatchToSpaceND":{const s=C("blockShape",t,e,n),o=C("crops",t,e,n);return[r.batchToSpaceND(C("x",t,e,n),s,o)]}case"DepthToSpace":{const s=C("blockSize",t,e,n),o=C("dataFormat",t,e,n).toUpperCase();return[r.depthToSpace(C("x",t,e,n),s,o)]}case"BroadcastTo":return[r.broadcastTo(C("x",t,e,n),C("shape",t,e,n))];case"BroadcastArgs":return[r.broadcastArgs(C("s0",t,e,n),C("s1",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pC(t,e,n,r,s=Le){const o=((a,i,u)=>{switch(a.category){case"arithmetic":return s(()=>lU(a,i,u));case"basic_math":return s(()=>cU(a,i,u));case"control":return gU(a,i,u);case"convolution":return s(()=>yU(a,i,u));case"creation":return s(()=>xU(a,i,u));case"dynamic":return wU(a,i,u);case"evaluation":return s(()=>vU(a,i,u));case"image":return s(()=>$U(a,i,u));case"graph":return s(()=>bU(a,i,u));case"logical":return s(()=>kU(a,i,u));case"matrices":return s(()=>IU(a,i,u));case"normalization":return s(()=>NU(a,i,u));case"ragged":return s(()=>TU(a,i,u));case"reduction":return s(()=>EU(a,i,u));case"slice_join":return s(()=>RU(a,i,u));case"sparse":return s(()=>_U(a,i,u));case"spectral":return s(()=>DU(a,i,u));case"string":return s(()=>PU(a,i,u));case"transformation":return s(()=>AU(a,i,u));case"hash_table":return SU(a,i,u,r);case"custom":const l=cE(a.op);if(l&&l.customExecutor)return l.customExecutor(new uU(a,i,u));throw TypeError(`Custom op ${a.op} is not registered.`);default:throw TypeError(`Unknown op '${a.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return ao(o)?o.then(a=>[].concat(a)):[].concat(o)}class hC{constructor(e={},n={},r={},s={},o){this.weightMap=e,this.tensorArrayMap=n,this.tensorListMap=r,this.functionMap=s,this.parseNodeNameCache=o,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,n){return{id:e,frameName:n,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let n=0;n<this.contexts.length-1;n++){const r=this.contexts.slice(0,this.contexts.length-n);e.push(this.contextIdforContexts(r))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(n=>n.id===0&&n.iterationId===0?"":`${n.frameName}-${n.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const n in this.tensorArrayMap)this.tensorArrayMap[n].clearAndClose(e);for(const n in this.tensorListMap)this.tensorListMap[n].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fC(t,e,n,r){const s=new Set,o=[];let a=null,i=null;const u=new Set,l=new Set(Object.keys(t).map(p=>xn(p)[0]));r=r||[];const c=new Set(r.map(p=>xn(p.name)[0])),d=[...e];for(;d.length>0;){const p=d.pop();if((Lo(p)||WU(p)||UU(p))&&a==null&&(a=p,i=a.children.map(h=>h.name).filter(h=>s.has(h))),s.add(p.name),n[p.name]==null&&!l.has(p.name)&&!c.has(p.name)){if(p.inputs.length===0){o.push(p.name);continue}p.inputs.forEach(h=>{u.has(h.name)||(u.add(h.name),d.push(h))})}}return{inputs:t,outputs:e,usedNodes:s,missingInputs:o,dynamicNode:a,syncInputs:i}}function OU(t,e){const{usedNodes:n,inputs:r}=e,s=Object.keys(r).map(y=>xn(y)[0]).map(y=>t.nodes[y]),o=t.initNodes||[],a=y=>n.has(typeof y=="string"?y:y.name);function i(y){return[...new Map(y.map(g=>[g.name,g])).values()]}const u=i([...s,...t.weights,...o]).filter(a),l=i([...u,...Object.values(t.nodes)]).filter(a),c=new Map(l.map(y=>[y.name,y])),d={};for(const y of l){d[y.name]=d[y.name]||0;for(const g of y.children)a(g)||(d[g.name]=Number.POSITIVE_INFINITY),d[g.name]=(d[g.name]||0)+1}const p=Object.entries(d).filter(([,y])=>y===0).map(([y])=>y),h=[...p];for(;p.length>0;){const y=p.pop(),g=c.get(y);for(const x of g.children.filter(a))--d[x.name]===0&&(h.push(x.name),p.push(x.name))}const f=h.map(y=>c.get(y)),m=FU(f,u);return LU(m,u),m}function FU(t,e){const n=new Map(t.map(a=>[a.name,a])),r=e.map(a=>a.name),s=new Set(r);for(;r.length>0;){const a=r.pop(),i=n.get(a);for(const u of i.children)!n.has(u.name)||s.has(u.name)||(s.add(u.name),r.push(u.name))}return t.filter(a=>s.has(a.name))}class Jp extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function LU(t,e){const n=new Map(t.map((i,u)=>[i.name,u])),r=new Set(e.map(i=>i.name)),s=i=>r.has(typeof i=="string"?i:i.name),o=new Set(t.map(i=>i.name)),a=i=>o.has(typeof i=="string"?i:i.name);for(const i of t){for(const u of i.children.filter(a)){if(!n.has(u.name))throw new Jp(`Child ${u.name} of node ${i.name} is unreachable.`);if(n.get(i.name)>n.get(u.name))throw new Jp(`Node ${i.name} is scheduled to run after its child ${u.name}.`)}if(!s(i))for(const u of i.inputs){if(!n.has(u.name))throw new Jp(`Input ${u.name} of node ${i.name} is unreachable.`);if(n.get(u.name)>n.get(i.name))throw new Jp(`Node ${i.name} is scheduled to run before its input ${u.name}.`)}}}function zU(t){const e=new Map(t.map((i,u)=>[i.name,u])),n=Number.MAX_SAFE_INTEGER,r=t.map((i,u)=>Lo(i)?n:u),s=i=>{const u=r[e.get(i.name)];return u==null?-1:u},o=t.map((i,u)=>i.children.map(s).reduce((l,c)=>Math.max(l,c),r[u])),a=new Map;for(let i=0;i<t.length;++i){const u=o[i];if(u===n)continue;const l=t[i],c=t[u];a.has(c.name)||a.set(c.name,[]),a.get(c.name).push(l)}return a}const BU=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),MU=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),VU=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Lo(t){return BU.has(t.op)}function WU(t){return MU.has(t.op)}function UU(t){return VU.has(t.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bf{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const n=Object.keys(e).map(r=>e[r].map(s=>s.id));this._weightIds=[].concat(...n),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const n=e.signatureKey||e.name;return e.defaultOutput?`${n}:${e.defaultOutput}`:n})}get functions(){return Object.keys(this._functions).reduce((e,n)=>(e[n]=this._functions[n].signature,e),{})}constructor(e,n){this.graph=e,this.parent=n,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(r=>{this._functionExecutorMap[r]=new bf(e.functions[r],this)})}getCompilationKey(e,n){const r=e.map(o=>o.name).sort(),s=n.map(o=>o.name).sort();return r.join(this.SEPARATOR)+"--"+s.join(this.SEPARATOR)}compile(e,n){const r=fC(e,n,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:o,syncInputs:a}=r;if(o!=null)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const l=n.map(d=>d.name),c=Object.keys(e);throw new Error(`Cannot compute the outputs [${l}] from the provided inputs [${c}]. Missing the following inputs: [${s}]`)}const i=OU(this.graph,r),u=zU(i);return{orderedNodes:i,nodeLiveUntilMap:u}}cloneAndKeepTensor(e){if(e==null)return null;const n=e.clone();return Nr(n),n}cloneTensorList(e){return e?e.map(r=>this.cloneAndKeepTensor(r)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,this.cloneTensorList(r)]))}execute(e,n){this.disposeIntermediateTensors(),e=this.mapInputs(e);const r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n);const s=r.map(p=>this.graph.nodes[xn(p)[0]]),o=n.map(p=>xn(p)[0]),a=new Set(o);let i=o.map(p=>this.graph.nodes[p]);i.length===0&&(i=this._outputs);const u=this.getCompilationKey(s,i);let l=this.compiledMap.get(u);l==null&&(l=this.compile(e,i),this.compiledMap.set(u,l));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const c={},d={};return Le(()=>{const p=new hC(this.weightMap,c,d,this.functionExecutorMap,this.parseNodeNameCache),h=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[x,w]=xn(g,p),v=[];v[w]=e[g],h[x]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(v))});const f=this.getFrozenTensorIds(h),{orderedNodes:m,nodeLiveUntilMap:y}=l;for(const g of m){if(h[g.name])continue;const x=pC(g,h,p,this._resourceManager);if(ao(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);h[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,h,p,f,a,y.get(g.name))}return this.parent==null&&p.dispose(f),n.map(g=>Ot(g,h,p))})}getFrozenTensorIds(e){const n=[].concat.apply([],Object.keys(e).map(r=>e[r]).map(r=>r.map(s=>s.id)));return new Set(n)}checkTensorForDisposal(e,n,r,s,o,a,i){if(!(Lo(n)||a.has(e))){for(const u of r[e])u!=null&&(i[u.id]=(i[u.id]||0)+n.children.length);for(const u of n.inputs){if(Lo(u))continue;const l=iC(u.name,r,s);if(l!=null)for(const c of l){if(!c||c.kept||o.has(c.id))continue;const d=i[c.id];d===1?(c.dispose(),delete i[c.id]):d!=null&&i[c.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,n,r,s,o,a){function i(u){return Lo(u)||o.has(u.name)}if(!(Lo(e)||a==null))for(const u of a){if(i(u))continue;const l=iC(u.name,n,r);for(const c of l)!c||c.kept||s.has(c.id)||c.dispose()}}async executeAsync(e,n){return this._executeAsync(e,n)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach(e=>{for(const n of e)n&&!n.isDisposed&&n.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,n,r=!1,s={},o={}){this.disposeIntermediateTensors(),r||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),n=this.mapOutputs(n),this.checkOutputs(n));try{this.keepIntermediateTensors=z().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(p){this.keepIntermediateTensors=!1,console.warn(p.message)}const a=new hC(this.weightMap,s,o,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,n,r),u=n.map(p=>Ot(p,i,a)),l=u.map(p=>p.id),c=Object.keys(e).map(p=>e[p].id),d=new Set([...l,...c,...this.weightIds]);return Object.values(i).forEach(p=>{p.forEach(h=>{h&&!h.isDisposed&&!d.has(h.id)&&h.dispose()})}),this.parent==null&&a.dispose(d),u}async executeFunctionAsync(e,n,r){const s=e.reduce((o,a,i)=>(o[this.inputs[i].name]=a,o),{});return this._executeAsync(s,this.outputNodes,!0,n,r)}async executeWithControlFlow(e,n,r,s){const o=Object.keys(e),a=o.map(v=>this.graph.nodes[xn(v)[0]]),i=r.map(v=>xn(v)[0]),u=new Set(i);let l=i.map(v=>this.graph.nodes[v]);l.length===0&&(l=this._outputs);const{usedNodes:c,missingInputs:d,dynamicNode:p,syncInputs:h}=fC(e,l,this.weightMap,this._initNodes),f=[...a,...this.graph.weights,...this._initNodes||[]].map(v=>({node:v,contexts:n.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(v=>{const[b,S]=xn(v),$=[];$[S]=e[v],m[b]=$});const y={},g=this.getFrozenTensorIds(m),x={};for(;f.length>0;){const v=this.processStack(a,f,n,m,x,g,u,y,c);await Promise.all(v)}p==null&&!s&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const w=l.filter(v=>!Lo(v)&&!Ot(v.name,m,n)).map(v=>v.name);if(w.length>0){let v="";throw p!=null&&(v=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${w}] from the provided inputs [${o}]. Consider providing the following inputs: [${d}]. ${v}`)}return m}processStack(e,n,r,s,o,a,i,u,l){const c=[];for(;n.length>0;){const d=n.pop();r.currentContext=d.contexts;let p="";if(d.node.op==="Enter"&&C("isConstant",d.node,s,r)&&([p]=ls(d.node.name,r)),s[d.node.name]==null){const h=pC(d.node,s,r,this._resourceManager);p||([p]=ls(d.node.name,r));const f=r.currentContext;ao(h)?c.push(h.then(m=>(s[p]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(m)),r.currentContext=f,this.checkTensorForDisposal(p,d.node,s,r,a,i,u),this.processChildNodes(d.node,n,r,s,o,l),m))):(s[p]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(h)),this.checkTensorForDisposal(p,d.node,s,r,a,i,u),this.processChildNodes(d.node,n,r,s,o,l))}else this.processChildNodes(d.node,n,r,s,o,l)}return c}processChildNodes(e,n,r,s,o,a){e.children.forEach(i=>{const[u]=ls(i.name,r);o[u]||!a.has(i.name)||(i.op==="Merge"?i.inputNames.some(l=>!!Ot(l,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:i})):i.inputNames.every(l=>!!Ot(l,s,r))&&(o[u]=!0,n.push({contexts:r.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(n=>n.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(n=>{const r=e[n],[s]=xn(n),o=this.graph.nodes[s];if(o.attrParams.shape&&o.attrParams.shape.value){const a=o.attrParams.shape.value,i=a.length===r.shape.length&&r.shape.every((u,l)=>a[l]===-1||a[l]===u);k(i,()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${a}], but was [${r.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&k(r.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(e){var n,r;const s={};for(const o in e){const a=(r=(n=this._signature)===null||n===void 0?void 0:n.inputs)===null||r===void 0?void 0:r[o];a!=null?s[a.name]=e[o]:s[o]=e[o]}return s}checkInputs(e){const n=Object.keys(e).filter(r=>{const[s]=xn(r);return this.graph.nodes[s]==null});if(n.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${n}] that are not part of graph`)}mapOutputs(e){return e.map(n=>{var r,s;const o=(s=(r=this._signature)===null||r===void 0?void 0:r.outputs)===null||s===void 0?void 0:s[n];return o!=null?o.name:n},{})}checkOutputs(e){e.forEach(n=>{const[r]=xn(n);if(!this.graph.nodes[r])throw new Error(`The output '${n}' is not found in the graph`)})}}class GU{constructor(e={},n={}){this.hashTableNameToHandle=e,this.hashTableMap=n}addHashTable(e,n){this.hashTableNameToHandle[e]=n.handle,this.hashTableMap[n.id]=n}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HU="?tfjs-format=file",jU="model.json";class zw{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,n={},r=Rw){this.modelUrl=e,this.loadOptions=n,this.version="n/a",this.io=r,n==null&&(this.loadOptions={}),this.resourceManager=new GU}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const n=this.io.getLoadHandlers(e,this.loadOptions);if(n.length===0)n.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(n.length>1)throw new Error(`Found more than one (${n.length}) load handlers for URL '${[e]}'`);this.handler=n[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return ao(e)?e.then(n=>n.getWeightStream==null?this.loadSync(n):this.loadStreaming(n)):this.loadSync(e)}loadSync(e){const n=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,n)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const n=await Mk(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,n)}loadWithWeightMap(e,n){this.artifacts=e;const r=this.artifacts.modelTopology;let s=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const o=this.artifacts.userDefinedMetadata;o.signature!=null&&(s=o.signature),o.structuredOutputKeys!=null&&(this.structuredOutputKeys=o.structuredOutputKeys)}if(this.signature=s,this.version=`${r.versions.producer}.${r.versions.minConsumer}`,this.executor=new bf(uC.Instance.transformGraph(r,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const o=uC.Instance.transformGraph(e.modelInitializer);this.initializer=new bf(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,n){if(typeof e=="string"){const r=this.io.getSaveHandlers(e);if(r.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${e}'`);e=r[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const n=e instanceof ct?[e]:e,r={};return n.forEach((s,o)=>r[this.structuredOutputKeys[o]]=s),r}return e}predict(e,n){const r=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(r)}async predictAsync(e,n){const r=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(r)}normalizeInputs(e){var n;if(!(e instanceof ct)&&!Array.isArray(e)){const o=(n=this.signature)===null||n===void 0?void 0:n.inputs;if(o!=null)for(const a in o){const i=o[a];i.resourceId!=null&&(e[a]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];const r=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+r!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-r} non-resource placeholders, while there are ${e.length} input tensors provided.`);let s=0;return this.inputNodes.reduce((o,a)=>{var i,u,l;const c=(l=(u=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||u===void 0?void 0:u[a])===null||l===void 0?void 0:l.resourceId;return c!=null?o[a]=this.resourceIdToCapturedInput[c]:o[a]=e[s++],o},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const n=this.initializerSignature.outputs,r=Object.keys(n);for(let s=0;s<r.length;s++){const o=r[s],a=n[o];this.resourceIdToCapturedInput[a.resourceId]=e[s]}}}execute(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=this.executor.execute(e,n);return r.length>1?r:r[0]}async executeAsync(e,n){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),n=this.normalizeOutputs(n);const r=await this.executor.executeAsync(e,n);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((n,r)=>(n[r]=[e[r]],n),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&tn(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function KU(t,e={},n=Rw){if(t==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof t=="string"&&(t=XU(t));const r=new zw(t,e,n);return await r.load(),r}function qU(t){if(t==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let e;if(t instanceof Array){const[r,s]=t;if(!r)throw new Error("modelJSON must be the first element of the array");if(!s||!(s instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");const o=ff(r.weightsManifest),a=O1(r,o,s);e=wf(a)}else if("load"in t)e=t;else if("modelTopology"in t&&"weightSpecs"in t&&"weightData"in t)e=wf(t);else throw new Error("Unknown model format");const n=new zw(e);return n.load(),n}function XU(t){return t.endsWith("/")||(t=t+"/"),`${t}${jU}${HU}`}/** @license See the LICENSE file. */const YU="4.15.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var QU=Object.freeze(Object.defineProperty({__proto__:null,GraphModel:zw,loadGraphModel:KU,loadGraphModelSync:qU,deregisterOp:CW,registerOp:bW,version_converter:YU},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zo={},eh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ZU(t,e){zo[t]=e}function zr(t,e){if(!(t in zo)||e!=null){const r=eG(t,e);if(r!==null)zo[t]=r;else return console.log("Could not get context for WebGL version",t),null}const n=zo[t];return n==null||n.isContextLost()?(delete zo[t],zr(t)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),zo[t])}function JU(t){if(!z().getBool("IS_SAFARI")&&typeof OffscreenCanvas!="undefined"&&t===2)return new OffscreenCanvas(300,150);if(typeof document!="undefined")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function eG(t,e){if(t!==1&&t!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=e==null?JU(t):e;return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete zo[t]},!1),z().getBool("SOFTWARE_WEBGL_ENABLED")&&(eh.failIfMajorPerformanceCaveat=!1),t===1?n.getContext("webgl",eh)||n.getContext("experimental-webgl",eh):n.getContext("webgl2",eh)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var mc;(function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"})(mc||(mc={}));var Vn;(function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"})(Vn||(Vn={}));var Ft;(function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Ft||(Ft={}));function Ip(t,e){return[e,t]}function tG(t,e){return t*e}function th(t){const e=L(t),n=Math.ceil(e/4);return uf(n)}function Xu(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function nG(t,e){const[n,r]=Xu(t,e);return n*r*4}function Bw(t,e){const n=t;let r,s,o,a,i,u,l,c,d,p;return z().getNumber("WEBGL_VERSION")===2?(r=n.R32F,s=n.R16F,o=n.RGBA16F,a=n.RGBA32F,i=n.RED,l=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=t.RGBA,s=t.RGBA,o=t.RGBA,a=n.RGBA,i=t.RGBA,l=4,c=4,d=e!=null?e.HALF_FLOAT_OES:null,p=t.FLOAT,u=t.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ue(t,e){const n=e();return z().getBool("DEBUG")&&rG(t),n}function rG(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+iG(t,e))}const sG=596e-10,oG=65504;function aG(t){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||t===0||sG<Math.abs(t)&&Math.abs(t)<oG)}function iG(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function nh(t,e){return _s(t,()=>t.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function uG(t,e){const n=_s(t,()=>t.createShader(t.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function lG(t,e){const n=_s(t,()=>t.createShader(t.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(ue(t,()=>t.shaderSource(n,e)),ue(t,()=>t.compileShader(n)),z().get("ENGINE_COMPILE_ONLY"))return n;if(t.getShaderParameter(n,t.COMPILE_STATUS)===!1)throw hE(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const cG=/ERROR: [0-9]+:([0-9]+):/g;function hE(t,e){const n=cG.exec(e);if(n==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(t);return}const r=+n[1],s=t.split(`
`),o=s.length.toString().length+2,a=s.map((d,p)=>Yo((p+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const u=a.slice(0,r-1),l=a.slice(r-1,r),c=a.slice(r);console.log(u.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${Yo(l[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join(`
`))}function dG(t){return _s(t,()=>t.createProgram(),"Unable to create WebGLProgram.")}function pG(t,e){if(ue(t,()=>t.linkProgram(e)),!z().get("ENGINE_COMPILE_ONLY")&&t.getProgramParameter(e,t.LINK_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function wy(t,e){if(ue(t,()=>t.validateProgram(e)),t.getProgramParameter(e,t.VALIDATE_STATUS)===!1)throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function hG(t,e){const n=_s(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function fG(t,e){const n=_s(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return ue(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n)),ue(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),n}function mG(t){return _s(t,()=>t.createTexture(),"Unable to create WebGLTexture.")}function gG(t,e){const n=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0){const r=`[${t}x${e}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(t>n||e>n){const r=`[${t}x${e}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function yG(t){return _s(t,()=>t.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function mC(t,e,n,r,s,o,a){const i=t.getAttribLocation(e,n);return i===-1?!1:(ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),ue(t,()=>t.vertexAttribPointer(i,s,t.FLOAT,!1,o,a)),ue(t,()=>t.enableVertexAttribArray(i)),!0)}function xG(t,e,n){SG(t,n),ue(t,()=>t.activeTexture(t.TEXTURE0+n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,e))}function wG(t,e,n){return _s(t,()=>t.getUniformLocation(e,n),'uniform "'+n+'" not present in program.')}function vG(t,e,n){return t.getUniformLocation(e,n)}function bG(t,e,n,r){ue(t,()=>xG(t,e,r)),ue(t,()=>t.uniform1i(n,r))}function vy(t,e,n){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,n)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0))}function gC(t,e){ue(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,e)),ue(t,()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0))}function rh(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+CG(t,e))}function CG(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function _s(t,e,n){const r=ue(t,()=>e());if(r==null)throw new Error(n);return r}function SG(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n){const s=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${s}.`)}}function Di(t,e=2){return L(t.slice(0,t.length-e))}function Pi(t){if(t.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function sh(t){let e=[1,1,1];return t.length===0||t.length===1&&t[0]===1||(e=[Di(t),...Pi(t)]),e}function $G(t,e=!1){let n=z().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=z().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&z().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),e&&(n=n*2,r=r*2,t=t.map((i,u)=>u>=t.length-2?sm(t[u]):t[u]),t.length===1&&(t=[2,t[0]])),t.length!==2&&(t=Ts(t).newShape);let s=L(t),o=null;t.length<=1&&s<=n?o=[1,s]:t.length===2&&t[0]<=n&&t[1]<=n?o=t:t.length===3&&t[0]*t[1]<=n&&t[2]<=n?o=[t[0]*t[1],t[2]]:t.length===3&&t[0]<=n&&t[1]*t[2]<=n?o=[t[0],t[1]*t[2]]:t.length===4&&t[0]*t[1]*t[2]<=n&&t[3]<=n?o=[t[0]*t[1]*t[2],t[3]]:t.length===4&&t[0]<=n&&t[1]*t[2]*t[3]<=n&&(o=[t[0],t[1]*t[2]*t[3]]);const a=o!=null&&Math.max(...o)>r&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=Di(t);let u=2,l=2;t.length&&([u,l]=Pi(t)),s=i*(u/2)*(l/2),o=uf(s).map(c=>c*2)}else o=uf(s);return o}function oh(t){return t%2===0}function Cf(t,e){if(t=t.slice(-2),e=e.slice(-2),Pe(t,e)||!t.length||!e.length||t[0]===0||t[1]===0||e[0]===0||e[1]===0)return!0;if(t.length!==e.length){const n=t[t.length-1],r=e[e.length-1];if(n===r||oh(n)&&oh(r)&&(t[0]===1||e[0]===1))return!0}return t[1]===e[1]&&oh(t[0])&&oh(e[0])}let by,Cy;function kG(t){if(by==null){const e=zr(t);by=e.getParameter(e.MAX_TEXTURE_SIZE)}return by}function IG(t){if(Cy==null){const e=zr(t);Cy=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Cy)}function NG(t){if(t===0)return 0;let e;const n=zr(t);return lr(n,"EXT_disjoint_timer_query_webgl2")&&t===2?e=2:lr(n,"EXT_disjoint_timer_query")?e=1:e=0,e}function lr(t,e){return t.getExtension(e)!=null}function yC(t){try{if(zr(t)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function TG(t){if(t===0)return!1;const e=zr(t);if(t===1){if(!lr(e,"OES_texture_float"))return!1}else if(!lr(e,"EXT_color_buffer_float"))return!1;return o0(e)}function EG(t){if(t===0)return!1;const e=zr(t);if(t===1){if(!lr(e,"OES_texture_float")||!lr(e,"WEBGL_color_buffer_float"))return!1}else{if(lr(e,"EXT_color_buffer_float"))return o0(e);const r="EXT_color_buffer_half_float";if(lr(e,r)){const s=e.getExtension(r);return RG(e,s)}return!1}return o0(e)}function o0(t){const e=Bw(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);const r=1,s=1;t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,r,s,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(o),a}function RG(t,e){const n=Bw(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);const s=1,o=1;t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,s,o,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,a),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(a),i}function _G(t){return t!==2?!1:zr(t).fenceSync!=null}function Np(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&k(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const me=z();me.registerFlag("HAS_WEBGL",()=>me.getNumber("WEBGL_VERSION")>0);me.registerFlag("WEBGL_VERSION",()=>yC(2)?2:yC(1)?1:0);me.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);me.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>me.get("WEBGL_VERSION")===2);me.registerFlag("WEBGL_CPU_FORWARD",()=>!0);me.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);me.registerFlag("WEBGL_PACK",()=>me.getBool("HAS_WEBGL"));me.registerFlag("WEBGL_PACK_NORMALIZATION",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_CLIP",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_REDUCE",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_LAZILY_UNPACK",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_CONV_IM2COL",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>me.getBool("WEBGL_PACK"));me.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>kG(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>IG(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const t=me.getNumber("WEBGL_VERSION");return t===0?0:NG(t)});me.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>me.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!_1());me.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>TG(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>me.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:me.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));me.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>EG(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_FENCE_API_ENABLED",()=>_G(me.getNumber("WEBGL_VERSION")));me.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>me.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);me.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)});me.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>_1()?1:-1,t=>{if(typeof t!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${t}.`);if(t<0&&t!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${t}.`)});me.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);me.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);me.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);me.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);me.registerFlag("WEBGL_EXP_CONV",()=>!1);me.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>me.getBool("IS_TEST"));me.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);me.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);me.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);me.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sn(){let t,e,n,r,s,o,a,i,u,l;return z().getNumber("WEBGL_VERSION")===2?(t="#version 300 es",e="in",n="out",r="in",s="texture",o="outputColor",a="out vec4 outputColor;",i=z().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",l=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(t="",e="attribute",n="varying",r="varying",s="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,l=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:s,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(t,e,n="index"){const r=fe(e);return r.map((s,o)=>{const a=`int ${t[o]} = ${n} / ${s}`,i=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * ${s}`:`index -= ${t[o]} * ${s}`;return`${a}; ${i};`}).join("")}function gg(t,e,n="index"){const r=fe(e);return r.map((s,o)=>{const a=`int ${t[o]} = ${n} / outShapeStrides[${o}]`,i=o===r.length-1?`int ${t[o+1]} = ${n} - ${t[o]} * outShapeStrides[${o}]`:`index -= ${t[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function DG(t,e){const n=t.length,r=t.map(o=>`${e}[${o}]`),s=new Array(n-1);s[n-2]=r[n-1];for(let o=n-3;o>=0;--o)s[o]=`(${s[o+1]} * ${r[o+1]})`;return s}function PG(t,e,n="index"){const r=t.map((o,a)=>a),s=DG(r,e);return s.map((o,a)=>{const i=`int ${t[a]} = ${n} / ${s[a]}`,u=a===s.length-1?`int ${t[a+1]} = ${n} - ${t[a]} * ${s[a]}`:`index -= ${t[a]} * ${s[a]}`;return`${i}; ${u};`}).join("")}function Mw(t){const e=fe(t).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Vw(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const fE=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:mE}=lE;function AG(t,e,n){const r=[];if(t.forEach(h=>{const f=L(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${f>1?`[${f}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){const{uniformShape:m}=Ww(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(e.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});const s=r.join(`
`),o=t.map(h=>OG(h,e,n.packedInputs,n.enableShapeUniforms)).join(`
`),a=e.texShape,i=sn(),u=zG(i);let l,c,d=VG(i);return e.isPacked?(l=FG(e.logicalShape,a,n.enableShapeUniforms),c=MG(i)):(l=LG(e.logicalShape,a,n.enableShapeUniforms),c=BG(i)),n.packedInputs&&(d+=HG),[d,u,c,s,l,o,n.userCode].join(`
`)}function Yu(t,e=!1){const n=t.shapeInfo.logicalShape;switch(n.length){case 0:return rH(t,e);case 1:return oH(t,e);case 2:return iH(t,e);case 3:return lH(t,e);case 4:return dH(t,e);case 5:return pH(t);case 6:return hH(t);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function gE(t,e){switch(t.shapeInfo.logicalShape.length){case 0:return nH(t);case 1:return sH(t,e);case 2:return aH(t,e);case 3:return uH(t,e);default:return cH(t,e)}}function OG(t,e,n=!1,r){let s="";n?s+=gE(t,r):s+=Yu(t,r);const o=t.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(n?s+=fH(t,e):s+=mH(t,e)),s}function FG(t,e,n){switch(t.length){case 0:return yE();case 1:return jG(t,e,n);case 2:return eH(t,e,n);case 3:return qG(t,e,n);default:return YG(t,e,n)}}function LG(t,e,n){switch(t.length){case 0:return yE();case 1:return KG(t,e,n);case 2:return tH(t,e,n);case 3:return XG(t,e,n);case 4:return QG(t,e,n);case 5:return ZG(t,e);case 6:return JG(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}}function zG(t){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${t.texture2D}(textureSampler, uv).r;
    }
  `}function BG(t){return`
    void setOutput(float val) {
      ${t.output} = vec4(val, 0, 0, 0);
    }
  `}function MG(t){return`
    void setOutput(vec4 val) {
      ${t.output} = val;
    }
  `}function VG(t){return`${t.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${t.varyingFs} vec2 resultUV;
    ${t.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${t.defineSpecialNaN}
    ${t.defineSpecialInf}
    ${t.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${WG}
    ${UG}
    ${GG}
  `}const WG=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,UG=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,GG=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,HG=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function yE(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function jG(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function KG(t,e,n){return e[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function qG(t,e,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[2]/2),o=s*Math.ceil(t[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec3(b, r, c);
    }
  `}function XG(t,e,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${gg(["r","c","d"],t)}
    return ivec3(r, c, d);
  }
`;const r=Ra(["r","c","d"],t);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function YG(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],s=Math.ceil(t[t.length-1]/2),o=s*Math.ceil(t[t.length-2]/2);let a=o,i="",u="b, r, c";for(let l=2;l<t.length-1;l++)a*=t[t.length-l-1],i=`
      int b${l} = index / ${a};
      index -= b${l} * ${a};
    `+i,u=`b${l}, `+u;return`
    ivec${t.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec${t.length}(${u});
    }
  `}function QG(t,e,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${gg(["r","c","d","d2"],t)}
      return ivec4(r, c, d, d2);
    }
  `;const r=Ra(["r","c","d","d2"],t);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function ZG(t,e){const n=Ra(["r","c","d","d2","d3"],t);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function JG(t,e){const n=Ra(["r","c","d","d2","d3","d4"],t);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function eH(t,e,n){const r=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Pe(t,e))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;const s=Math.ceil(t[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${s});
      int c = imod(index, ${s}) * 2;

      return ivec2(r, c);
    }
  `}function tH(t,e,n){return Pe(t,e)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:t[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:t[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${t[1]};
      int c = index - r * ${t[1]};
      return ivec2(r, c);
    }
  `}function _a(t){return`offset${t}`}function nH(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=sn();return`
    vec4 ${n}() {
      return ${r.texture2D}(${e}, halfCR);
    }
  `}function rH(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,o]=t.shapeInfo.texShape;if(s===1&&o===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;const a=_a(n);if(e)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});
      return sampleTexture(${n}, uv);
    }
  `;const[i,u]=t.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${i}, ${u}, ${a});
      return sampleTexture(${n}, uv);
    }
  `}function sH(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t.shapeInfo.texShape,o=sn();if(e)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${n}, uv);
    }
  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${n}, uv);
    }
  `}function oH(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(t.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${Qu(t)}
      }
    `;const s=t.shapeInfo.texShape,o=s[0],a=s[1];if(a===1&&o===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;const i=_a(n);return a===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${n}, uv);
      }
    `:o===1?e?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:e?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${n}, uv);
    }
  `}function aH(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],u=sn();if(o!=null&&Pe(n,o))return e?`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(e)return`
    vec4 ${s}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;const l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(n[1]/2);return`
    vec4 ${s}(int row, int col) {
      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function iH(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape;if(o!=null&&Pe(n,o)){if(e)return`
      float ${s}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;const p=o[0],h=o[1];return`
    float ${s}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${h}.0, ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `}const{newShape:a,keptDims:i}=Ts(n),u=a;if(u.length<n.length){const p=Zu(t,u),h=["row","col"];return`
      ${Yu(p,e)}
      float ${s}(int row, int col) {
        return ${s}(${Ju(h,i)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${Qu(t)}
      }
    `;const l=o[0],c=o[1],d=_a(r);return c===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);
      return sampleTexture(${r}, uv);
    }
  `:l===1?e?`
      float ${s}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:e?`
      float ${s}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${s}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${l}, ${c}, index);
    return sampleTexture(${r}, uv);
  }
`}function uH(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(n[0]===1){const p=n.slice(1),h=[1,2],f=Zu(t,p),m=["b","row","col"];return`
        ${gE(f,e)}
        vec4 ${s}(int b, int row, int col) {
          return ${s}(${Ju(m,h)});
        }
      `}const i=sn();if(e)return`
    vec4 ${s}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `;const u=a[0],l=a[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`
    vec4 ${s}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${l}, ${d}, ${c}, b, row, col);
      return ${i.texture2D}(${r}, uv);
    }
  `}function lH(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[1]*n[2],a=n[2],{newShape:i,keptDims:u}=Ts(n),l=i;if(l.length<n.length){const m=Zu(t,l),y=["row","col","depth"];return`
        ${Yu(m,e)}
        float ${s}(int row, int col, int depth) {
          return ${s}(${Ju(y,u)});
        }
      `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${Qu(t)}
      }
    `;const c=t.shapeInfo.texShape,d=c[0],p=c[1],h=t.shapeInfo.flatOffset;if(p===o&&h==null)return e?`
      float ${s}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${s}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${p}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(p===a&&h==null)return e?`
      float ${s}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${s}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;const f=_a(r);return e?`
    float ${s}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${s}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${p}, index);
        return sampleTexture(${r}, uv);
      }
  `}function cH(t,e){const n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=sn();if(e)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);
    }
  `;const o=t.shapeInfo.logicalShape,a=o.length,i=t.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],d=Math.ceil(o[a-1]/2);let p=d*Math.ceil(o[a-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<a-1;m++)h=`int b${m}, `+h,p*=o[a-m-1],f=`b${m} * ${p} + `+f;return`
    vec4 ${r}(${h}) {
      int index = ${f};
      int texR = index / ${c};
      int texC = index - texR * ${c};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});
      return ${s.texture2D}(${n}, uv);
    }
  `}function dH(t,e){const n=t.shapeInfo.logicalShape,r=t.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),o=n[3],a=n[2]*o,i=n[1]*a,{newShape:u,keptDims:l}=Ts(n);if(u.length<n.length){const x=Zu(t,u),w=["row","col","depth","depth2"];return`
      ${Yu(x,e)}
      float ${s}(int row, int col, int depth, int depth2) {
        return ${s}(${Ju(w,l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${Qu(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(h===o&&c==null)return e?`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${s}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${r}, uv);
      }
    `;const g=_a(r);return e?`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${y}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${g});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${s}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${p}, ${h}, index + ${g});
      return sampleTexture(${r}, uv);
    }
  `}function pH(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e[4],o=e[3]*s,a=e[2]*o,i=e[1]*a,{newShape:u,keptDims:l}=Ts(e);if(u.length<e.length){const m=Zu(t,u),y=["row","col","depth","depth2","depth3"];return`
      ${Yu(m)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Ju(y,l)});
      }
    `}if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${s})) +
          depth3;
        ${Qu(t)}
      }
    `;const c=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(h===s&&c==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${h}.0, ${p}.0);
        return sampleTexture(${n}, uv);
      }
    `;const f=_a(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${s} + depth3 + ${f};
      vec2 uv = uvFromFlat(${p}, ${h}, index);
      return sampleTexture(${n}, uv);
    }
  `}function hH(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:o}=Ts(e);if(s.length<e.length){const y=Zu(t,s),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${Yu(y)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Ju(g,o)});
      }
    `}const a=e[5],i=e[4]*a,u=e[3]*i,l=e[2]*u,c=e[1]*l;if(t.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${c}, ${l}, ${u}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${Qu(t)}
      }
    `;const d=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,h=p[0],f=p[1];if(f===c&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${l}, ${u}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;const m=_a(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${c} + col * ${l} + depth * ${u} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${h}, ${f}, index);
      return sampleTexture(${n}, uv);
    }
  `}function Qu(t){const e=t.name,n=L(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function fH(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=mE(t.shapeInfo.logicalShape,e.logicalShape),u=We(a),l=a-o;let c;const d=["x","y","z","w","u","v"];o===0?c="":a<2&&i.length>=1?c="coords = 0;":c=i.map(x=>`coords.${d[x+l]} = 0;`).join(`
`);let p="";a<2&&o>0?p="coords":p=t.shapeInfo.logicalShape.map((x,w)=>`coords.${d[w+l]}`).join(", ");let h="return outputValue;";const m=L(t.shapeInfo.logicalShape)===1,g=L(e.logicalShape)===1;if(o===1&&!m&&!g)h=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!g)a===1?h=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:h=`
        return vec4(outputValue.x);
      `;else if(i.length){const x=o-2,w=o-1;i.indexOf(x)>-1&&i.indexOf(w)>-1?h="return vec4(outputValue.x);":i.indexOf(x)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(w)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${s}() {
      ${u} coords = getOutputCoords();
      ${c}
      vec4 outputValue = get${r}(${p});
      ${h}
    }
  `}function mH(t,e){const n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",o=e.texShape,a=t.shapeInfo.texShape,i=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&i===u&&t.shapeInfo.flatOffset==null&&Pe(a,o))return`
      float ${s}() {
        return sampleTexture(${n}, resultUV);
      }
    `;const l=We(u),c=mE(t.shapeInfo.logicalShape,e.logicalShape),d=u-i;let p;const h=["x","y","z","w","u","v"];i===0?p="":u<2&&c.length>=1?p="coords = 0;":p=c.map(m=>`coords.${h[m+d]} = 0;`).join(`
`);let f="";return u<2&&i>0?f="coords":f=t.shapeInfo.logicalShape.map((m,y)=>`coords.${h[y+d]}`).join(", "),`
    float ${s}() {
      ${l} coords = getOutputCoords();
      ${p}
      return get${r}(${f});
    }
  `}function We(t){if(t<=1)return"int";if(t===2)return"ivec2";if(t===3)return"ivec3";if(t===4)return"ivec4";if(t===5)return"ivec5";if(t===6)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Ww(t,e,n){const{newShape:r,keptDims:s}=Ts(e),o=e.length,a=t&&o===3&&e[0]===1,i=a?e.slice(1):r,u=!t&&o>1&&!Pe(e,n)&&r.length<o||a;return{useSqueezeShape:u,uniformShape:u?i:e,keptDims:s}}function Zu(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Ju(t,e){return e.map(n=>t[n]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(t,e,n,r){const s=n.map((c,d)=>{const p={logicalShape:c.shape,texShape:c.isUniform?null:c.texData.texShape,isUniform:c.isUniform,isPacked:c.isUniform?!1:c.texData.isPacked,flatOffset:null};return c.texData!=null&&c.texData.slice!=null&&c.texData.slice.flatOffset>0&&(p.flatOffset=c.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:p}}),o=s.map(c=>c.shapeInfo),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=AG(s,a,e),u=lG(t.gl,i),l=t.createProgram(u);return z().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(t.buildVao(l),Object.assign({program:e,fragmentShader:u,source:i,webGLProgram:l,inShapeInfos:o,outShapeInfo:a},xE(t,e,l)))}function xE(t,e,n){const r=[],s=[];let o,a,i,u=null,l=null;l=t.getUniformLocation(n,"NAN",!1),z().getNumber("WEBGL_VERSION")===1&&(u=t.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const d of e.variableNames){const p={name:d,uniform:t.getUniformLocation(n,d,c),offset:t.getUniformLocation(n,`offset${d}`,c)};e.enableShapeUniforms&&(p.shape=t.getUniformLocation(n,`${d}Shape`,c),p.texShape=t.getUniformLocation(n,`${d}TexShape`,c)),r.push(p)}if(e.enableShapeUniforms&&(o=t.getUniformLocation(n,"outShape",c),i=t.getUniformLocation(n,"outShapeStrides",c),a=t.getUniformLocation(n,"outTexShape",c)),e.customUniforms)for(const d of e.customUniforms)s.push(t.getUniformLocation(n,d.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:u,nanLoc:l,outShapeLocation:o,outShapeStridesLocation:i,outTexShapeLocation:a}}function xC(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach((n,r)=>{const s=n.logicalShape,o=e[r],a=o.shape;if(!Pe(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(n.isUniform&&o.isUniform)return;const i=n.texShape,u=o.isUniform?null:o.texData.texShape;if(!Pe(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)})}function yH(t,e,n,r,s){e.program.enableShapeUniforms||(xC(e.inShapeInfos,n),xC([e.outShapeInfo],[r]));const o=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):t.setOutputMatrixTexture(o.texture,a[0],a[1]),t.setProgram(e.webGLProgram),t.bindVertexArray(e.webGLProgram.vao),z().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&t.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&t.gl.uniform1f(e.nanLoc,NaN);for(let u=0;u<n.length;++u){const l=n[u],{uniform:c,offset:d,shape:p,texShape:h}=e.variablesLocations[u];if(p){const{uniformShape:f}=Ww(e.program.packedInputs,l.shape,l.texData.texShape);switch(f.length){case 1:t.gl.uniform1iv(p,new Int32Array(f));break;case 2:t.gl.uniform2iv(p,new Int32Array(f));break;case 3:t.gl.uniform3iv(p,new Int32Array(f));break;case 4:t.gl.uniform4iv(p,new Int32Array(f));break}}if(h&&t.gl.uniform2i(h,l.texData.texShape[0],l.texData.texShape[1]),c!=null){if(l.isUniform){if(L(l.shape)<2)t.gl.uniform1f(c,l.uniformValues[0]);else{let f=l.uniformValues;f instanceof Float32Array||(f=new Float32Array(f)),t.gl.uniform1fv(c,f)}continue}l.texData.slice!=null&&d!=null&&t.gl.uniform1i(d,l.texData.slice.flatOffset),t.setInputMatrixTexture(l.texData.texture.texture,c,u)}}const i=e.outShapeLocation;if(i)switch(r.shape.length){case 1:t.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:t.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:t.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:t.gl.uniform4iv(i,new Int32Array(r.shape));break}if(e.outShapeStridesLocation){const u=fe(r.shape);switch(r.shape.length){case 2:t.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(u));break;case 3:t.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(u));break;case 4:t.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(u));break}}if(e.outTexShapeLocation&&t.gl.uniform2i(e.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),e.program.customUniforms&&s)for(let u=0;u<e.program.customUniforms.length;++u){const l=e.program.customUniforms[u],c=e.customUniformLocations[u],d=s[u];if(l.type==="float")t.gl.uniform1fv(c,d);else if(l.type==="vec2")t.gl.uniform2fv(c,d);else if(l.type==="vec3")t.gl.uniform3fv(c,d);else if(l.type==="vec4")t.gl.uniform4fv(c,d);else if(l.type==="int")t.gl.uniform1iv(c,d);else if(l.type==="ivec2")t.gl.uniform2iv(c,d);else if(l.type==="ivec3")t.gl.uniform3iv(c,d);else if(l.type==="ivec4")t.gl.uniform4iv(c,d);else throw Error(`uniform type ${l.type} is not supported yet.`)}t.executeProgram()}function xH(t,e,n){let r="";e.concat(n).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(t.enableShapeUniforms&&!a.isUniform){const u=a.texData.texShape,{useSqueezeShape:l,uniformShape:c,keptDims:d}=Ww(t.packedInputs,a.shape,u);let p="",h="",f="";if(c.length===1&&t.packedInputs){const b=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];p=`${b[0]>1}_${b[1]>1}`}else if(c.length===2&&!t.packedInputs)h=`${c[0]>1}_${c[1]>1}`;else if(c.length>2&&!t.packedInputs){const b=fe(c);f=`${b[0]===u[1]}_${b[b.length-1]===u[1]}`}const m=a.shape.length,y=c.length===2&&Pe(a.shape,u),g=L(a.shape)===1,x=$s(a.shape,n.shape),w=!t.packedInputs&&m===n.shape.length&&Pe(u,n.texData.texShape),v=t.packedInputs||c.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${m}_${w}_${l?d:""}_${c.length}_${g}_${x}_${y}_${p}_${h}_${f}_${v}_${i}`}else{const u=a.isUniform?"uniform":a.texData.texShape;r+=`${a.shape}_${u}_${i}`}});const s=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+s+`${z().getNumber("WEBGL_VERSION")}`,o}function Kt(t){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&t<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wH{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=mc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=sn();this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?gg(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=mc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=sn();this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?gg(["r","c","d"],e):Ra(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bH{constructor(e){this.variableNames=["A"],this.outTexUsage=Vn.DOWNLOAD;const n=sn();this.outputShape=e,this.userCode=`
      ${fE}

      void main() {
        float x = getAAtOutCoords();
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class CH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Vn.DOWNLOAD;const n=sn();this.outputShape=e,this.userCode=`
      ${fE}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${n.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH={R:0,G:1,B:2,A:3};class wC{constructor(e,n=!1,r="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=sn();this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length);let o="result";n&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<r.length;i++){const u=r[i];a+=`
          if(offset == ${i}) {
            result = values[${SH[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Vw():Mw(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${r.length});

        flatIndex = idiv(flatIndex, ${r.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${s.texture2D}(A, uv);
          ${a}
        }
        ${s.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $H{constructor(e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=sn();this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length);let s="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const u=a*2+i;s+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${r.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Vw():Mw(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${s}

          ${r.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(t){const e=sn(),n=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return uG(t,n)}function IH(t){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return hG(t,e)}function NH(t){const e=new Uint16Array([0,1,2,2,1,3]);return fG(t,e)}function Tp(t,e,n,r,s,o){gG(e,n);const a=mG(t),i=t.TEXTURE_2D;return ue(t,()=>t.bindTexture(i,a)),ue(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(i,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)),ue(t,()=>t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST)),ue(t,()=>t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST)),z().getNumber("WEBGL_VERSION")===1?ue(t,()=>t.texImage2D(i,0,r,e,n,0,s,o,null)):ue(t,()=>t.texStorage2D(i,1,r,e,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null)),{texture:a,texShape:[n,e]}}function wE(t){return t.internalFormatFloat}function TH(t,e,n,r){const[s,o]=Ip(e,n);return Tp(t,s,o,wE(r),r.textureFormatFloat,t.FLOAT)}function vE(t){return t.internalFormatHalfFloat}function EH(t,e,n,r){const[s,o]=Ip(e,n);return Tp(t,s,o,vE(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function bE(t){return t.downloadTextureFormat}function RH(t,e,n,r){const[s,o]=Ip(e,n);return Tp(t,s,o,bE(r),t.RGBA,t.UNSIGNED_BYTE)}function CE(t){return t.internalFormatPackedFloat}function _H(t,e,n,r){const[s,o]=Xu(e,n);return Tp(t,s,o,CE(r),t.RGBA,t.FLOAT)}function SE(t){return t.internalFormatPackedHalfFloat}function DH(t,e,n,r){const[s,o]=Xu(e,n);return Tp(t,s,o,SE(r),t.RGBA,r.textureTypeHalfFloat)}function PH(t,e,n){return ue(t,()=>t.bindBuffer(t.ARRAY_BUFFER,n)),mC(t,e,"clipSpacePos",n,3,20,0)&&mC(t,e,"uv",n,2,20,12)}function AH(t,e,n,r,s,o){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e));let a,i,u;s instanceof Uint8Array?(a=new Uint8Array(n*r*4),i=t.UNSIGNED_BYTE,u=t.RGBA):(a=new Float32Array(n*r*4),i=t.FLOAT,u=o.internalFormatPackedFloat),a.set(s),z().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n,r,t.RGBA,i,a)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,i,a)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function OH(t,e,n){ue(t,()=>t.bindTexture(t.TEXTURE_2D,e)),n.data instanceof Uint8Array?z().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,n.width,n.height,t.RGBA,t.UNSIGNED_BYTE,n.data)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data)):z().getNumber("WEBGL_VERSION")===2?ue(t,()=>t.texSubImage2D(t.TEXTURE_2D,0,0,0,t.RGBA,t.UNSIGNED_BYTE,n)):ue(t,()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n)),ue(t,()=>t.bindTexture(t.TEXTURE_2D,null))}function FH(t,e,n,r){const s=t.createBuffer();ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,s));const i=4*4*e*n;return ue(t,()=>t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)),ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0)),ue(t,()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null)),s}function LH(t,e,n){const r=t,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function zH(t,e,n,r){const[s,o]=Ip(e,n),a=4,i=new Uint8Array(tG(e*n,a));return ue(t,()=>t.readPixels(0,0,s,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function BH(t,e,n,r,s,o,a,i){const u=t,l=new Float32Array(nG(o,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function MH(t,e,n){const r=new Float32Array(e*n*4);return ue(t,()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r)),r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sy{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const n=z().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,ZU(n,e)):this.gl=zr(n),e=this.gl,z().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>ue(o,()=>o.createVertexArray()),this.bindVertexArray=a=>ue(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>ue(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>ue(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ue(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>ue(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>ue(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>ue(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),z().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=nh(this.gl,o),lr(this.gl,a))this.textureHalfFloatExtension=nh(this.gl,a);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),lr(this.gl,s))this.colorBufferHalfFloatExtension=nh(this.gl,s);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",lr(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else if(lr(this.gl,s))this.colorBufferHalfFloatExtension=this.gl.getExtension(s);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=IH(this.gl),this.indexBuffer=NH(this.gl),this.framebuffer=yG(this.gl),this.textureConfig=Bw(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;ue(e,()=>e.finish()),ue(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),ue(e,()=>e.deleteFramebuffer(this.framebuffer)),ue(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),ue(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),ue(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,n){return this.throwIfDisposed(),TH(this.gl,e,n,this.textureConfig)}createFloat16MatrixTexture(e,n){return this.throwIfDisposed(),EH(this.gl,e,n,this.textureConfig)}createUnsignedBytesMatrixTexture(e,n){return this.throwIfDisposed(),RH(this.gl,e,n,this.textureConfig)}uploadPixelDataToTexture(e,n){this.throwIfDisposed(),OH(this.gl,e,n)}uploadDenseMatrixToTexture(e,n,r,s){this.throwIfDisposed(),AH(this.gl,e,n,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,n){return this.throwIfDisposed(),DH(this.gl,e,n,this.textureConfig)}createPackedMatrixTexture(e,n){return this.throwIfDisposed(),_H(this.gl,e,n,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(gC(this.gl,this.framebuffer),this.outputTexture=null),ue(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,n,r){return this.downloadMatrixDriver(e,()=>zH(this.gl,n,r,this.textureConfig))}downloadPackedMatrixFromBuffer(e,n,r,s,o,a){return BH(this.gl,e,n,r,s,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,n){return LH(this.gl,e,n)}createBufferFromTexture(e,n,r){this.bindTextureToFrameBuffer(e);const s=FH(this.gl,n,r,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let n,r;if(z().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,o=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),r=()=>{const a=s.clientWaitSync(o,0,0);return a===s.ALREADY_SIGNALED||a===s.CONDITION_SATISFIED},n=o}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(n=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(n,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:n,isFencePassed:r}}downloadMatrixFromPackedTexture(e,n,r){return this.downloadMatrixDriver(e,()=>MH(this.gl,n,r))}createProgram(e){this.throwIfDisposed();const n=this.gl;this.vertexShader==null&&(this.vertexShader=kH(n));const r=dG(n);ue(n,()=>n.attachShader(r,this.vertexShader)),ue(n,()=>n.attachShader(r,e)),pG(n,r);const s=Object.assign(r,{vao:this.createVertexArray()});return this.debug&&wy(n,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const n=this.gl;ue(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),PH(n,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(ue(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&wy(this.gl,this.program),ue(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,n,r=!0){return this.throwIfDisposed(),r?wG(this.gl,e,n):vG(this.gl,e,n)}getAttributeLocation(e,n){return this.throwIfDisposed(),ue(this.gl,()=>this.gl.getAttribLocation(e,n))}getUniformLocationNoThrow(e,n){return this.throwIfDisposed(),this.gl.getUniformLocation(e,n)}setInputMatrixTexture(e,n,r){this.throwIfDisposed(),this.throwIfNoProgram(),bG(this.gl,e,n,r)}setOutputMatrixTexture(e,n,r){this.setOutputMatrixTextureDriver(e,r,n)}setOutputPackedMatrixTexture(e,n,r){this.throwIfDisposed();const[s,o]=Xu(n,r);this.setOutputMatrixTextureDriver(e,s,o)}setOutputMatrixWriteRegion(e,n,r,s){this.setOutputMatrixWriteRegionDriver(r,e,s,n)}setOutputPackedMatrixWriteRegion(e,n,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&wy(this.gl,this.program),rh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const n=this.getVertexArray();console.assert(n===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ue(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ue(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=nh(this.gl,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),n=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,n),n}endQuery(){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const n=this.gl,r=this.getQueryTimerExtensionWebGL2();n.endQuery(r.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Tx(()=>this.disposed||this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,n){if(n===0)return null;if(n===2){const r=this.gl;return r.getQueryParameter(e,r.QUERY_RESULT)/1e6}else{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(e,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,n){if(n===0)return!0;if(n===2){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),o=r.getQueryParameter(e,r.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(e,r.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(e){return new Promise(n=>{this.addItemToPoll(()=>e.isFencePassed(),()=>n())})}pollItems(){const e=VH(this.itemsToPoll.map(n=>n.isDoneFn));for(let n=0;n<=e;++n){const{resolveFn:r}=this.itemsToPoll[n];r()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,n){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:n}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in z().platform&&(r=z().platform.setTimeoutCustom.bind(z().platform)),Tx(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,r)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),vy(this.gl,e,this.framebuffer),this.debug&&rh(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(vy(this.gl,this.outputTexture,this.framebuffer),this.debug&&rh(this.gl)):gC(this.gl,this.framebuffer)}downloadMatrixDriver(e,n){this.bindTextureToFrameBuffer(e);const r=n();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(e,n,r){this.throwIfDisposed();const s=this.gl;vy(s,e,this.framebuffer),this.debug&&rh(s),this.outputTexture=e,ue(s,()=>s.viewport(0,0,n,r)),ue(s,()=>s.scissor(0,0,n,r))}setOutputMatrixWriteRegionDriver(e,n,r,s){this.throwIfDisposed(),ue(this.gl,()=>this.gl.scissor(e,n,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function VH(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function he(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&k(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}const WH=t=>{const{x:e}=t.inputs,n=t.backend;he(e,"abs");let r=new Float32Array(L(e.shape));const s=n.data.get(e.dataId).values;return r=$E(s),n.makeOutput(r,e.shape,e.dtype)},UH={kernelName:Dc,backendName:"cpu",kernelFunc:WH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mt(t){return(e,n,r,s,o)=>{const a=$e(e,n),i=a.length,u=fe(a),l=L(a),c=xt(o,l),d=e.length,p=n.length,h=fe(e),f=fe(n),m=$s(e,a),y=$s(n,a);if(m.length+y.length===0)for(let g=0;g<c.length;++g)c[g]=t(r[g%r.length],s[g%s.length]);else for(let g=0;g<c.length;++g){const x=Ca(g,i,u),w=x.slice(-d);m.forEach($=>w[$]=0);const v=Rr(w,d,h),b=x.slice(-p);y.forEach($=>b[$]=0);const S=Rr(b,p,f);c[g]=t(r[v],s[S])}return[c,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sn(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(i.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(s.shape,"float32",a)},i}const GH={kernelName:Hc,backendName:"cpu",kernelFunc:Sn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sf(t,e,n="float32"){if(n==="complex64"){const s=Sf(t,e,"float32"),o=Sf(t,e,"float32");return Sn({inputs:{real:s,imag:o},backend:t})}const r=Rt(L(e),n);return t.makeTensorInfo(e,n,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const HH={kernelName:du,backendName:"cpu",kernelFunc:ts};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ha(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const jH={kernelName:Vd,backendName:"cpu",kernelFunc:ha};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(t,e,n,r){if(r==="int32"){const s=Int32Array.from(t);return[e,"int32",s]}if(r==="bool"){const s=xo([0],n),[o,a]=mt((i,u)=>i!==u?1:0)(e,[],t,s,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function co(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return ts({inputs:{x:s},backend:n});const c=Sf(n,s.shape,s.dtype),d=co({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),p=Sn({inputs:{real:d,imag:c},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),p}if(s.dtype==="complex64"){const c=ha({inputs:{input:s},backend:n}),d=co({inputs:{x:c},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(c),d}if(!am(s.dtype,o)){const c=ts({inputs:{x:s},backend:n});return{dataId:c.dataId,shape:c.shape,dtype:o}}const a=n.data.get(s.dataId).values,[i,u,l]=kE(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,u,l)}const KH={kernelName:Yi,backendName:"cpu",kernelFunc:co};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kt(t,e,n,r){return n==null?({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;he([a,i],t);const l=u.data.get(a.dataId).values,c=u.data.get(i.dataId).values,d=a.dtype==="string"?Lr(l):l,p=a.dtype==="string"?Lr(c):c,h=r||a.dtype,[f,m]=e(a.shape,i.shape,d,p,h);return u.makeTensorInfo(m,h,f)}:({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const l=co({inputs:{x:a},backend:u,attrs:{dtype:"complex64"}}),c=u.data.get(l.dataId),d=c.complexTensorInfos.real,p=c.complexTensorInfos.imag,h=u.data.get(d.dataId).values,f=u.data.get(p.dataId).values,m=co({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),y=u.data.get(m.dataId),g=y.complexTensorInfos.real,x=y.complexTensorInfos.imag,w=u.data.get(g.dataId).values,v=u.data.get(x.dataId).values,[b,S,$]=n(a.shape,i.shape,h,f,w,v),N=u.makeTensorInfo($,"float32",b),E=u.makeTensorInfo($,"float32",S),R=Sn({inputs:{real:N,imag:E},backend:u});return u.disposeIntermediateTensorInfo(l),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(N),u.disposeIntermediateTensorInfo(E),R}else{const l=u.data.get(a.dataId).values,c=u.data.get(i.dataId).values,d=r||a.dtype,[p,h]=e(a.shape,i.shape,l,c,d);return u.makeTensorInfo(h,d,p)}}}function Uw(t){return(e,n,r,s,o,a)=>{const i=$e(e,n),u=L(i),l=i.length,c=fe(i),d=xt("float32",u),p=xt("float32",u),h=$s(e,i),f=$s(n,i),m=Fr(r,s),y=Fr(o,a),g=e.length,x=fe(e),w=n.length,v=fe(n);if(h.length+f.length===0)for(let b=0;b<d.length;b++){const S=b%m.length,$=b%y.length,N=t(m[S*2],m[S*2+1],y[$*2],y[$*2+1]);d[b]=N.real,p[b]=N.imag}else for(let b=0;b<d.length;b++){const S=Ca(b,l,c),$=S.slice(-g);h.forEach(B=>$[B]=0);const N=Rr($,g,x),E=S.slice(-w);f.forEach(B=>E[B]=0);const R=Rr(E,w,v),F=t(m[N*2],m[N*2+1],y[R*2],y[R*2+1]);d[b]=F.real,p[b]=F.imag}return[d,p,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IE=mt((t,e)=>t+e),qH=Uw((t,e,n,r)=>({real:t+n,imag:e+r})),Ai=kt(Sa,IE,qH),XH={kernelName:Sa,backendName:"cpu",kernelFunc:Ai};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(t,e,n,r,s){const o=L(r),a=Rt(s,n);for(let i=0;i<t.length;i++){const u=t[i];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(o>0?a[u]+=e[i]:a[u]+=1)}return a}function NE(t,e,n,r=!1){const s=t.shape[0],o=t.shape[1],a=be([s,n],e.dtype);for(let i=0;i<s;i++)for(let u=0;u<o;u++){const l=t.get(i,u);if(l<0)throw new Error("Input x must be non-negative!");l>=n||(r?a.set(1,i,l):e.size>0?a.set(a.get(i,l)+e.get(i,u),i,l):a.set(a.get(i,l)+1,i,l))}return a}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TE=mt((t,e)=>t&e),YH=kt(Uc,TE),QH={kernelName:Uc,backendName:"cpu",kernelFunc:YH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rs(t){return(e,n,r)=>{const s=it(n,e.length);for(let o=0;o<e.length;++o)s[o]=t(e[o],r);return s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(t,e,n){const r=rs(e);return So(t,r,n)}function So(t,e,n){return({inputs:r,attrs:s,backend:o})=>{const{x:a}=r;he(a,t);const i=o,u=i.data.get(a.dataId).values;let l;if(a.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");l=Lr(u)}else l=u;const c=n||a.dtype,d=e(l,c,s);return i.makeTensorInfo(a.shape,c,d)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EE=rs(t=>Math.ceil(t)),ZH=So(Qi,EE),JH={kernelName:Qi,backendName:"cpu",kernelFunc:ZH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(t,e,n,r){const s=it(n,L(e));if(r&&n!=="string"){let o=0;t.forEach(a=>{const i=L(a.shape);s.set(a.vals,o),o+=i})}else{let o=0;t.forEach(a=>{const i=n==="string"?Lr(a.vals):a.vals;let u=0;for(let l=0;l<a.shape[0];++l){const c=l*e[1]+o;for(let d=0;d<a.shape[1];++d)s[c+d]=i[u++]}o+=a.shape[1]})}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _E=mt((t,e)=>t===e?1:0),DE=kt(su,_E,null,"bool"),e6={kernelName:su,backendName:"cpu",kernelFunc:DE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PE=rs(t=>Math.exp(t)),AE=So(ou,PE,"float32"),t6={kernelName:ou,backendName:"cpu",kernelFunc:AE};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OE=rs(t=>Math.expm1(t)),n6=So(au,OE),r6={kernelName:au,backendName:"cpu",kernelFunc:n6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FE=rs(t=>Math.floor(t)),s6=So(iu,FE),o6={kernelName:iu,backendName:"cpu",kernelFunc:s6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LE=mt((t,e)=>Math.floor(t/e)),a6=kt(uu,LE,null,"int32"),i6={kernelName:uu,backendName:"cpu",kernelFunc:a6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(t,e,n,r,s,o,a,i,u){const l=be([r,o],n);for(let c=0;c<r;c++){const d=[];let p=0;for(let h=0;h<s;h++){const f=t[c*s+h];p+=f*a[h],d.push(f)}if(p<0||p>=u/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let h=0;h<o;h++)l.values[c*o+h]=e.get(...e.indexToLoc(p*o+h))}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(t,e,n){const r=be(n,t.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),i=a[0],u=a[2],l=e.locToIndex([i,u]);a[2]=e.values[l];const c=t.locToIndex(a);0<=c&&c<t.values.length&&(r.values[s]=t.values[c])}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ME=mt((t,e)=>t>e?1:0),u6=kt(lu,ME,null,"bool"),l6={kernelName:lu,backendName:"cpu",kernelFunc:u6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VE=mt((t,e)=>t>=e?1:0),c6=kt(cu,VE,null,"bool"),d6={kernelName:cu,backendName:"cpu",kernelFunc:c6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WE=mt((t,e)=>t<e?1:0),p6=kt(mu,WE,null,"bool"),h6={kernelName:mu,backendName:"cpu",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UE=mt((t,e)=>t<=e?1:0),f6=kt(gu,UE,null,"bool"),m6={kernelName:gu,backendName:"cpu",kernelFunc:f6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(t,e,n){const r=(e-t)/(n-1),s=Rt(n,"float32");s[0]=t;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HE=rs(t=>Math.log(t)),g6=So(yu,HE),y6={kernelName:yu,backendName:"cpu",kernelFunc:g6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(t,e,n,r){const s=xt(r,L(n));for(let o=0;o<s.length;++o){const a=o*e;let i=t[a];for(let u=0;u<e;++u){const l=t[a+u];(Number.isNaN(l)||l>i)&&(i=l)}s[o]=i}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KE=mt((t,e)=>Math.max(t,e)),x6=kt(Cu,KE),w6={kernelName:Cu,backendName:"cpu",kernelFunc:x6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qE=mt((t,e)=>Math.min(t,e)),v6=kt(Su,qE),b6={kernelName:Su,backendName:"cpu",kernelFunc:v6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hw=mt((t,e)=>t*e),C6=Uw((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n})),yg=kt(ku,Hw,C6),S6={kernelName:ku,backendName:"cpu",kernelFunc:yg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(t,e,n){const r=Es(-1,n);return Hw([],e,r,t,n)}function $6(t){const{inputs:e,backend:n}=t,{x:r}=e;he(r,"neg");const s=n.data.get(r.dataId).values,[o,a]=XE(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,o)}const k6={kernelName:_d,backendName:"cpu",kernelFunc:$6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YE=mt((t,e)=>t!==e?1:0),I6=kt(Iu,YE,null,"bool"),N6={kernelName:Iu,backendName:"cpu",kernelFunc:I6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jw(t,e,n,r,s){const o=e.length,a=L(e),i=fe(e),u=fe(s),l=xt(n,L(s));for(let c=0;c<a;++c){const d=Ca(c,o,i),p=new Array(d.length);for(let f=0;f<p.length;f++)p[f]=d[r[f]];const h=Rr(p,o,u);l[h]=t[c]}return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pn(t){const{inputs:e,attrs:n,backend:r}=t,{x:s}=e,{perm:o}=n;he(s,"transpose");const a=s.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=s.shape[o[d]];const u=r.data.get(s.dataId).values,l=jw(u,s.shape,s.dtype,o,i);return{dataId:r.write(l,i,s.dtype),shape:i,dtype:s.dtype}}const T6={kernelName:Qo,backendName:"cpu",kernelFunc:pn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(t,e,n,r){const[s,o]=wt(t,r),a=$t(e,"int32"),i=Rt(L(s),a),u=L(o);for(let l=0;l<i.length;++l){const c=l*u;let d=1;for(let p=0;p<u;++p)d*=n[c+p];i[l]=d}return{outVals:i,outShape:s,outDtype:a}}function E6(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;he(s,"prod");const i=s.shape.length,u=Ie(o,s.shape),l=Ye(u,i);let c=u,d=s;const p=[];l!=null&&(d=pn({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(d),c=Qe(c.length,i));const h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:y}=QE(d.shape,d.dtype,h,c);let g=m;return a&&(g=vt(m,u)),p.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.makeTensorInfo(g,y,f)}const R6={kernelName:Bd,backendName:"cpu",kernelFunc:E6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(t,e,n){t.forEach((r,s)=>{if(r<0||r>=n){const o=Ca(s,e.length,fe(e)).join(",");throw new Error(`indices[${o}] = ${r} is not in [0, ${n})`)}})}function D6(t,e){for(let n=0;n<t.length;++n){const r=t[n],s=n===t.length-1?e:t[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let o=1;o<r.length;++o)if(r[o-1]>r[o])throw new Error("Ragged splits must be sorted in ascending order")}}function P6(t,e,n,r){const s=[];let o=0;const a=e.length-1+n.length,i=new Array(a).fill(null).map(()=>[0]);D6(n,r);let u=1;for(let l=0;l<e.length-1;++l){u*=e[l];const c=e[l+1];for(let d=1;d<u+1;++d)i[l].push(d*c)}for(let l=0;l<t.length;++l){let c=t[l],d=t[l]+1;for(let p=0;p<n.length;++p){const h=n[p],f=p+e.length-1;if(f>=0){const m=i[f],y=m[m.length-1]-h[c];for(let g=c;g<d;++g)i[f].push(h[g+1]+y)}c=h[c],d=h[d]}d!==c&&(s.push([c,d]),o+=d-c)}return{outSplits:i,valueSlices:s,numValues:o}}function A6(t){const e=[];for(let n=0;n<t.length;++n){const r=t[n].length,s=it("int32",r);e.push(s),t[n].forEach((o,a)=>s[a]=o)}return e}function vC(t,e){const n=t.slice(0,e);for(;n.length<e;)n.push(1);for(let r=e;r<t.length;r++)n[e-1]*=t[r];return n}function O6(t,e,n,r,s,o){const a=vC(e,2)[1],i=vC(o,2)[1];let u=0;for(const l of n)for(let c=l[0];c<l[1];++c){for(let d=0;d<r;++d)s[u*i+d]=t[c*a+d];++u}}function F6(t,e,n,r,s){const o=e.slice();o[0]=s;const a=it(n,L(o)),i=t.length,u=i===0?0:i/e[0];return O6(t,e,r,u,a,o),[a,o]}function ZE(t,e,n,r,s,o,a,i){if(t.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const u=e[0][0]-1;if(_6(o,a,u),r.length===0)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:d,numValues:p}=P6(o,a,t,l),h=A6(c),f=F6(n,r,s,d,p);return[h,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bC=2147483647;function JE(t,e,n,r,s,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,u=s.length===0,l=a.length===0,c=[];i||c.push(e[0]),u||c.push(s[0]),l||c.push(a[0]);for(let y=1;y<c.length;++y)if(c[y]!==c[y-1])throw new Error("starts, limits, and deltas must have the same shape");const d=c.length===0?1:c[0],p=it("int32",d+1);p[0]=0;for(let y=0;y<d;++y){const g=i?t[0]:t[y],x=u?r[0]:r[y],w=l?o[0]:o[y];if(w===0)throw new Error("Requires delta != 0");let v;if(w>0&&x<g||w<0&&x>g)v=0;else if(v=Math.ceil(Math.abs((x-g)/w)),v>bC)throw new Error(`Requires ((limit - start) / delta) <= ${bC}`);p[y+1]=p[y]+v}const h=p[d],f=it(n,h);let m=0;for(let y=0;y<d;++y){const g=p[y+1]-p[y];let x=i?t[0]:t[y];const w=l?o[0]:o[y];for(let v=0;v<g;++v)f[m++]=x,x+=w}return[p,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var er=$r;class $f{constructor(e,n,r,s,o,a,i,u,l,c){this.shape=e,this.shapeShape=n,this.values=r,this.valuesShape=s,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=VT(c),this.raggedRank=WT(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===er.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===er.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const n=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case er.VALUE_ROWIDS:return $f.getMaxWidthValueRowID(n);case er.ROW_SPLITS:return $f.getMaxWidthRowSplit(n);default:throw new Error(`Cannot handle partition type ${er[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const n=e.length;if(n===0||n===1)return 0;let r=0;for(let s=0;s<n-1;++s){const o=e[s+1]-e[s];o>r&&(r=o)}return r}static getMaxWidthValueRowID(e){const n=e.length;if(n===0)return 0;let r=0,s=e[0],o=0;for(let a=1;a<n;++a){const i=e[a];i!==s&&(s=i,o=Math.max(a-r,o),r=a)}return Math.max(n-r,o)}tensorShapeFromTensor(e,n,r=!0){if(n.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return SC(e,r)}calculateOutputSize(e){const n=this.valuesShape,r=this.defaultValueShape;UT(r,n);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=MT(this.raggedRank,s,n);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,n,r){const s=Math.min(e,r),o=[];let a=0;for(let i=0;i<s;++i,a+=n)o.push(a);for(let i=s;i<e;++i)o.push(-1);return k(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,n,r,s){const o=e.length,a=[];for(let i=0;i<o-1;++i){const u=e[i+1]-e[i];let l=Math.min(s,u),c=n[i];c===-1&&(l=0);for(let d=0;d<l;++d)a.push(c),c+=r;for(let d=0;d<u-l;++d)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,n,r,s){const o=e.length,a=[];if(o===0)return[];let i=0,u=e[0];if(u>=n.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${n.length}`);let l=n[u];a.push(l);for(let c=1;c<o;++c){const d=e[c];if(d===u)l>=0&&(++i,i<s?l+=r:l=-1);else{if(i=0,u=d,d>=n.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${n.length}`);l=n[d]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,n,r,s){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case er.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,n,r,s);case er.ROW_SPLITS:if(o.length-1>n.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${n.length}`);return this.calculateOutputIndexRowSplit(o,n,r,s);default:throw new Error(`Unsupported partition type: ${er[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const n=this.rowPartitionTypes[0];switch(n){case er.FIRST_DIM_SIZE:return e[0];case er.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case er.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${er[n]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const n=this.getFirstDimensionSize(),r=this.calculateOutputSize(n),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let u=s.length-2;u>=0;--u)s[u]=s[u+1]*r[u+1];const o=SC(r,!1),a=it(this.valuesDType,L(o));if(s[0]*r[0]>0){let u=this.calculateFirstParentOutputIndex(n,s[0],r[0]);for(let l=1;l<=this.raggedRank;++l)u=this.calculateOutputIndex(l-1,u,s[l],r[l]);this.setOutput(this.raggedRank,u,a,o)}return[o,a]}setOutput(e,n,r,s){if(r.length===0)return;const o=this.values,a=r;let i=s.slice();i=i.slice(e+1);const u=L(i),l=n.length;let c=this.defaultValue;if(c.length!==u&&c.length!==1){const f=this.defaultValueShape;Le(()=>{const m=Y(c,f);c=di(m,i).dataSync()})}let d=0,p=0,h=0;for(let f=0;f<=l;++f){let m=f<l?n[f]:-1;if(m===h){++h;continue}if(p<h){const y=o.subarray(d*u),g=a.subarray(p*u),x=(h-p)*u;CC(g,y,x)}if(f>=l){const y=r.length;m=Math.floor(y/u)}if(m>h)if(this.defaultValue.length===1)a.subarray(h*u,m*u).fill(this.defaultValue[0]),h=m;else for(;m>h;){const y=a.slice(h*u);CC(y,c,u),++h}m<0?(d=f+1,p=h):(d=f,p=h,h=p+1)}}}function CC(t,e,n){for(let r=0;r<n;r++)t[r]=e[r]}function SC(t,e){const n=[];for(let r of t){if(r<0){if(!e)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function eR(t,e,n,r,s,o,a,i,u,l){return new $f(t,e,n,r,s,o,a,i,u,l).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(t,e,n,r){const s=t===e,o=t<e&&n<0,a=e<t&&n>1;if(s||o||a)return Rt(0,r);const i=Math.abs(Math.ceil((e-t)/n)),u=Rt(i,r);e<t&&n===1&&(n=-1),u[0]=t;for(let l=1;l<u.length;l++)u[l]=u[l-1]+n;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR=rs(t=>1/Math.sqrt(t)),L6=So(Du,nR),z6={kernelName:Du,backendName:"cpu",kernelFunc:L6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(t,e,n,r,s,o,a,i,u,l){const c=[r/s,s],d=t.values,p=e.values;if(r===0)return be(n,e.dtype);const h=u instanceof yt?u:be(c,e.dtype);typeof u=="string"||typeof u=="number"?h.values.fill(u):typeof u=="boolean"&&h.values.fill(+u);for(let f=0;f<o;f++){const m=[];let y=0;for(let g=0;g<a;g++){const x=d[f*a+g];m.push(x),y+=x*i[g]}if(y<0||y>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${n}`);for(let g=0;g<s;g++)l?h.values[y*s+g]+=p[f*s+g]:h.values[y*s+g]=e.rank===0?p[0]:p[f*s+g]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6=rs(t=>1/(1+Math.exp(-t))),rR=Me(Lu,t=>1/(1+Math.exp(-t))),M6={kernelName:Lu,backendName:"cpu",kernelFunc:rR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(t,e,n,r,s){const o=_w(r,e,n),a=L(n),i=fe(r);if(o){const d=Dw(e,i);return s==="string"?t.slice(d,d+a):t.subarray(d,d+a)}const u=s==="string"?Lr(t):t,l=be(r,s,u),c=be(n,s);for(let d=0;d<c.size;++d){const p=c.indexToLoc(d),h=p.map((f,m)=>f+e[m]);c.set(l.get(...h),...p)}return s==="string"?uE(c.values):c.values}function fa(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r;he(s,"slice");const[i,u]=qm(s,o,a);jm(s,i,u);const l=n.data.get(s.dataId).values,c=sR(l,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,c)}const V6={kernelName:Yd,backendName:"cpu",kernelFunc:fa};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oR(t,e,n,r,s,o,a){const i=e[0],u=o[0],l=new Array(u),c=new Array(i),d=e[1];if(u===0){if(i!==0)throw new Error(YT(i));const y=it(n,0),g=it(s,0);return[y,[0,d],g,l,c]}let p=!0,h=0;const f=new Array(u).fill(0);for(let y=0;y<i;++y){const g=t[y*d];if(g<0)throw new Error(QT(y,g));if(g>=u)throw new Error(ZT(y,g,u));++f[g],p=p&&g>=h,h=g}let m=!0;for(let y=0;y<u;++y){const g=f[y]===0;l[y]=g,m=m&&!g,f[y]=Math.max(f[y],1),y>0&&(f[y]+=f[y-1])}if(m&&p){const y=t,g=r;for(let x=0;x<i;++x)c[x]=x;return[y,[i,d],g,l,c]}else{const y=f[u-1],g=it(n,y*d),x=it(s,y),w=new Array(u).fill(0);for(let v=0;v<i;++v){const b=t[v*d],S=w[b],$=(b===0?0:f[b-1])+S;w[b]++;for(let N=0;N<d;++N)g[$*d+N]=t[v*d+N];x[$]=r[v],c[v]=$}for(let v=0;v<u;++v)if(w[v]===0){const S=v===0?0:f[v-1];g[S*d+0]=v;for(let $=1;$<d;++$)g[S*d+$]=0;x[S]=a}return[g,[y,d],x,l,c]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(t,e,n,r,s){const o=L(r),a=e[0],i=s.length,u=[];let l=1,c=-1;for(let y=0;y<i;++y){const g=s[y];if(g===-1){if(c!==-1)throw new Error(JT(c,y));c=y,u.push(1)}else{if(g<0)throw new Error(eE(y,g));l*=g,u.push(g)}}if(c!==-1){if(l<=0)throw new Error(tE());const y=Math.trunc(o/l);if(l*y!==o)throw new Error(nE(r,u));u[c]=y}if(L(u)!==o)throw new Error(rE(r,u));const p=r.length,h=[];if(p>0){h[p-1]=1;for(let y=p-2;y>=0;--y)h[y]=h[y+1]*r[y+1]}const f=[];if(i>0){f[i-1]=1;for(let y=i-2;y>=0;--y)f[y]=f[y+1]*u[y+1]}const m=it(n,a*i);for(let y=0;y<a;++y){let g=0;for(let x=0;x<p;++x)g+=t[y*p+x]*h[x];for(let x=0;x<i;++x)m[y*i+x]=Math.trunc(g/f[x]),g%=f[x]}return[m,[a,i],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kw(t,e,n,r,s,o=!1,a=0){const i=r.length,u=[e[0],t.length/e[0]],l=u[1],d=i>0?s[i-1]+1:0;if(d<0)throw new Error(Kx());const p=e.slice();p[0]=d;const h=p.reduce((w,v)=>w*v,1),f=it(n,h);if(i===0)return d>0&&f.fill(a),[f,p];if(d<=0)throw new Error(Kx());let m=0,y=1,g=0,x=s[m];for(;;){let w=0;if(y<i){if(w=s[y],x===w){++y;continue}if(x>=w)throw new Error(sE())}if(x<0||x>=d)throw new Error(oE(x,d));x>g&&f.fill(a,g*l,x*l);for(let v=m;v<y;++v){const b=r[v];if(b<0||b>=u[0])throw new Error(aE(v,r[v],u[0]));for(let S=0;S<l;S++)f[x*l+S]+=t[b*l+S]}if(o)for(let v=0;v<l;v++)f[x*l+v]/=y-m;if(m=y,++y,g=x+1,x=w,y>i)break}return g<d&&f.fill(a,g*l,d*l),[f,p]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6=rs(t=>Math.sqrt(t)),U6=Me(Bu,t=>Math.sqrt(t)),G6={kernelName:Bu,backendName:"cpu",kernelFunc:U6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iR=mt((t,e)=>{const n=t-e;return n*n}),H6=kt(Mu,iR),j6={kernelName:Mu,backendName:"cpu",kernelFunc:H6};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uR=rs((t,e)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=e;return t.replace(new RegExp(n,r?"g":""),s)}),K6=So(sp,uR),q6={kernelName:sp,backendName:"cpu",kernelFunc:K6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(t,e,n,r){const s=be(t,e.dtype);for(let o=0;o<s.size;o++){const a=s.indexToLoc(o),i=new Array(a.length);for(let u=0;u<i.length;u++)i[u]=a[u]*n[u]+r[u];s.set(e.get(...i),...a)}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X6{constructor(e,n,r,s,o,a){this.separator=_r(e),this.nGramWidths=n,this.leftPad=_r(r),this.rightPad=_r(s),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,n){const r=this.getPadWidth(n);return Math.max(0,e+2*r-n+1)}createNGrams(e,n,r,s,o,a){for(let i=0;i<o;++i){const u=this.getPadWidth(a),l=Math.max(0,u-i),c=Math.max(0,u-(o-(i+1))),d=a-(l+c),p=n+(l>0?0:i-u);let h=0;h+=l*this.leftPad.length;for(let x=0;x<d;++x)h+=e[p+x].length;h+=c*this.rightPad.length,h+=(l+c+d-1)*this.separator.length,r[s+i]=new Uint8Array(h);const m=r[s+i];let y=0;const g=x=>x.forEach(w=>m[y++]=w);for(let x=0;x<l;++x)g(this.leftPad),g(this.separator);for(let x=0;x<d-1;++x)g(e[p+x]),g(this.separator);if(d>0){g(e[p+d-1]);for(let x=0;x<c;++x)g(this.separator),g(this.rightPad)}else{for(let x=0;x<c-1;++x)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,n){const r=e.length,s=n.length;if(s>0){let u=n[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let l=1;l<s;++l){let c=n[l]>=u;if(c=c&&n[l]<=r,!c)throw new Error(`Invalid split value ${n[l]}, must be in [${u}, ${r}]`);u=n[l]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const o=s-1,a=it("int32",s);if(r===0||s===0){const u=new Array(r);for(let l=0;l<=o;++l)a[l]=0;return[u,a]}a[0]=0;for(let u=1;u<=o;++u){const l=n[u]-n[u-1];let c=0;this.nGramWidths.forEach(d=>{c+=this.getNumNGrams(l,d)}),this.preserveShort&&l>0&&c===0&&(c=1),a[u]=a[u-1]+c}const i=new Array(a[o]);for(let u=0;u<o;++u){const l=n[u];let c=a[u];if(this.nGramWidths.forEach(d=>{const p=n[u+1]-n[u],h=this.getNumNGrams(p,d);this.createNGrams(e,l,i,c,h,d),c+=h}),this.preserveShort&&c===a[u]){const d=n[u+1]-n[u];if(d===0)continue;const p=d+2*this.padWidth,h=1;this.createNGrams(e,l,i,c,h,p)}}return[i,a]}}function cR(t,e,n,r,s,o,a,i){return new X6(n,r,s,o,a,i).compute(t,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y6(t,e,n,r){if(!t.length)return;if(e.length===0){for(let o=0;o<t.length;++o)r.push(t.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=t.indexOf(o);for(;a!==-1;){const i=t.subarray(0,a);(!n||i.length!==0)&&r.push(i),t=t.subarray(a+1),a=t.indexOf(o)}(!n||t.length!==0)&&r.push(t);return}let s=0;for(let o=0;o<t.length+1;o++)if(o===t.length||e.indexOf(t[o])!==-1){const a=t.subarray(s,o);(!n||a.length!==0)&&r.push(a),s=o+1}}function dR(t,e,n){const r=t.length,s=[];let o=0,a=0;const i=new Array(r);for(let p=0;p<r;++p){const h=s.length;Y6(t[p],e,n,s);const f=s.length-h;i[p]=f,o+=f,a=Math.max(a,f)}const u=it("int32",o*2),l=new Array(o),c=[r,a];let d=0;for(let p=0;p<r;++p)for(let h=0;h<i[p];++h)u[d*2]=p,u[d*2+1]=h,l[d]=s[d],++d;return[u,l,c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(t,e){const n=it("int32",t.length);for(let r=0;r<t.length;++r)n[r]=Ik(t[r]).modulo(e).getLowBitsUnsigned();return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hR=mt((t,e)=>t-e),Q6=Uw((t,e,n,r)=>({real:t-n,imag:e-r})),qw=kt(Vu,hR,Q6),Z6={kernelName:Vu,backendName:"cpu",kernelFunc:qw};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(t,e){const n=new Array(t.rank);for(let s=0;s<n.length;s++)n[s]=t.shape[s]*e[s];const r=be(n,t.dtype);for(let s=0;s<r.values.length;++s){const o=r.indexToLoc(s),a=new Array(t.rank);for(let u=0;u<a.length;u++)a[u]=o[u]%t.shape[u];const i=t.locToIndex(a);r.values[s]=t.values[i]}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bl=(t,e)=>{const n=e.value-t.value;return n===0?t.index-e.index:n};function mR(t,e,n=0,r=t.length-1){for(;r>n;){if(r-n>600){const i=r-n+1,u=e-n+1,l=Math.log(i),c=.5*Math.exp(2*l/3),d=.5*Math.sqrt(l*c*(i-c)/i)*Math.sign(u-i/2),p=Math.max(n,Math.floor(e-u*c/i+d)),h=Math.min(r,Math.floor(e+(i-u)*c/i+d));mR(t,e,p,h)}const s=t[e];let o=n,a=r;for(ds(t,n,e),bl(t[r],s)>0&&ds(t,n,r);o<a;){for(ds(t,o,a),o++,a--;bl(t[o],s)<0;)o=o+1;for(;bl(t[a],s)>0;)a=a-1}bl(t[n],s)===0?ds(t,n,a):(a=a+1,ds(t,a,r)),a<=e&&(n=a+1),e<=a&&(r=a-1)}}function gR(t,e,n,r,s){const o=e[e.length-1],[a,i]=[t.length/o,o],u=xt(n,a*r),l=xt("int32",a*r);for(let d=0;d<a;d++){const p=d*i,h=t.subarray(p,p+i);let f=new Array(h.length);h.forEach((x,w)=>f[w]={value:x,index:w}),r<f.length&&(mR(f,r),f=f.slice(0,r)),s&&f.sort(bl);const m=d*r,y=u.subarray(m,m+r),g=l.subarray(m,m+r);for(let x=0;x<r;x++)y[x]=f[x].value,g[x]=f[x].index}const c=e.slice();return c[c.length-1]=r,[be(c,n,u),be(c,"int32",l)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yR(t,e,n,r){const s=Ie(e,n)[0],o=[1,n[0],1];for(let f=0;f<s;f++)o[0]*=n[f];o[1]=n[s];for(let f=s+1;f<n.length;f++)o[2]*=n[f];const a=new Map,i=new Int32Array(n[s]),u=new yt(o,r,t),l=[],c=o[0]===1&&o[2]===1;for(let f=0;f<n[s];f++){let m;if(c)m=t[f].toString();else{const g=[];for(let x=0;x<o[0];x++)for(let w=0;w<o[2];w++)g.push(u.get(x,f,w));m=g.join(",")}const y=a.get(m);if(y!=null)i[f]=y;else{const g=a.size;a.set(m,g),i[f]=g,l.push(f)}}const d=o.slice();d[1]=a.size;const p=new yt(d,r);l.forEach((f,m)=>{for(let y=0;y<o[0];y++)for(let g=0;g<o[2];g++)p.set(u.get(y,f,g),y,m,g)});const h=n.slice();return h[s]=d[1],{outputValues:p.values,outputShape:h,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xR=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:$E,addImpl:IE,bincountImpl:Gw,bincountReduceImpl:NE,bitwiseAndImpl:TE,castImpl:kE,ceilImpl:EE,concatImpl:RE,equalImpl:_E,expImpl:PE,expm1Impl:OE,floorImpl:FE,floorDivImpl:LE,gatherNdImpl:zE,gatherV2Impl:BE,greaterImpl:ME,greaterEqualImpl:VE,lessImpl:WE,lessEqualImpl:UE,linSpaceImpl:GE,logImpl:HE,maxImpl:jE,maximumImpl:KE,minimumImpl:qE,multiplyImpl:Hw,negImpl:XE,notEqualImpl:YE,prodImpl:QE,raggedGatherImpl:ZE,raggedRangeImpl:JE,raggedTensorToTensorImpl:eR,rangeImpl:tR,rsqrtImpl:nR,scatterImpl:Ho,sigmoidImpl:B6,sliceImpl:sR,sparseFillEmptyRowsImpl:oR,sparseReshapeImpl:aR,sparseSegmentReductionImpl:Kw,sqrtImpl:W6,squaredDifferenceImpl:iR,staticRegexReplaceImpl:uR,stridedSliceImpl:lR,stringNGramsImpl:cR,stringSplitImpl:dR,stringToHashBucketFastImpl:pR,subImpl:hR,tileImpl:fR,topKImpl:gR,transposeImpl:jw,uniqueImpl:yR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:J6,bincountImpl:wR,bincountReduceImpl:ej,bitwiseAndImpl:tj,castImpl:nj,ceilImpl:rj,concatImpl:sj,equalImpl:oj,expImpl:aj,expm1Impl:ij,floorImpl:uj,gatherNdImpl:lj,gatherV2Impl:cj,greaterImpl:dj,greaterEqualImpl:pj,lessImpl:hj,lessEqualImpl:fj,linSpaceImpl:mj,logImpl:gj,maxImpl:yj,maximumImpl:xj,minimumImpl:wj,multiplyImpl:vj,negImpl:bj,notEqualImpl:Cj,prodImpl:Sj,raggedGatherImpl:$j,raggedRangeImpl:kj,raggedTensorToTensorImpl:Ij,rangeImpl:Nj,rsqrtImpl:Tj,scatterImpl:Ej,sigmoidImpl:Rj,simpleAbsImpl:vR,sliceImpl:_j,sparseFillEmptyRowsImpl:Dj,sparseReshapeImpl:Pj,sparseSegmentReductionImpl:bR,sqrtImpl:Aj,staticRegexReplaceImpl:Oj,stridedSliceImpl:Fj,stringNGramsImpl:Lj,stringSplitImpl:zj,stringToHashBucketFastImpl:Bj,subImpl:Mj,tileImpl:Vj,topKImpl:Wj,transposeImpl:Xw,uniqueImpl:Uj}=xR;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CR(t,e){return["x","y","z","w","u","v"].slice(0,e).map(n=>`${t}.${n}`)}function en(t,e){return e===1?[t]:CR(t,e)}function Gj(t,e){if(t===1)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hj{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Kt(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const n=en("rc",this.rank),r=We(this.rank),s=this.getOutOfBoundsCondition(n),o=this.getSetup(n),a=this.getOutput(n);this.userCode=`
        void main() {
          ${r} rc = getOutputCoords();

          if(${s}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let o=`${r===0?"r":"rp1"}, ${s===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;n.push(o)}return n}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let n="";for(let r=this.rank-2;r<this.rank;r++)n+=`${e[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(n+="||");return n}getSetup(e){if(this.rank===1)return"";const n=e.slice(-2),r=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${n[0]};
      int c = ${n[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${r};
      bool rEdge = rp1 >= ${s};
    `}getOutput(e){const n=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${n[0]}),
            cEdge ? 0. : getA(${n[1]}),
            rEdge ? 0. : getA(${n[2]}),
            rEdge || cEdge ? 0. : getA(${n[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SR{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length);let r="";for(let s=0;s<4;s++){let o="thisRC = rc;";s%2===1&&(o+="thisRC.z += 1;"),s>1&&(o+="thisRC.y += 1;"),r+=`
        ${o}
        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${s}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${s>0?"}":""}
      `}this.userCode=`
      ${jj(n,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Vw():Mw(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${r}

        setOutput(result);
      }
    `}}function jj(t,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?PG(["r","c","d"],"inputShape"):Ra(["r","c","d"],t)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kj{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,n,r){const s=kC(n,r),o=IC(e,s,r);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=$C(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const u=this.freeTextures[o].pop();return this.usedTextures[o].push(u),u}let i;return s===Ft.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===Ft.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===Ft.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===Ft.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===Ft.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,n,r,s){if(this.freeTextures==null)return;const o=kC(r,s),a=IC(n,o,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=$C(n,o,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=z().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],c=l&&l.indexOf(e);if(c==null||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const n=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*n)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(n=>{this.gpgpu.deleteMatrixTexture(n.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function qj(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;if(e===n.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function $C(t,e,n,r,s){const o=Xj(e,r);let a;if(s){const[u,l]=Xu(t[0],t[1]);a=u*l}else{const[u,l]=Ip(t[0],t[1]);a=u*l}const i=qj(n,o);return a*i}function Xj(t,e){switch(t){case Ft.PACKED_2X2_FLOAT32:return CE(e);case Ft.PACKED_2X2_FLOAT16:return SE(e);case Ft.UNPACKED_FLOAT32:return wE(e);case Ft.UNPACKED_FLOAT16:return vE(e);case Ft.PACKED_4X1_UNSIGNED_BYTE:return bE(e);default:throw new Error(`Unknown physical texture type ${t}`)}}function Yj(t){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?Ft.PACKED_2X2_FLOAT32:Ft.UNPACKED_FLOAT32:t?Ft.PACKED_2X2_FLOAT16:Ft.UNPACKED_FLOAT16}function kC(t,e){if(t===Vn.UPLOAD)return Ft.PACKED_2X2_FLOAT32;if(t===Vn.RENDER||t==null)return Yj(e);if(t===Vn.DOWNLOAD||t===Vn.PIXELS)return Ft.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function IC(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qr{constructor(e,n){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${n}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const yr="if (isnan(x)) return x;",Qj="return x;",NC="return abs(x);",Zj="return (x >= 0.0) ? x : (exp(x) - 1.0);",Jj=yr+`
  return (x < 0.0) ? 0.0 : x;
`,e5=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Fs="return x;",t5="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n5="return x;",r5=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,s5=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,o5=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,a5="return 1.0 / (1.0 + exp(-1.0 * x));";class Hs{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${n}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i5{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length);const n=e.length,r=en("rc",n),s=We(n),o=Gj(n,r),a=r.slice(-2),i=n<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${s} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u5=zm,l5=1e-7,c5=1e-4,ah={};function d5(t){return t in ah||(ah[t]={}),ah[t]}const p5=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),h5=600;function f5(){return z().global.screen==null?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*h5/1024/1024}class xg extends _c{nextDataId(){return xg.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let n;if(e!=null){if(e instanceof Sy)n=e;else{const r=zr(z().getNumber("WEBGL_VERSION"),e);n=new Sy(r)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const r=zr(z().getNumber("WEBGL_VERSION"));n=new Sy(r),this.binaryCache=d5(z().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=n,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Kj(this.gpgpu),this.numMBBeforeWarning=f5(),this.texData=new rm(this,wn())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,n,r,s,o,a){const i=this.makeTensorInfo(n,r),u=this.texData.get(i.dataId);u.isPacked=!1,u.texture={texture:e,texShape:[s,o]},u.texShape=[s,o];const l=sh(n),c=new wC(l,!1,a),d=this.runWebGLProgram(c,[i],r,[[s,o]]);return d.shape=n,u.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,n,r){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:n,dtype:r,values:e,usage:Vn.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const n=this.texData.get(e);n.refCount++}decRef(e){if(this.texData.has(e)){const n=this.texData.get(e);n.refCount--}}move(e,n,r,s,o){if(z().getBool("DEBUG")&&this.checkNumericalProblems(n),s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:r,dtype:s,values:n,usage:Vn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const n=this.texData.get(e),{values:r,dtype:s,complexTensorInfos:o,slice:a,shape:i,isPacked:u}=n;if(a!=null){let p;u?p=new Hs(i,Fs):p=new qr(i,Fs);const h=this.runWebGLProgram(p,[{dataId:e,shape:i,dtype:s}],s),f=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),f}if(r!=null)return this.convertAndCacheOnCPU(e);if(s==="string")return r;const l=this.activeTimers!=null;let c;l&&(c=bn());let d;if(s==="complex64"){const p=this.readSync(o.real.dataId),h=this.readSync(o.imag.dataId);d=Fr(p,h)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=bn()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const n=this.texData.get(e),{values:r,shape:s,slice:o,dtype:a,complexTensorInfos:i,isPacked:u}=n;if(o!=null){let f;u?f=new Hs(s,Fs):f=new qr(s,Fs);const m=this.runWebGLProgram(f,[{dataId:e,shape:s,dtype:a}],a),y=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),y}if(r!=null)return this.convertAndCacheOnCPU(e);if(z().getBool("DEBUG")&&!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&z().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l=null,c;if(a!=="complex64"&&z().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const f=this.texData.get(c.dataId);l=this.gpgpu.createBufferFromTexture(f.texture.texture,...th(s))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],y=f[1];d=Fr(m,y)}else if(l==null)d=this.getValuesFromTexture(e);else{const f=L(s);d=this.gpgpu.downloadFloat32MatrixFromBuffer(l,f)}if(c!=null&&this.disposeIntermediateTensorInfo(c),l!=null){const f=this.gpgpu.gl;ue(f,()=>f.deleteBuffer(l))}const p=this.convertAndCacheOnCPU(e,d),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(f=>f(p)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&wn().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,n={}){const r=this.texData.get(e),{values:s,shape:o,slice:a,dtype:i,isPacked:u,texture:l}=r;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let h;u?h=new Hs(o,Fs):h=new qr(o,Fs);const f=this.runWebGLProgram(h,[{dataId:e,shape:o,dtype:i}],i),m=this.readToGPU(f,n);return this.disposeIntermediateTensorInfo(f),m}if(l==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,n.customTexShape),d=wn().makeTensorFromTensorInfo(c),p=this.texData.get(c.dataId);return Object.assign({tensorRef:d},p.texture)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>fr(s));return be(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return be(e.shape,e.dtype,n)}checkNumericalProblems(e){if(e!=null)for(let n=0;n<e.length;n++){const r=e[n];if(!aG(r))throw z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:n,dtype:r,isPacked:s}=this.texData.get(e),o=L(n);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(e),h=this.texData.get(p.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...th(n)).subarray(0,o);return this.disposeIntermediateTensorInfo(p),f}const a=z().getBool("WEBGL_PACK")&&s===!0,i=a?sh(n):n,u=a?new CH(i):new bH(i),l=this.runWebGLProgram(u,[{shape:i,dtype:r,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const n=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=mr(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),a=mr(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=n,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(o);i.kernelMs=$1(u),i.getExtraProfileInfo=()=>u.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:bn(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=bn(),e)}async getQueryTime(e){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const n=e;return n.endMs-n.startMs}disposeData(e,n=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(n?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!n&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:r}=this.texData.get(e);return r!=null&&(this.disposeData(r.real.dataId,n),this.disposeData(r.imag.dataId,n)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:n,dtype:r,texShape:s,usage:o,isPacked:a,slice:i}=this.texData.get(e),u=i&&i.origDataId||e,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),n!=null&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(n,s,o,a)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,n=p5){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(r=>this.texData.get(r.dataId).texture==null&&L(r.shape)<n)}getGPGPUContext(){return this.gpgpu}where(e){zn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const n=e.dataSync();return u5(e.shape,n)}packedUnaryOp(e,n,r){const s=new Hs(e.shape,n),o=this.compileAndRun(s,[e],r);return wn().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const s=vR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,s)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,NC,e.dtype);const n=new qr(e.shape,NC),r=this.compileAndRun(n,[e]);return wn().makeTensorFromTensorInfo(r)}makeTensorInfo(e,n,r){let s;if(n==="string"&&r!=null&&r.length>0&&Ir(r[0])){const o=r.map(a=>_r(a));s=this.write(o,e,n)}else s=this.write(r,e,n);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:n}}makeOutput(e,n,r){return wn().makeTensorFromTensorInfo(this.makeTensorInfo(e,n,r),this)}unpackTensor(e){const n=new i5(e.shape);return this.runWebGLProgram(n,[e],e.dtype)}packTensor(e){const n=new Hj(e.shape),r=!0;return this.runWebGLProgram(n,[e],e.dtype,null,r)}packedReshape(e,n){const r=[Di(e.shape),...Pi(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},o=[Di(n),...Pi(n)],a=new SR(o,r),i=!0,u=[r],l=this.runWebGLProgram(a,[s],e.dtype,u,i);return{dataId:l.dataId,shape:n,dtype:l.dtype}}decode(e,n){const r=this.texData.get(e),{isPacked:s,shape:o,dtype:a}=r;if(n!=null){const p=L(o),h=n[0]*n[1]*4;k(p<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=sh(o);let u;s?u=new vH(i):u=new wH(i);const l=!0,c=[n!=null?n:th(i)],d=this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,c,l,n);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(e,n,r,s,o=!1,a){const i=this.makeTensorInfo(e.outputShape,r),u=this.texData.get(i.dataId);if(e.packedOutput&&(u.isPacked=!0),e.outPackingScheme===mc.DENSE){const g=a!=null?a:th(e.outputShape);u.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(u.usage=e.outTexUsage),L(i.shape)===0)return u.values=xt(i.dtype,0),i;const l=[],c=n.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&L(g.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),l.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!Cf(x.shape,g.shape)){const w=g,v=g.shape;g.shape=x.shape,g=this.packedReshape(g,v),l.push(g),x=this.texData.get(g.dataId),w.shape=v}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:u,isUniform:!1},p=xH(e,c,d),h=this.getAndSaveBinary(p,()=>gH(this.gpgpu,e,c,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),z().get("ENGINE_COMPILE_ONLY")||yH(this.gpgpu,h,c,d,s),l.forEach(g=>this.disposeIntermediateTensorInfo(g)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const y=z().getNumber("WEBGL_FLUSH_THRESHOLD");if(y>0){const g=bn();g-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&o===!1){const g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,n,r,s,o=!1){return r=r||n[0].dtype,this.runWebGLProgram(e,n,r,s,o)}getAndSaveBinary(e,n){return e in this.binaryCache||(this.binaryCache[e]=n()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(z().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(n=>{this.gpgpu.deleteProgram(this.binaryCache[n].webGLProgram),delete this.binaryCache[n]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement!="undefined"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=Le(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=z().getBool("DEBUG");z().set("DEBUG",!1);const n=this.abs(Re(1e-8)).dataSync()[0];if(z().set("DEBUG",e),n>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?l5:c5}uploadToGPU(e){const n=this.texData.get(e),{shape:r,dtype:s,values:o,texture:a,usage:i,isPacked:u}=n;if(a!=null)return;const l=this.activeTimers!=null;let c;l&&(c=bn());let d=n.texShape;if(d==null&&(d=$G(r,u),n.texShape=d),o!=null){const p=sh(r);let h,f=d[1],m=d[0];const y=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(u||!y)&&([f,m]=Xu(d[0],d[1])),u?h=new $H(p,y):h=new wC(p,y);const g=y?[m,f]:d,x=this.makeTensorInfo(g,s),w=this.texData.get(x.dataId);y?w.usage=Vn.PIXELS:w.usage=Vn.UPLOAD,w.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const v=[[m,f]],b=!0,S=this.runWebGLProgram(h,[x],s,v,b),$=this.texData.get(S.dataId);n.texShape=$.texShape,n.isPacked=$.isPacked,n.usage=$.usage,z().get("ENGINE_COMPILE_ONLY")?this.disposeData(S.dataId):(n.texture=$.texture,n.values=null,this.texData.delete(S.dataId)),this.disposeIntermediateTensorInfo(x),l&&(this.uploadWaitMs+=bn()-c)}else{const p=this.acquireTexture(d,i,s,u);n.texture=p}}convertAndCacheOnCPU(e,n){const r=this.texData.get(e),{dtype:s}=r;return n!=null&&(r.values=m5(n,s)),r.values}acquireTexture(e,n,r,s){if(this.numBytesInGPU+=this.computeBytes(e,r),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,n,s)}computeBytes(e,n){return e[0]*e[1]*tc(n)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,n]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(n));return Promise.all(e)}else{for(const[,n]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(n),s(!0)}catch(o){throw o}});e.push(r)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await BT(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(hE(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:n,customUniformLocations:r,infLoc:s,nanLoc:o,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:u}=xE(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=n,e.customUniformLocations=r,e.infLoc=s,e.nanLoc=o,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=u}}createTensorFromGPUData(e,n,r){e.channels=e.channels||"RGBA";const{texture:s,height:o,width:a,channels:i}=e,u=wn().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(s,n,r,o,a,i);return wn().makeTensorFromDataId(l,n,r,u)}}xg.nextDataId=0;function m5(t,e){if(e==="float32"||e==="complex64")return t;if(e==="int32"||e==="bool"){const n=e==="int32"?new Int32Array(t.length):new Uint8Array(t.length);for(let r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */D1()&&Nm("webgl",()=>new xg,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yw=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class ma{constructor(e,n,r){this.variableNames=["A","B"],this.outputShape=$e(n,r),this.enableShapeUniforms=Kt(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Da=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class el{constructor(e,n,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=$e(n,r);const o=this.outputShape.length;this.enableShapeUniforms=Kt(o);let a="";if(s)if(o===0||L(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${We(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=en("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${u[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${u[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const g5={kernelName:du,backendName:"webgl",kernelFunc:Rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $o(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(o.dataId),i=Rn({inputs:{x:r},backend:n}),u=Rn({inputs:{x:s},backend:n});return a.complexTensorInfos={real:i,imag:u},o}const y5={kernelName:Hc,backendName:"webgl",kernelFunc:$o};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $R="return (a < 0.) ? b * a : a;",kR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function x5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,a=n.makeTensorInfo([],"float32",Es(o,"float32")),i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new el(kR,s.shape,a.shape):new ma($R,s.shape,a.shape),u=n.runWebGLProgram(i,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),u}const w5={kernelName:vd,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IR="return (a < 0.) ? b * a : a;",NR=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function v5(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new el(NR,r.shape,s.shape):new ma(IR,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],"float32")}const b5={kernelName:zd,backendName:"webgl",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tl="if (isnan(x)) return x;";function Ae({opSnippet:t,packedOpSnippet:e,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:o})=>{const{x:a}=s,i=o,u=r||a.dtype;if(i.shouldExecuteOnCPU([a])&&n!=null){const d=i.texData.get(a.dataId),p=n(d.values,u);return i.makeTensorInfo(a.shape,u,p)}const l=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let c;return l?c=new Hs(a.shape,e):c=new qr(a.shape,t),i.runWebGLProgram(c,[a],u)}}function Bt({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}){return({inputs:a,backend:i})=>{const{a:u,b:l}=a,c=i;if(r&&u.dtype==="complex64"){const f=c.texData.get(u.dataId),m=c.texData.get(l.dataId),[y,g]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(w=>{const[v,b]=w,S={dataId:v.dataId,dtype:v.dtype,shape:u.shape},$={dataId:b.dataId,dtype:b.dtype,shape:l.shape},N=new ma(t,u.shape,l.shape);return c.runWebGLProgram(N,[S,$],$t(v.dtype,b.dtype))}),x=$o({inputs:{real:y,imag:g},backend:c});return c.disposeIntermediateTensorInfo(y),c.disposeIntermediateTensorInfo(g),x}const d=o||$t(u.dtype,l.dtype);if((u.dtype==="string"||l.dtype==="string"||c.shouldExecuteOnCPU([u,l]))&&s!=null){const f=c.texData.get(u.dataId).values,m=c.texData.get(l.dataId).values,y=u.dtype==="string"?Lr(f):f,g=u.dtype==="string"?Lr(m):m,[x,w]=s(u.shape,l.shape,y,g,d),v=c.makeTensorInfo(w,d),b=c.texData.get(v.dataId);return b.values=x,v}const p=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let h;return p?h=new el(e,u.shape,l.shape,n):h=new ma(t,u.shape,l.shape),c.runWebGLProgram(h,[u,l],d)}}function gc(t,e=!1){if(t==="linear")return e?n5:Qj;if(t==="relu")return e?s5:Jj;if(t==="elu")return e?r5:Zj;if(t==="relu6")return e?o5:e5;if(t==="prelu")return e?NR:IR;if(t==="leakyrelu")return e?kR:$R;if(t==="sigmoid")return e?a5:t5;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TR{constructor(e,n,r,s=!1,o=!1,a=!1,i=null,u=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=Kt(this.outputShape.length);const c=s?e[1]:e[2],d=Math.ceil(c/2),p=s?"i * 2, rc.y":"rc.y, i * 2",h=o?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let y="",g="";i&&(u?y=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:l?y=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:y=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let w="rc.x",v="rc.x";e[0]<n[0]?w=`imod(rc.x, ${e[0]})`:n[0]<e[0]&&(v=`imod(rc.x, ${n[0]})`),this.userCode=`
      ${y}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${w};
        int batchB = ${v};
        for (int i = 0; i < ${d}; i++) {
          vec4 a = getMatrixA(batchA, ${p});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${g}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TC={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class EC{constructor(e,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=$e(n,r),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RC="return a * b;";function Qw(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=$t(r.dtype,s.dtype);if(r.dtype==="complex64"){const i=n.texData.get(r.dataId),u=n.texData.get(s.dataId),l=new EC(TC.REAL,r.shape,s.shape),c=new EC(TC.IMAG,r.shape,s.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:r.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=$o({inputs:{real:p,imag:h},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}if(n.shouldExecuteOnCPU([r,s])){const i=n.texData.get(r.dataId),u=n.texData.get(s.dataId),[l,c]=vj(r.shape,s.shape,i.values,u.values,o),d=n.makeTensorInfo(c,o),p=n.texData.get(d.dataId);return p.values=l,d}let a;return z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new el(RC,r.shape,s.shape):a=new ma(RC,r.shape,s.shape),n.runWebGLProgram(a,[r,s],o)}const C5={kernelName:ku,backendName:"webgl",kernelFunc:Qw};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S5(t,e,n){const r=[Di(t.shape),...Pi(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},o=[Di(e),...Pi(e)],a=new SR(o,r),i=!0,u=[r],l=n.runWebGLProgram(a,[s],t.dtype,u,i);return{dataId:l.dataId,shape:e,dtype:l.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function se(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,a=n,i=L(s.shape),u=om(o,i),l=L(u);k(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=a.texData.get(s.dataId);return c.isPacked&&!Cf(s.shape,u)&&!(c.texture!==null&&Cf(c.shape,u))?S5(s,u,a):(a.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype})}const $5={kernelName:Wd,backendName:"webgl",kernelFunc:se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _C{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];const i=Math.floor(r/4)*4,u=r%4;let l="sumValue += dot(values, ones);";if(n!=null){const d=1/n;l=`sumValue += dot(values * ${aa(d)?d.toPrecision(2):d}, ones);`}let c="";o%r>0&&(c=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${l}
        }

        int inIdx = inOffset + ${i};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${l}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${l}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${l}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k5{constructor(e,n){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:o,outSize:a}=e;this.outputShape=[s,a];let i="0.0",u="";n==="prod"?i="1.0":n==="min"?(i="1.0 / 1e-20",u="min"):n==="max"&&(i="-1.0 / 1e-20",u="max");let l=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="sum"?l="sumValue":n==="prod"?l="prodValue":n==="all"?l="allValue":n==="any"&&(l="anyValue");const c=Math.floor(r/4)*4,d=r%4;let p=`
      if (${n==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${n==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${n==="min"} || ${n==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";n==="all"?(i="1.0",p=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):n==="any"&&(i="0.0",p=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${p}
        } else if (${d===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I5(t){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const n=e.length?e[e.length-1].outSize:t[1],r=Qm(n);e.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return e}function Pa(t,e,n,r){const s=I5(t.shape);let o=t;for(let a=0;a<s.length;a++){const{inSize:i,windowSize:u,outSize:l}=s[a];let c,d;n==="mean"?c=a===0?new _C({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l},i):new _C({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l}):c=new k5({windowSize:u,inSize:i,batchSize:t.shape[0],outSize:l},n),d=o,o=r.runWebGLProgram(c,[o],e),d.dataId!==t.dataId&&r.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N5{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[n[a]];this.outputShape=r,this.rank=r.length;const s=We(this.rank),o=T5(n);this.userCode=`
    void main() {
      ${s} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function T5(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let s=0;s<t.length;s++)r[t[s]]=n[s];return r.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class E5{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(e.length);for(let c=0;c<r.length;c++)r[c]=e[n[c]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=We(this.rank),o=CR("rc",this.rank),a=new Array(this.rank);for(let c=0;c<n.length;c++)a[n[c]]=o[c];const i=`vec2(${a.slice(-2).join()})`,u=`++${o[this.rank-1]} < ${r[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${s} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${l};
      if(${u}) {
        result[1] = ${l};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${r[this.rank-2]}) {
        result[2] = ${l};
        if(${u}) {
          result[3] = ${l};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wg(t,e,n){const r=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new E5(t.shape,e):new N5(t.shape,e);return n.runWebGLProgram(r,[t],t.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R5(t,e,n,r){const s=e,o=t.shape.length,a=Ie(s,t.shape);let i=a;const u=Ye(i,o),l=u!=null;let c=t;l&&(c=wg(t,u,r),i=Qe(i.length,o)),bt("sum",i,o);const[d,p]=wt(c.shape,i);let h=d;n&&(h=vt(d,a));const f=L(p),y=L(t.shape)/f,g=se({inputs:{x:c},attrs:{shape:[y,f]},backend:r}),x=mp(t.dtype),w=Pa(g,x,"sum",r),v=se({inputs:{x:w},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(w),l&&r.disposeIntermediateTensorInfo(c),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vg(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return R5(s,o,a,n)}const _5={kernelName:Qd,backendName:"webgl",kernelFunc:vg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,a=n,i=s.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=s.shape[o[c]];let l;if(a.shouldExecuteOnCPU([s])){const d=a.texData.get(s.dataId).values,p=Xw(d,s.shape,s.dtype,o,u);l=a.makeTensorInfo(u,s.dtype);const h=a.texData.get(l.dataId);h.values=p}else l=wg(s,o,a);return l}const D5={kernelName:Qo,backendName:"webgl",kernelFunc:rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ER=1e3;function kf({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,d=n?t.shape[l-2]:t.shape[l-1],p=r?e.shape[c-1]:e.shape[c-2],h=n?t.shape[l-1]:t.shape[l-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),x=L(y),v=$e(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([h,f]);k(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=n?[g,d,h]:[g,h,d],S=r?[x,f,p]:[x,p,f],$=se({inputs:{x:t},backend:s,attrs:{shape:b}}),N=se({inputs:{x:e},backend:s,attrs:{shape:S}}),E=[$,N],R=Math.max(g,x),F=n?$.shape[1]:$.shape[2],B=o!=null,M=a!=null,V=u==="leakyrelu",W=u!=null?gc(u,!0):null,H=B||M||V||W!=null;let q;if((h===1||f===1)&&F>ER&&H===!1){let U=$,j=N;n&&(U=rn({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),E.push(U)),r&&(j=rn({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),E.push(j));const T=f!==1,A=f===1;let _=U;T&&(_=se({inputs:{x:U},backend:s,attrs:{shape:[R,F,1]}}),E.push(_));const G=f===1?2:1;let K=j;A&&(K=se({inputs:{x:j},backend:s,attrs:{shape:[R,1,F]}}),E.push(K));const Q=Qw({inputs:{a:_,b:K},backend:s});q=vg({inputs:{x:Q},backend:s,attrs:{axis:G,keepDims:!0}}),E.push(Q)}else{const U=$t(t.dtype,e.dtype),j=new TR(b,S,[R,h,f],n,r,B,W,M,V),T=[$,N];if(o!=null&&T.push(o),M&&T.push(a),V){const A=s.makeTensorInfo([],"float32",Es(i,"float32"));T.push(A),E.push(A)}q=s.runWebGLProgram(j,T,U)}const O=se({inputs:{x:q},backend:s,attrs:{shape:v}});E.push(q);for(const U of E)s.disposeIntermediateTensorInfo(U);return O}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P5(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return kf({a:s,b:o,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}const A5={kernelName:bi,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DC="return abs(x);";function O5(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){const o=n.texData.get(r.dataId),a=vR(o.values);return n.makeTensorInfo(r.shape,r.dtype,a)}let s;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Hs(r.shape,DC):s=new qr(r.shape,DC),n.runWebGLProgram(s,[r],r.dtype)}const F5={kernelName:Dc,backendName:"webgl",kernelFunc:O5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L5=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,z5=Ae({opSnippet:L5}),B5={kernelName:Ui,backendName:"webgl",kernelFunc:z5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=yr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,V5=Ae({opSnippet:M5}),W5={kernelName:Gi,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PC="return a + b;",U5=Bt({opSnippet:PC,packedOpSnippet:PC,supportsComplex:!0,cpuKernelImpl:J6}),G5={kernelName:Sa,backendName:"webgl",kernelFunc:U5};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H5{constructor(e,n){this.outputShape=[],this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`float v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        float result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j5{constructor(e,n){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=n.map((o,a)=>`T${a}`);const r=[];this.variableNames.forEach(o=>{r.push(`vec4 v${o} = get${o}AtOutCoords();`)});const s=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${r.join(`
        `)}

        vec4 result = ${s};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ih(t){const{inputs:e,backend:n}=t,r=e;if(r.length===1)return Rn({inputs:{x:r[0]},backend:n});if(r.length>z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(r.length/2),l=Ih({inputs:r.slice(0,u),backend:n}),c=Ih({inputs:r.slice(u),backend:n});return Ih({inputs:[l,c],backend:n})}const s=r.map(u=>u.dtype).reduce((u,l)=>$t(u,l)),o=r.map(u=>u.shape),i=z().getBool("WEBGL_PACK")?new j5(r[0].shape,o):new H5(r[0].shape,o);return n.runWebGLProgram(i,r,s)}const K5={kernelName:Pc,backendName:"webgl",kernelFunc:Ih};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ie(o,s.shape);let l=u;const c=Ye(l,i);let d=s;c!=null&&(d=rn({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Qe(l.length,i)),bt("all",l,i);const[p,h]=wt(d.shape,l),f=L(h),m=se({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=Pa(m,m.dtype,"all",n);let g;if(a){const x=vt(p,u);g=se({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=se({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const X5={kernelName:Ac,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y5(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ie(o,s.shape);let l=u;const c=Ye(l,i);let d=s;c!=null&&(d=rn({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Qe(l.length,i)),bt("any",l,i);const[p,h]=wt(d.shape,l),f=L(h),m=se({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=Pa(m,m.dtype,"any",n);let g;if(a){const x=vt(p,u);g=se({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=se({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const Q5={kernelName:Oc,backendName:"webgl",kernelFunc:Y5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z5{constructor(e,n,r){this.variableNames=["A"];const{windowSize:s,batchSize:o,outSize:a}=e;r||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=n==="max"?">":"<",u=r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${s}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J5{constructor(e,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,k(e.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/n);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,l=We(u),c=en("coords",u);let d,p;if(a===1){p=u+1;const N=We(p);d=`
        ${N} sourceLocR = ${N}(${c.join()}, 0);
        ++${c[u-1]};
        ${N} sourceLocG = ${N}(${c.join()}, 0);
        ++${c[u-2]};
        ${N} sourceLocA = ${N}(${c.join()}, 0);
        --${c[u-1]};
        ${N} sourceLocB = ${N}(${c.join()}, 0);
        --${c[u-2]};`}else p=u,d=`
        ${l} sourceLocR = coords;
        ++${c[u-1]};
        ${l} sourceLocG = coords;
        ++${c[u-2]};
        ${l} sourceLocA = coords;
        --${c[u-1]};
        ${l} sourceLocB = coords;
        --${c[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map(N=>"int "+N),y=en("sourceLocR",p-1).concat("inIdx.r"),g=en("sourceLocG",p-1).concat("inIdx.g"),x=en("sourceLocB",p-1).concat("inIdx.b"),w=en("sourceLocA",p-1).concat("inIdx.a"),v=r==="max"?"greaterThan":"lessThan",b=s?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${w.join()})));`,S=`vec4(
            getAChannel(${y.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,$=s?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${l} coords = getOutputCoords();
        bool hasNextCol = ${c[u-1]} < ${i[u-1]-1};
        bool hasNextRow = ${c[u-2]} < ${i[u-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${n};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${S};

        for (int i = 0; i < ${n}; i++) {
          inIdx = srcIdx;
          ${b}
          vec4 candidate = ${S};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(t,e,n,r=null){let s=e.shape[0],o=e.shape[1];r!=null&&(s=r.shape[0],o=r.shape[1]);const a=Qm(o),i={windowSize:a,inSize:o,batchSize:s,outSize:Math.ceil(o/a)},u=new Z5(i,n,r==null),l=[e];r!=null&&l.push(r);const c=t.runWebGLProgram(u,l,"int32");if(c.shape[1]===1)return c;const d=RR(t,e,n,c);return t.disposeIntermediateTensorInfo(c),d}function _R(t,e,n,r=null){const s=r!=null?r.shape:e.shape,o=s[s.length-1],a=Qm(o),i=new J5(s,a,n,r==null),u=r==null?[e]:[e,r],l=t.runWebGLProgram(i,u,"int32");if(l.shape.length===e.shape.length){const c=_R(t,e,n,l);return t.disposeIntermediateTensorInfo(l),c}return l}function DR(t,e,n,r){const s=[n];if(bt("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,e.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=t.texData.get(e.dataId),i=a!==null&&a.isPacked;let u=e;i&&(u=t.unpackTensor(e),o.push(u));const[l,c]=wt(u.shape,s),d=L(c),p=se({inputs:{x:u},backend:t,attrs:{shape:[-1,d]}});o.push(p);const h=RR(t,p,r);o.push(h);const f=se({inputs:{x:h},backend:t,attrs:{shape:l}});return o.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}return _R(t,e,r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=rn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),bt("argMax",[a[0]],u.shape.length);const c=DR(n,u,a[0],"max");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const tK={kernelName:Fc,backendName:"webgl",kernelFunc:eK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=rn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),bt("argMin",[a[0]],u.shape.length);const c=DR(n,u,a[0],"min");return l.forEach(d=>n.disposeIntermediateTensorInfo(d)),c}const rK={kernelName:Lc,backendName:"webgl",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK=yr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,oK=Ae({opSnippet:sK}),aK={kernelName:Hi,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=yr+"return log(x + sqrt(x * x + 1.0));",uK=Ae({opSnippet:iK}),lK={kernelName:ji,backendName:"webgl",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cK=yr+`
  return atan(x);
`,dK=Ae({opSnippet:cK}),pK={kernelName:Ki,backendName:"webgl",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK=Yw+`
  return atan(a, b);
`,fK=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Da+`
  return result;
`,mK=Bt({opSnippet:hK,packedOpSnippet:fK}),gK={kernelName:Xi,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=yr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,xK=Ae({opSnippet:yK}),wK={kernelName:qi,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yc{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=n==="avg",y=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),r){const N=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${u});
        const ivec2 pads = ivec2(${h}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p};
                wC += ${c}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${N} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${s?o?y:g:`wR * ${p} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let v=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(v="avgValue / max(count, 1.0)");const b=Math.floor(a/4)*4,S=a%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${u});
      const ivec2 pads = ivec2(${h}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${l}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${b}; wC += 4) {
            int xC = xCCorner + wC * ${c};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              getValue(batch, xR, xC + 3 * ${c}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${b};
          if (${S===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${S===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${S===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${c}, d),
              getValue(batch, xR, xC + 2 * ${c}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${v});
      }
    `}}class Zw{constructor(e,n,r,s=!1,o=!1){if(this.variableNames=["x"],n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,u=e.strideHeight,l=e.strideWidth,c=e.dilationDepth,d=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,y=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const w=n==="avg";let v="0.0";if(w||(v="-1.0 / 1e-20"),r){const R=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${u}, ${l});
        const ivec3 pads = ivec3(${y}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${c}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${p}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${R} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${s?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const b="max";let S=`${n}(${n}(${n}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;n==="avg"&&(S="avgValue / max(count, 1.0)");const $=Math.floor(a/4)*4,N=a%4,E=`
      if (${w}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${u}, ${l});
      const ivec3 pads = ivec3(${y}, ${g}, ${x});
      const float initializationValue = ${v};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${v});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${c}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${p};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                getValue(batch, xD, xR, xC + 3 * ${p}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${$};
            if (${N===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${N===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${p}, ch),
                getValue(batch, xD, xR, xC + 2 * ${p}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${S});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Np(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1;k(Dt(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const c=jt(s.shape,o,a,l,i,u);if(c.filterWidth===1&&c.filterHeight===1&&Pe(c.inShape,c.outShape))return Rn({inputs:{x:s},backend:n});const d=new yc(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}const bK={kernelName:zc,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=[1,1,1],d=Yn(s.shape,o,a,c,i,u,l),p=new Zw(d,"avg",!1);return n.runWebGLProgram(p,[s],"float32")}const SK={kernelName:Bc,backendName:"webgl",kernelFunc:CK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $K{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=u-1-e.padInfo.top,d=l-1-e.padInfo.left,p=1/(n*r);this.userCode=`
      const ivec2 pads = ivec2(${c}, ${d});
      const float avgMultiplier = float(${p});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${l};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class kK{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=p-1-e.padInfo.top,y=h-1-e.padInfo.left,g=1/(n*r*s);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${y});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${p};
              wR += ${l}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${c}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IK(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],p=Yn(a.shape,i,u,d,l,c),h=new kK(p);return n.runWebGLProgram(h,[s],a.dtype)}const NK={kernelName:lm,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;Np([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=jt(a.shape,i,u,1,l),d=new $K(c);return n.runWebGLProgram(d,[s],a.dtype)}const EK={kernelName:um,backendName:"webgl",kernelFunc:TK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RK(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return kf({a:s,b:o,transposeA:a,transposeB:i,backend:n})}const _K={kernelName:Mc,backendName:"webgl",kernelFunc:RK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DK{constructor(e,n,r,s,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r);let i="0.0";s!=null&&($e(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";o!=null&&($e(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PK{constructor(e,n,r,s,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r);let i="vec4(0.0)";s!=null&&($e(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";o!=null&&($e(e,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK=({inputs:t,backend:e,attrs:n})=>{const{x:r,mean:s,variance:o,offset:a,scale:i}=t;k(s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(a==null||s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(i==null||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);const l=[r,s,o];let c=null;a!=null&&(c=a.shape,l.push(a));let d=null;i!=null&&(d=i.shape,l.push(i));const p=z().getBool("WEBGL_PACK_NORMALIZATION")?new PK(r.shape,s.shape,o.shape,c,d,u):new DK(r.shape,s.shape,o.shape,c,d,u);return e.runWebGLProgram(p,l,l[0].dtype)},OK={kernelName:md,backendName:"webgl",kernelFunc:AK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FK{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const n=We(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=LK(this.rank);let s;const o=e.map((a,i)=>`sourceLoc.${a0[i]} = start[${i}] + coords.${a0[i]};`);s=`
        ${n} sourceLoc;
        ${n} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${s}
        setOutput(getSource(${r}));
      }
    `}}const a0=["x","y","z","w","u","v"];function LK(t){if(t===1)return"sourceLoc";if(t<=6)return a0.slice(0,t).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zK{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=We(this.rank),r=en("coords",this.rank),s=en("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
        ++${s[this.rank-1]};
        result.y = ${a};
        --${s[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${r[this.rank-1]};
      if (++${r[this.rank-2]} < ${e[this.rank-2]}) {
        ++${s[this.rank-2]};
        result.z = ${a};
        if (++${r[this.rank-1]} < ${e[this.rank-1]}) {
          ++${s[this.rank-1]};
          result.w = ${a};
        }
      }
    `,l=this.rank<=4?`sourceLoc = coords +
            ${n}(${e.map((c,d)=>`start[${d}]`).join()});`:e.map((c,d)=>`${s[d]} = ${r[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${n} coords = getOutputCoords();
        ${n} sourceLoc;
        ${l}
        vec4 result = vec4(0.);
        ${i}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BK(t,e,n,r){const s=r.texData.get(t.dataId),o=r.makeTensorInfo(n,t.dtype),a=r.texData.get(o.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=t.dtype;let i=Dw(e,fe(t.shape));s.slice&&(i+=s.slice.flatOffset),a.slice={flatOffset:i,origDataId:s.slice&&s.slice.origDataId||t.dataId};const u=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,u+1),o}function nl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r,[i,u]=qm(s,o,a);if(jm(s,i,u),L(u)===0)return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=n.texData.get(s.dataId),p=_j(d.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,p)}const{isPacked:l}=n.texData.get(s.dataId),c=_w(s.shape,i,u);if(l||!c){const d=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zK(u):new FK(u),p=[i];return n.runWebGLProgram(d,[s],s.dtype,p)}return n.uploadToGPU(s.dataId),BK(s,i,u,n)}const MK={kernelName:Yd,backendName:"webgl",kernelFunc:nl};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;k(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,w)=>x*w),u=Na(s.shape,o,i),l=Ta(u.length,o.length),c=Ea(s.shape,o,i),d=Jm(a,o.length),p=eg(c,a,o.length),h=[],f=se({inputs:{x:s},backend:n,attrs:{shape:u}}),m=rn({inputs:{x:f},backend:n,attrs:{perm:l}}),y=se({inputs:{x:m},backend:n,attrs:{shape:c}}),g=nl({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(y),h.forEach(x=>n.disposeIntermediateTensorInfo(x)),g},WK={kernelName:Vc,backendName:"webgl",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=n.readSync(s.dataId),u=n.readSync(o.dataId),l=wR(i,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,l)}const GK={kernelName:Wc,backendName:"webgl",kernelFunc:UK};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,jK=`
  return float(int(a.r) & int(b.r));
`;function KK(t){const{inputs:e,backend:n}=t,{a:r,b:s}=e,o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=z().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||a===1){const u=n.texData.get(r.dataId).values,l=n.texData.get(s.dataId).values,[c,d]=tj(r.shape,s.shape,u,l,r.dtype),p=n.makeTensorInfo(d,r.dtype),h=n.texData.get(p.dataId);return h.values=c,p}let i;return o?i=new el(HK,r.shape,s.shape,!1):i=new ma(jK,r.shape,s.shape),n.runWebGLProgram(i,[r,s],r.dtype)}const qK={kernelName:Uc,backendName:"webgl",kernelFunc:KK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XK(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.readSync(r.dataId),a=n.readSync(s.dataId),i=$e(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const YK={kernelName:Gc,backendName:"webgl",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK="return float(a != b);",PR=Bt({opSnippet:QK,cpuKernelImpl:Cj,dtype:"bool"}),ZK={kernelName:Iu,backendName:"webgl",kernelFunc:PR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ep(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return Rn({inputs:{x:s.complexTensorInfos.real},backend:n})}const JK={kernelName:Vd,backendName:"webgl",kernelFunc:Ep};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq="return float(int(x));";function tq(t,e){const n=new qr(t.shape,eq),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i0(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return Rn({inputs:{x:s},backend:n});const a=ks(s.shape),i=i0({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=$o({inputs:{real:i,imag:a},backend:n});return a.dispose(),n.disposeIntermediateTensorInfo(i),u}if(s.dtype==="complex64"){const a=Ep({inputs:{input:s},backend:n}),i=i0({inputs:{x:a},backend:n,attrs:{dtype:o}});return n.disposeIntermediateTensorInfo(a),i}if(!am(s.dtype,o)){const a=Rn({inputs:{x:s},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(n.shouldExecuteOnCPU([s])){const a=n.texData.get(s.dataId).values,[i,u,l]=nj(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,u,l)}if(o==="int32")return tq(s,n);if(o==="bool"){const a=n.makeTensorInfo([],"bool",xt("bool",1)),u=PR({inputs:{a:s,b:a},backend:n});return n.disposeIntermediateTensorInfo(a),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const nq={kernelName:Yi,backendName:"webgl",kernelFunc:i0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AC="return ceil(x);",rq=Ae({opSnippet:AC,packedOpSnippet:AC,cpuKernelImpl:rj}),sq={kernelName:Qi,backendName:"webgl",kernelFunc:rq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oq{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aq{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;z().getBool("WEBGL_PACK_CLIP")?i=new aq(s.shape):i=new oq(s.shape);const u=[[o],[a]];return n.runWebGLProgram(i,[s],s.dtype,u)}const uq={kernelName:Zi,backendName:"webgl",kernelFunc:iq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lq{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OC(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function cq(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.texData.get(r.dataId),o=new lq(r.shape),a=[OC(r,s.complexTensorInfos.real),OC(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(o,a,a[0].dtype)}const dq={kernelName:jc,backendName:"webgl",kernelFunc:cq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pq{constructor(e){this.outputShape=[],this.outputShape=ln(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const n=new Array(e.length-1);n[0]=e[0][1];for(let a=1;a<n.length;a++)n[a]=n[a-1]+e[a][1];const r=[`if (yC < ${n[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<n.length;a++){const i=n[a-1];r.push(`else if (yC < ${n[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const s=n.length,o=n[n.length-1];r.push(`else setOutput(getT${s}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${r.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hq{constructor(e,n){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ln(e,n);const r=this.outputShape,s=r.length,o=We(s),a=en("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map((m,y)=>`T${y}`);const u=new Array(e.length-1);u[0]=e[0][n];for(let m=1;m<u.length;m++)u[m]=u[m-1]+e[m][n];const l=i[n],c=i.slice(-2),d=i.join();let p=`if (${l} < ${u[0]}) {
        return getChannel(
            getT0(${d}), vec2(${c.join()}));
        }`;for(let m=1;m<u.length;m++){const y=u[m-1];p+=`
        if (${l} < ${u[m]}  && ${l} >= ${u[m-1]}) {
          return getChannel(
            getT${m}(${ih(i,l,y)}),
            vec2(${ih(c,l,y)}));
        }`}const h=u.length,f=u[u.length-1];p+=`
        return getChannel(
          getT${h}(${ih(i,l,f)}),
          vec2(${ih(c,l,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${p}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[s-1]} = ${a[s-1]} + 1;
        if (${a[s-1]} < ${r[s-1]}) {
          result.g = getValue(${a});
        }

        ${a[s-2]} = ${a[s-2]} + 1;
        if (${a[s-2]} < ${r[s-2]}) {
          result.a = getValue(${a});
        }

        ${a[s-1]} = ${a[s-1]} - 1;
        if (${a[s-2]} < ${r[s-2]} &&
            ${a[s-1]} < ${r[s-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function ih(t,e,n){const r=t.indexOf(e);return t.map((o,a)=>a===r?`${o} - ${n}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bg(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.texData.get(r.dataId);return Rn({inputs:{x:s.complexTensorInfos.imag},backend:n})}const fq={kernelName:wd,backendName:"webgl",kernelFunc:bg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(t,e,n){const r=t[0].dtype;if(r==="complex64"){const h=t.map(x=>Ep({inputs:{input:x},backend:n})),f=t.map(x=>bg({inputs:{input:x},backend:n})),m=Cl(h,e,n),y=Cl(f,e,n),g=$o({inputs:{real:m,imag:y},backend:n});return h.forEach(x=>n.disposeIntermediateTensorInfo(x)),f.forEach(x=>n.disposeIntermediateTensorInfo(x)),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),g}let s=n.shouldExecuteOnCPU(t);if(r==="string"&&(s=!0),s){const h=t.map(v=>{const b=L(v.shape.slice(e));return se({inputs:{x:v},backend:n,attrs:{shape:[-1,b]}})}),f=h.map(v=>({vals:n.readSync(v.dataId),shape:v.shape})),m=ln(h.map(v=>v.shape),1),y=h[0].shape[0]===1,g=sj(f,m,r,y),x=ln(t.map(v=>v.shape),e),w=n.makeTensorInfo(x,r,g);return h.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const o=t.filter(h=>L(h.shape)>0),a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const h=a?new qr(t[0].shape,Fs):new Hs(t[0].shape,Fs);return n.runWebGLProgram(h,t,r)}const i=z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const h=[];for(let m=0;m<o.length;m+=i){const y=o.slice(m,m+i);h.push(Cl(y,e,n))}const f=Cl(h,e,n);for(const m of h)n.disposeIntermediateTensorInfo(m);return f}if(a){const h=new hq(o.map(f=>f.shape),e);return n.runWebGLProgram(h,o,r)}const{tensors2D:u,outShape:l}=mq(o,e,n),c=new pq(u.map(h=>h.shape)),d=n.runWebGLProgram(c,u,r);u.forEach(h=>n.disposeIntermediateTensorInfo(h));const p=se({inputs:{x:d},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(d),p}function mq(t,e,n){const r=ln(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>se({inputs:{x:o},attrs:{shape:[-1,L(o.shape.slice(e))]},backend:n})),outShape:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AR(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=Ie(s,e[0].shape)[0],a=e.map(l=>l.shape);Ym(a,o);const i=ln(e.map(l=>l.shape),o);if(L(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(l=>L(l.shape)>0);return u.length===1?Rn({inputs:{x:u[0]},backend:n}):Cl(u,o,n)}const gq={kernelName:Kc,backendName:"webgl",kernelFunc:AR};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OR{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,u=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,y=e.dataFormat==="channelsLast",g=y?1:2,x=y?2:3,w=y?3:1;let v="",b="";r&&(s?v=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?v=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:v=`
          float activation(float x) {
            ${r}
          }
        `,b="result = activation(result);");const S=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${v}

      const ivec2 strides = ivec2(${u}, ${l});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${w}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${p}; wR++) {
          int xR = xRCorner + wR * ${c};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${y}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${y}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${y}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${y}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${S}
        ${b}
        setOutput(result);
      }
    `}}class yq{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const n=e.padInfo.front,r=e.padInfo.top,s=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=e.dilationDepth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterDepth,p=e.filterHeight,h=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${n}, ${r}, ${s});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p}; wR++) {
            int xR = xRCorner + wR * ${l};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${c};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FR{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Kt(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let p=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let y=0;y<c;y++)p+=`
           vec4 xTexelC${y*2};
           int xTexelC${y*2}Ready;
           vec4 xTexelC${y*2+1};
           int xTexelC${y*2+1}Ready;
           vec4 xC${y};`;p+=`
     for (int r = 0; r < ${l}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let y=0;y<c;y++)p+=`
           xTexelC${y*2} = vec4(0.0);
           xTexelC${y*2}Ready = 0;
           xTexelC${y*2+1} = vec4(0.0);
           xTexelC${y*2+1}Ready = 0;
           xC${y} = vec4(0.0);`;p+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let y=0;y<(d+1)/2;y++){const g=y*2;if(p+=`
           xC = xCCorner + ${g*u};
           `,i===1){if(g<c&&(a%2===1?(p+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,u===1&&g>0?p+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:p+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):p+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<c)){const x=a%2===0?sm(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(p+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,u>1?p+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:p+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):x===1?p+=`
                     xC${g+1} = xTexelC${g};
                     `:p+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<c&&(a%2===1?(p+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<c&&(p+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(p+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<c&&(p+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<c&&(p+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<c&&(p+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}p+=`
     }
   `,p+=`
     }
   `,p+=`
     }
   `;let h="",f="";r&&(s?h=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${r}
         }`:o?h=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${r}
         }`:h=`vec4 activation(vec4 x) {
           ${r}
         }`,f="result = activation(result);");const m=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${p}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xq{constructor(e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Kt(this.outputShape.length);const{dataFormat:r}=n,s=sn(),o=r==="channelsLast",a=o?1:2,i=o?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let c=0;c<=1;c++)for(let d=0;d<=1;d++)l+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${c};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${c*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${l}

        ${s.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function If(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function LR({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=t.shape,l=r.texData.get(t.dataId),c=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,h=n.dataFormat==="channelsLast",f=!1,m=!1;let y;const g=[];if(o!=null){const v=If(o.shape,h);v!=null&&(o=se({inputs:{x:o},backend:r,attrs:{shape:v}}),g.push(o))}if(s!=null){const v=If(s.shape,h);v!=null&&(s=se({inputs:{x:s},backend:r,attrs:{shape:v}}),g.push(s))}if(!((d===1||p===1)&&c>ER)&&l.isPacked&&h&&l.texture!=null&&u[2]%2!==0&&Pe(l.shape.slice(-3),u.slice(-3))){const v=u[0]*u[1]*(u[2]+1),b={dataId:t.dataId,shape:[1,v,n.inChannels],dtype:t.dtype},S=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,k(Cf(l.shape,b.shape),()=>`packed reshape ${l.shape} to ${b.shape} isn't free`);const $=se({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push($);const N=kf({a:b,b:$,backend:r,transposeA:f,transposeB:m,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),E=r.texData.get(N.dataId);k(E.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=S,E.shape=n.outShape,y=Rn({inputs:{x:N},backend:r}),y.shape=n.outShape,g.push(N)}else{const v=n.outHeight*n.outWidth,b=se({inputs:{x:t},backend:r,attrs:{shape:h?[n.batchSize,v,n.inChannels]:[n.batchSize,n.inChannels,v]}}),S=se({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),$=kf({a:h?b:S,b:h?S:b,transposeA:!h,transposeB:m,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});y=se({inputs:{x:$},backend:r,attrs:{shape:n.outShape}}),g.push(b),g.push(S),g.push($)}for(const v of g)r.disposeIntermediateTensorInfo(v);return y}function zR({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:d,outHeight:p,dataFormat:h}=n,f=h==="channelsLast",m=u*l*c,y=p*d,g=[n.batchSize,m,y],x=!0,w=!1,v=[];if(o!=null){const O=If(o.shape,f);O!=null&&(o=se({inputs:{x:o},backend:r,attrs:{shape:O}}),v.push(o))}if(s!=null){const O=If(s.shape,f);O!=null&&(s=se({inputs:{x:s},backend:r,attrs:{shape:O}}),v.push(s))}const b=se({inputs:{x:e},backend:r,attrs:{shape:[1,m,L(e.shape)/m]}});v.push(b);const S=new xq(g,n),$=[t.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(S,[t],"float32",$),E=se({inputs:{x:N},backend:r,attrs:{shape:g}});v.push(N),v.push(E);const R=s!=null,F=o!=null,B=i==="leakyrelu",M=i?gc(i,!0):null,V=new TR(f?E.shape:b.shape,f?b.shape:E.shape,f?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],x,w,R,M,F,B),W=f?[E,b]:[b,E];if(s&&W.push(s),F&&W.push(o),B){const O=r.makeTensorInfo([],"float32",Es(a,"float32"));W.push(O),v.push(O)}const H=r.runWebGLProgram(V,W,"float32"),q=se({inputs:{x:H},backend:r,attrs:{shape:n.outShape}});v.push(H);for(const O of v)r.disposeIntermediateTensorInfo(O);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=An(u),p=Xe(s.shape,o.shape,a,l,i,c,!1,d);let h;if(p.filterHeight===1&&p.filterWidth===1&&p.dilationHeight===1&&p.dilationWidth===1&&p.strideHeight===1&&p.strideWidth===1&&(p.padInfo.type==="SAME"||p.padInfo.type==="VALID"))h=LR({x:s,filter:o,convInfo:p,backend:n});else if(p.strideWidth<=2&&d==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){const m=new FR(p),y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];h=n.runWebGLProgram(m,[s,o],"float32",y)}else if(z().getBool("WEBGL_CONV_IM2COL"))h=zR({x:s,filter:o,convInfo:p,backend:n});else{const m=new OR(p);h=n.runWebGLProgram(m,[s,o],"float32")}const f=se({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}const vq={kernelName:qc,backendName:"webgl",kernelFunc:wq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${a?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Cq{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=n-1-e.padInfo.top,u=r-1-e.padInfo.left,l=a?1:2,c=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${l}], coords[${c}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class Sq{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${n} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${r} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${s} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class $q{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterDepth,r=e.filterHeight,s=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,u=n-1-e.padInfo.front,l=r-1-e.padInfo.top,c=s-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${l}, ${c});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${n}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${n} - 1 - wF;

          for (int wR = 0; wR < ${r}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${r} - 1 - wR;

            for (int wC = 0; wC < ${s}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${s} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=An(u),p=Xe(s.shape,c,a,1,i,l,!1,d),h=new bq(p);return n.runWebGLProgram(h,[s,o],"float32")}const Iq={kernelName:Xc,backendName:"webgl",kernelFunc:kq};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nq{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Kt(this.outputShape.length);const n=e.filterHeight,r=e.filterWidth,s=n-1-e.padInfo.top,o=r-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            int wCPerm = ${r} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=An(l),p=Xe(a,o.shape,i,1,u,c,!1,d);if(z().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&d==="channelsLast"){const h=[[p.strideHeight,p.strideWidth]],f=new Nq(p);return n.runWebGLProgram(f,[s,o],"float32",h)}else{const h=new Cq(p);return n.runWebGLProgram(h,[s,o],"float32")}}const Eq={kernelName:Yc,backendName:"webgl",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=Vr(s.shape,o.shape,a,u,i),c=new yq(l);return n.runWebGLProgram(c,[s,o],"float32")}const _q={kernelName:Qc,backendName:"webgl",kernelFunc:Rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,l=Vr(s.shape,u,a,1,i),c=new Sq(l);return n.runWebGLProgram(c,[s,o],"float32")}const Pq={kernelName:cm,backendName:"webgl",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r,l=Vr(u,o.shape,i,1,a),c=new $q(l);return n.runWebGLProgram(c,[s,o],"float32")}const Oq={kernelName:Zc,backendName:"webgl",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq=tl+`
  return cos(x);
`,Lq=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Da}
  return result;
`,zq=Ae({opSnippet:Fq,packedOpSnippet:Lq}),Bq={kernelName:Ji,backendName:"webgl",kernelFunc:zq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mq=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,Vq=Ae({opSnippet:Mq}),Wq={kernelName:eu,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uq{constructor(e,n,r,s,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,u,l]=e,[c]=n,[d,p]=r;this.outputShape=[c,d,p,l];const h=s==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${u-1}.0`],[y,g,x]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[w,v,b]=p>1?[`${(u-1)/(p-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${y});
      const float width_ratio = float(${w});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${v};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${b};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=r,c=new Uq(s.shape,o.shape,i,u,l);return n.runWebGLProgram(c,[s,o,a],"float32")},Hq={kernelName:td,backendName:"webgl",kernelFunc:Gq};var xc;(function(t){t.Prod="*",t.Sum="+"})(xc||(xc={}));class FC{constructor(e,n,r,s){this.op=e,this.outputShape=n,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===xc.Prod?"1.0":"0.0",i=r?a:`getX(${LC(o,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let l="",c="";r?(l=s?`end != ${u-1}`:"end != 0",c=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${u}`:"end >= pow2",c=s?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${We(o)} coords = getOutputCoords();
        int end = ${zC(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${l}) {
          int idx = ${c};
          ${zC(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${LC(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function LC(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function zC(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw new Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(t,e,n,r,s,o){const a=e.shape.length,i=Ye([r],a);let u=e;i!=null&&(u=rn({inputs:{x:e},backend:n,attrs:{perm:i}}));const l=Qe(1,a)[0];if(l!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let d=Rn({inputs:{x:u},backend:n});for(let p=0;p<=Math.ceil(Math.log2(c))-1;p++){const h=new FC(t,u.shape,!1,o),f=[[p]],m=d;d=n.runWebGLProgram(h,[d],d.dtype,f),n.disposeIntermediateTensorInfo(m)}if(s){const p=new FC(t,u.shape,s,o),h=d;d=n.runWebGLProgram(p,[d],d.dtype),n.disposeIntermediateTensorInfo(h)}if(i!=null){const p=ka(i),h=rn({inputs:{x:d},backend:n,attrs:{perm:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(u),h}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return BR(xc.Prod,s,n,o,a,i)}const Kq={kernelName:Jc,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return BR(xc.Sum,s,n,o,a,i)}const Xq={kernelName:ed,backendName:"webgl",kernelFunc:qq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=n.readSync(s.dataId),l=n.readSync(o.dataId),c=wR(u,l,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,c)}else if(s.shape.length===2){const u=n.bufferSync(s),l=n.bufferSync(o),c=ej(u,l,a,i);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const Qq={kernelName:nd,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zq{constructor(e,n,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=n,this.dataFormat=r,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${n};
      int offset_h = imod(h, ${n});
      int in_w = w / ${n};
      int offset_w = imod(w, ${n});
      int offset_d = (offset_h * ${n} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],l=a==="NHWC"?s.shape[2]:s.shape[3],c=a==="NHWC"?s.shape[3]:s.shape[1],d=u*o,p=l*o,h=c/(o*o),f=a==="NHWC"?[i,d,p,h]:[i,h,d,p],m=new Zq(f,o,a);return n.runWebGLProgram(m,[s],s.dtype)}const e8={kernelName:rd,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MR{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Kt(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,u=e.outChannels/e.inChannels;let l="",c="";r&&(s?l=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?l=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:l=`
          float activation(float x) {
            ${r}
          }
        `,c="result = activation(result);");const d=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${l}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VR{constructor(e,n=!1,r=null,s=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Kt(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,p=d;let h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<d;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${c}; r++) {
      `;for(let g=0;g<d;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(p+1)/2;g++){const x=g*2;if(h+=`
          xC = xCCorner + ${x*l};
          `,u===1){if(x<d&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,l===1&&x>0?h+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const w=i%2===0?sm(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${w};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,l>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:h+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):w===1?h+=`
                    xC${x+1} = xTexelC${x};
                    `:h+=`
                    xCOffset = xC + ${w};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(h+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(h+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(h+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let f="",m="";r&&(s?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${r}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${r}
        }`:f=`vec4 activation(vec4 x) {
          ${r}
        }`,m="result = activation(result);");const y=n?"result += getBiasAtOutCoords();":"";n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${y}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;c==null&&(c=[1,1]),k(Dt(a,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const d=Xe(s.shape,o.shape,a,c,i,l,!0);let p;z().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?p=new VR(d):p=new MR(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[s,o],"float32",h)}const n8={kernelName:sd,backendName:"webgl",kernelFunc:t8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r8{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const n=e.strideHeight,r=e.strideWidth,s=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${n} - ${s};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${r} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class s8{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const n=e.filterHeight,r=e.filterWidth,s=e.strideHeight,o=e.strideWidth,a=n-1-e.padInfo.top,i=r-1-e.padInfo.left,u=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${n}; wR++) {
          float dyR = float(dyRCorner + wR) / ${s}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${n} - 1 - wR;

          for (int wC = 0; wC < ${r}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${r} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,d=Xe(s.shape,c,a,i,u,l,!0),p=new r8(d);return n.runWebGLProgram(p,[s,o],"float32")}const a8={kernelName:od,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,d=Xe(c,o.shape,a,i,u,l,!0),p=new s8(d);return n.runWebGLProgram(p,[s,o],"float32")}const u8={kernelName:ad,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l8{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c8(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=L(r.shape),a=se({inputs:{x:r},backend:n,attrs:{shape:[o]}}),i=new l8(o),u=n.runWebGLProgram(i,[a],a.dtype),l=se({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(u),l}const d8={kernelName:id,backendName:"webgl",kernelFunc:c8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class p8{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:n,inWidth:r,padInfo:s,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:u,dilationHeight:l,dilationWidth:c}=e,{top:d,left:p}=s;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${p});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${l};

          if (hIn >= 0 && hIn < ${n}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${c};

              if (wIn >= 0 && wIn < ${r}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=vo(s.shape,o.shape,a,i,"NHWC",u);let c;const d=new p8(l);c=n.runWebGLProgram(d,[s,o],"float32");const p=se({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}const f8={kernelName:ud,backendName:"webgl",kernelFunc:h8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m8(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=lg(s,o.length);dg(a.length,u,o);const{path:l,steps:c}=pg(i,u),d=c.length;let p=null,h=a.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=cg(h,u[y]);let w;hg(g)?w=o[y]:(w=rn({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(w));const v=w.shape.slice();for(let b=0;b<x.length;++b)v.splice(x[b],0,1);Pe(w.shape,v)||(w=se({inputs:{x:w},backend:n,attrs:{shape:v}}),f.push(w)),p===null?p=w:(p=Qw({inputs:{a:w,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=vg({inputs:{x:p},backend:n,attrs:{axis:l[m]-(a.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}const g8={kernelName:cd,backendName:"webgl",kernelFunc:m8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y8="return (x >= 0.0) ? x : (exp(x) - 1.0);",x8=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,w8=Ae({opSnippet:y8,packedOpSnippet:x8}),v8={kernelName:nu,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b8="return (b >= 0.0) ? a : a * (b + 1.0);",C8=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,S8=t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new el(C8,r.shape,s.shape):new ma(b8,r.shape,s.shape);return n.runWebGLProgram(o,[r,s],r.dtype)},$8={kernelName:dm,backendName:"webgl",kernelFunc:S8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k8=`
  return vec4(equal(a, b));
`,I8="return float(a == b);",N8=Bt({opSnippet:I8,packedOpSnippet:k8,dtype:"bool",cpuKernelImpl:oj}),T8={kernelName:su,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${rg};
  float a1 = ${sg};
  float a2 = ${og};
  float a3 = ${ag};
  float a4 = ${ig};
  float a5 = ${ug};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,R8=Ae({opSnippet:E8}),_8={kernelName:ru,backendName:"webgl",kernelFunc:R8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=tl+`
  return exp(x);
`,P8=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,WR=Ae({opSnippet:D8,packedOpSnippet:P8,cpuKernelImpl:aj,dtype:"float32"}),A8={kernelName:ou,backendName:"webgl",kernelFunc:WR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u0(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(k(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),se({inputs:{x:o},backend:r,attrs:{shape:i}})}const O8={kernelName:dd,backendName:"webgl",kernelFunc:u0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC="return exp(x) - 1.0;",F8=Ae({opSnippet:BC,packedOpSnippet:BC,cpuKernelImpl:ij}),L8={kernelName:au,backendName:"webgl",kernelFunc:F8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MC{constructor(e,n,r){this.variableNames=["real","imag"];const s=n[1];this.outputShape=n;const o=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=r?`${s}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${s});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${s}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UR(t,e,n){const r=n.texData.get(t.dataId),s=L(t.shape),o=t.shape[t.shape.length-1],a=s/o,i=se({inputs:{x:t},backend:n,attrs:{shape:[a,o]}}),u=i.shape,l=new MC("real",u,e),c=new MC("imag",u,e),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=$o({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=se({inputs:{x:f},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(t){const{inputs:e,backend:n}=t,{input:r}=e;return UR(r,!1,n)}const B8={kernelName:pd,backendName:"webgl",kernelFunc:z8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M8{constructor(e,n){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rp(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||yo(s),o==="string"){const a=it(o,L(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new M8(r,s),i=[[s]];return e.runWebGLProgram(a,[],o,i)}}const V8={kernelName:hd,backendName:"webgl",kernelFunc:Rp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W8{constructor(e){this.variableNames=["Image"],this.outputShape=[];const n=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${n} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${n}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U8={kernelName:fd,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new W8(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VC="return floor(x);",G8=Ae({opSnippet:VC,packedOpSnippet:VC,cpuKernelImpl:uj}),H8={kernelName:iu,backendName:"webgl",kernelFunc:G8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j8=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,K8=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,q8=Bt({opSnippet:j8,packedOpSnippet:K8,dtype:"int32"}),X8={kernelName:uu,backendName:"webgl",kernelFunc:q8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y8{constructor(e){this.variableNames=["A"];const n=sn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);

        vec4 values = ${n.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q8{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const n=sn(),[r,s]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${s}.0, ${r}.0);
            vec4 values = ${n.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${n.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z8={kernelName:nc,backendName:"webgl",kernelFunc:J8};let Ba,$y=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function J8(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r,a=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,[u,l]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],d=[l,u,o];if(i||a){const m=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ba==null||m!==$y)&&($y=m,Ba=document.createElement("canvas").getContext("2d",{willReadFrequently:$y})),Ba.canvas.width=u,Ba.canvas.height=l,Ba.drawImage(s,0,0,u,l),s=Ba.canvas}const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=Vn.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const h=z().getBool("WEBGL_PACK")?new Q8(d):new Y8(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=An(c),y=Xe(s.shape,o.shape,u,d,l,p,!1,m);let g;const x=[],w=a!=null,v=i!=null,b=h==="leakyrelu",S=()=>{const N=[s,o],E=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){const B=se({inputs:{x:R},backend:n,attrs:{shape:[R.shape[0],1,1]}});return x.push(B),B}return R};if(w&&N.push(E(a,c)),v&&N.push(E(i,c)),b){const R=n.makeTensorInfo([],"float32",Es(f,"float32"));N.push(R),x.push(R)}return N};if(y.filterHeight===1&&y.filterWidth===1&&y.dilationHeight===1&&y.dilationWidth===1&&y.strideHeight===1&&y.strideWidth===1&&(y.padInfo.type==="SAME"||y.padInfo.type==="VALID"))g=LR({x:s,filter:o,convInfo:y,backend:n,bias:a,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else if(y.strideWidth<=2&&m==="channelsLast"&&z().getBool("WEBGL_EXP_CONV")){const N=h?gc(h,!0):null,E=new FR(y,w,N,v,b),R=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],F=S();g=n.runWebGLProgram(E,F,"float32",R)}else if(z().getBool("WEBGL_CONV_IM2COL"))g=zR({x:s,filter:o,convInfo:y,backend:n,bias:a,activation:h,preluActivationWeights:i,leakyreluAlpha:f});else{const N=h?gc(h,!1):null,E=new OR(y,w,N,v,b),R=S();g=n.runWebGLProgram(E,R,"float32")}const $=se({inputs:{x:g},backend:n,attrs:{shape:y.outShape}});return x.push(g),x.forEach(N=>n.disposeIntermediateTensorInfo(N)),$}const tX={kernelName:Ci,backendName:"webgl",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nX(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,f=[];let m=c;m==null&&(m=[1,1]),k(Dt(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const y=Xe(s.shape,o.shape,u,m,l,d,!0),g=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=p?gc(p,g):null,w=[s,o],v=a!=null,b=i!=null,S=p==="leakyrelu";if(v&&w.push(a),b&&w.push(i),S){const R=n.makeTensorInfo([],"float32",Es(h,"float32"));w.push(R),f.push(R)}let $;g?$=new VR(y,v,x,b,S):$=new MR(y,v,x,b,S);const N=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],E=n.runWebGLProgram($,w,"float32",N);return f.forEach(R=>n.disposeIntermediateTensorInfo(R)),E}const rX={kernelName:Si,backendName:"webgl",kernelFunc:nX};class sX{constructor(e,n,r,s){this.sliceDim=e,this.strides=n,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const o=We(r.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oX(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=L(r.shape),[u,l,c,d]=kp(r,s),p=se({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),h=se({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const g=n.readSync(s.dataId),x=n.bufferSync(r),w=lj(g,x,r.dtype,l,a,c,d,r.shape,i);return n.makeTensorInfo(u,r.dtype,w.values)}const f=new sX(a,d,[l,c],r.shape),m=n.runWebGLProgram(f,[h,p],h.dtype),y=se({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),y}const aX={kernelName:yd,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iX{constructor(e,n){this.variableNames=["A","indices"],this.outputShape=n,this.rank=n.length;const r=We(this.rank),s=uX(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${s}));
      }
    `}}function uX(t,e){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t.length;s++)s===2?r.push("index"):r.push(`${n[s]}`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=Ie(a,s.shape)[0];if(z().get("DEBUG")){const x=n.readSync(o.dataId),w=s.shape[u];for(let v=0;v<x.length;++v){const b=x[v];k(b<=w-1&&b>=0,()=>`GatherV2: the index value ${b} is not in [0, ${w-1}]`)}}const l=mg(s,o,u,i),c=L(o.shape),d=[],p=se({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=se({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});d.push(p),d.push(h);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const x=n.bufferSync(h),w=n.bufferSync(p),v=cj(w,x,f);return d.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(l.outputShape,v.dtype,v.values)}const m=new iX(p.shape,f),y=n.runWebGLProgram(m,[p,h],p.dtype);d.push(y);const g=se({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return d.forEach(x=>n.disposeIntermediateTensorInfo(x)),g}const lX={kernelName:gd,backendName:"webgl",kernelFunc:GR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cX="return float(a > b);",dX=`
  return vec4(greaterThan(a, b));
`,pX=Bt({opSnippet:cX,packedOpSnippet:dX,cpuKernelImpl:dj,dtype:"bool"}),hX={kernelName:lu,backendName:"webgl",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fX="return float(a >= b);",mX=`
  return vec4(greaterThanEqual(a, b));
`,gX=Bt({opSnippet:fX,packedOpSnippet:mX,dtype:"bool",cpuKernelImpl:pj}),yX={kernelName:cu,backendName:"webgl",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xX(t){const{inputs:e,backend:n}=t,{input:r}=e;return UR(r,!0,n)}const wX={kernelName:xd,backendName:"webgl",kernelFunc:xX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vX="return float(!isnan(x) && !isinf(x));",bX=Ae({opSnippet:vX,dtype:"bool"}),CX={kernelName:pu,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX="return float(isinf(x));",$X=Ae({opSnippet:SX,dtype:"bool"}),kX={kernelName:hu,backendName:"webgl",kernelFunc:$X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX="return float(isnan(x));",NX=Ae({opSnippet:IX,dtype:"bool"}),TX={kernelName:fu,backendName:"webgl",kernelFunc:NX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EX="return float(a < b);",RX=`
  return vec4(lessThan(a, b));
`,_X=Bt({opSnippet:EX,packedOpSnippet:RX,cpuKernelImpl:hj,dtype:"bool"}),DX={kernelName:mu,backendName:"webgl",kernelFunc:_X};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX="return float(a <= b);",AX=`
  return vec4(lessThanEqual(a, b));
`,OX=Bt({opSnippet:PX,packedOpSnippet:AX,cpuKernelImpl:fj,dtype:"bool"}),FX={kernelName:gu,backendName:"webgl",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LX(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=mj(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const zX={kernelName:bd,backendName:"webgl",kernelFunc:LX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX=tl+`
  return x < 0.0 ? 0./0. : log(x);
`,MX=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,VX=Ae({opSnippet:BX,packedOpSnippet:MX,cpuKernelImpl:gj}),WX={kernelName:yu,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX=tl+`
  return log(1.0 + x);
`,GX=Ae({opSnippet:UX}),HX={kernelName:xu,backendName:"webgl",kernelFunc:GX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX="return float(a >= 1.0 && b >= 1.0);",KX=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,qX=Bt({opSnippet:jX,packedOpSnippet:KX,dtype:"bool"}),XX={kernelName:wu,backendName:"webgl",kernelFunc:qX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX="return float(!(x >= 1.0));",QX=Ae({opSnippet:YX}),ZX={kernelName:vu,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX="return float(a >= 1.0 || b >= 1.0);",e7=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,t7=Bt({opSnippet:JX,packedOpSnippet:e7,dtype:"bool"}),n7={kernelName:bu,backendName:"webgl",kernelFunc:t7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class r7{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[];const a=n,i=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${l})`:o===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class s7{constructor(e,n,r,s,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=n,i=e[3]-1;this.outputShape=e;let u;const l=`float(${r}) + float(${s}) * sum`;o===.5?u=`inversesqrt(${l})`:o===1?u=`1.0/(${l})`:u=`exp(log(${l}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o7=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r,l=z().getBool("WEBGL_PACK_NORMALIZATION")?new s7(s.shape,o,a,i,u):new r7(s.shape,o,a,i,u);return n.runWebGLProgram(l,[s],s.dtype)},a7={kernelName:Cd,backendName:"webgl",kernelFunc:o7};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i7{constructor(e,n,r,s,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=n,this.bias=r,this.alpha=s,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${n})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${n} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${s}) * norm + float(${r});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${s})
                * float(${o})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new i7(s.shape,i,u,l,c);return n.runWebGLProgram(d,[s,o,a],s.dtype)},l7={kernelName:pm,backendName:"webgl",kernelFunc:u7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(t,e,n,r){const s=L(e),a=L(t.shape)/s,i=se({inputs:{x:t},attrs:{shape:[a,s]},backend:r}),u=Pa(i,t.dtype,"max",r),l=se({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=s.shape.length,u=Ie(o,s.shape);let l=u;const c=Ye(l,i),d=c!=null,p=n.shouldExecuteOnCPU([s]);let h=s;if(d){if(p){const w=n.texData.get(h.dataId).values,v=new Array(i);for(let $=0;$<v.length;$++)v[$]=s.shape[c[$]];const b=Xw(w,s.shape,s.dtype,c,v);h=n.makeTensorInfo(v,s.dtype);const S=n.texData.get(h.dataId);S.values=b}else h=wg(s,c,n);l=Qe(l.length,i)}bt("max",l,i);const[f,m]=wt(h.shape,l);let y=f;a&&(y=vt(f,u));let g;if(p){const w=n.texData.get(h.dataId).values,v=yj(w,L(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype);const b=n.texData.get(g.dataId);b.values=v}else g=c7(h,m,y,n);return d&&n.disposeIntermediateTensorInfo(h),g}const d7={kernelName:Sd,backendName:"webgl",kernelFunc:HR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p7=Yw+`
  return max(a, b);
`,h7=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Da+`
  return result;
`,f7=Bt({opSnippet:p7,packedOpSnippet:h7,cpuKernelImpl:xj}),m7={kernelName:Cu,backendName:"webgl",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;Np(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1;k(Dt(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const c=jt(s.shape,o,a,l,i,u);if(c.filterWidth===1&&c.filterHeight===1&&Pe(c.inShape,c.outShape))return Rn({inputs:{x:s},backend:n});const d=new yc(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}const y7={kernelName:$d,backendName:"webgl",kernelFunc:g7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=Yn(s.shape,o,a,c,i,l,u),p=new Zw(d,"max",!1);return n.runWebGLProgram(p,[s],s.dtype)}const w7={kernelName:kd,backendName:"webgl",kernelFunc:x7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v7{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,u=a-1-e.padInfo.left,l=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${n}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class b7{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const n=e.strideDepth,r=e.strideHeight,s=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,d=u-1-e.padInfo.front,p=l-1-e.padInfo.top,h=c-1-e.padInfo.left,f=u*l*c-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${p}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${n}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${l};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${r}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${c};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${s}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${l} * ${c} +
                  wR * ${c} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],p=Yn(a.shape,i,u,d,l,c),h=new Zw(p,"max",!0),f=n.runWebGLProgram(h,[a],a.dtype),m=new b7(p),y=n.runWebGLProgram(m,[s,f],a.dtype);return n.disposeIntermediateTensorInfo(f),y}const S7={kernelName:fm,backendName:"webgl",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;Np([o,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=jt(i.shape,u,l,1,c,d),h=!0,f=new yc(p,"max",h),m=n.runWebGLProgram(f,[i],i.dtype),y=new v7(p),g=n.runWebGLProgram(y,[s,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}const k7={kernelName:hm,backendName:"webgl",kernelFunc:$7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(t,e,n,r){let s=new yc(n,"max",!1);const o=r.runWebGLProgram(s,[t],"float32");s=new yc(n,"max",!0,!0,e);const a=r.runWebGLProgram(s,[t],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7={kernelName:Id,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=n;k(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];k(Dt(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=jt(r.shape,s,o,l,a),[d,p]=I7(r,i,c,u);return[d,p]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(t,e,n,r){const s=L(e),a=L(t.shape)/s,i=se({inputs:{x:t},attrs:{shape:[a,s]},backend:r}),u=Pa(i,"float32","mean",r),l=se({inputs:{x:u},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(u),l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7={kernelName:Nd,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{keepDims:s,axis:o}=e,a=n,i=r.shape.length,u=Ie(o,r.shape);let l=u;const c=Ye(l,i),d=c!=null,p=a.shouldExecuteOnCPU([r]),h=[];let f=r;if(d){if(p){const v=a.texData.get(f.dataId).values,b=new Array(i);for(let N=0;N<b.length;N++)b[N]=r.shape[c[N]];const S=Xw(v,r.shape,r.dtype,c,b);f=a.makeTensorInfo(b,r.dtype);const $=a.texData.get(f.dataId);$.values=S}else f=wg(r,c,a);h.push(f),l=Qe(l.length,i)}bt("sum",l,i);const[m,y]=wt(f.shape,l);let g=m;s&&(g=vt(m,u));const x=T7(f,y,g,a);for(const w of h)a.disposeIntermediateTensorInfo(w);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=Ie(o,s.shape);let l=u;const c=Ye(l,i);let d=s;c!=null&&(d=rn({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Qe(l.length,s.shape.length)),bt("min",l,i);const[p,h]=wt(d.shape,l),f=L(h),m=se({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}}),y=Pa(m,m.dtype,"min",n);let g;if(a){const x=vt(p,u);g=se({inputs:{x:y},backend:n,attrs:{shape:x}})}else g=se({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),c!=null&&n.disposeIntermediateTensorInfo(d),g}const _7={kernelName:Td,backendName:"webgl",kernelFunc:R7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7=Yw+`
  return min(a, b);
`,P7=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Da+`
  return result;
`,A7=Bt({opSnippet:D7,packedOpSnippet:P7,cpuKernelImpl:wj}),O7={kernelName:Su,backendName:"webgl",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F7{constructor(e,n,r){this.variableNames=["x"],this.outputShape=n.map((c,d)=>c[0]+e[d]+c[1]);const s=e.length,o=We(s),a=n.map(c=>c[0]).join(","),i=n.map((c,d)=>c[0]+e[d]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l=r==="reflect"?0:1;if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${l};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${l};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${s}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${l};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class L7{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n.map((f,m)=>f[0]+e[m]+f[1]);const s=e.length,o=We(s),a=n.map(f=>f[0]).join(","),i=n.map((f,m)=>f[0]+e[m]).join(","),u=en("rc",s),l=en("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${l.slice(-2).join()})`,p=r==="reflect"?0:1;let h="";if(s===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${p};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${p};
        }
        source -= start;
      `;h=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[s-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${p}) +
                gte * ((end - 1) * 2 - source + ${p});
        source -= start;
      `;h=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${l.join()}), ${d});
        ${u[s-1]} += 1;
        if(${c}) {
          ${f}
          result[1] = getChannel(getX(${l.join()}), ${d});
        }
        rc = outputLoc;
        ${u[s-2]} += 1;
        if(${u[s-2]} < ${this.outputShape[s-2]}) {
          ${f}
          result[2] = getChannel(getX(${l.join()}), ${d});
          ${u[s-1]} += 1;
          if(${c}) {
            ${f}
            result[3] = getChannel(getX(${l.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z7=({inputs:t,backend:e,attrs:n})=>{const{x:r}=t,{paddings:s,mode:o}=n,a=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new L7(r.shape,s,o):new F7(r.shape,s,o);return e.runWebGLProgram(a,[r],r.dtype)},B7={kernelName:Ed,backendName:"webgl",kernelFunc:z7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7=`if (b == 0.0) return NAN;
  return mod(a, b);`,V7=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Da+`
  return result;
`,W7=Bt({opSnippet:M7,packedOpSnippet:V7}),U7={kernelName:$u,backendName:"webgl",kernelFunc:W7};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G7{constructor(e,n,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,r],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${n-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${n-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=`
if (a == b) {
  return 1.0;
};
return a / b;`,j7=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,jR=Bt({opSnippet:H7,packedOpSnippet:j7,checkOutOfBounds:!0}),K7={kernelName:tu,backendName:"webgl",kernelFunc:jR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WC="return a - b;",KR=Bt({opSnippet:WC,packedOpSnippet:WC,supportsComplex:!0,cpuKernelImpl:Mj}),q7={kernelName:Vu,backendName:"webgl",kernelFunc:KR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=Ie([o],s.shape),i=HR({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),u=vt(i.shape,a),l=se({inputs:{x:i},backend:n,attrs:{shape:u}}),c=KR({inputs:{a:s,b:l},backend:n}),d=WR({inputs:{x:c},backend:n}),p=vg({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:!1}}),h=se({inputs:{x:p},backend:n,attrs:{shape:u}}),f=jR({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}const X7={kernelName:ep,backendName:"webgl",kernelFunc:qR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:qR({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new G7(l,c,o),p=[[a]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}const Q7={kernelName:Rd,backendName:"webgl",kernelFunc:Y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z7=yr+`
  return -x;
`,J7=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function e9(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const o=n.texData.get(r.dataId),[a,i]=bj(o.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}let s;return z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?s=new Hs(r.shape,J7):s=new qr(r.shape,Z7),n.runWebGLProgram(s,[r],r.dtype)}const t9={kernelName:_d,backendName:"webgl",kernelFunc:e9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n9=Sp;function r9(t){zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),{selectedIndices:d}=n9(l,c,a,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const s9={kernelName:Dd,backendName:"webgl",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=Gm;function a9(t){zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),{selectedIndices:p,validOutputs:h}=o9(c,d,a,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}const i9={kernelName:mm,backendName:"webgl",kernelFunc:a9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u9=$p;function l9(t){zn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),p=a,h=i,f=u,m=l,{selectedIndices:y,selectedScores:g}=u9(c,d,p,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const c9={kernelName:Pd,backendName:"webgl",kernelFunc:l9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d9{constructor(e,n,r,s){this.variableNames=["indices"],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${s}), float(${r}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p9=t=>{const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,l=L(s.shape),c=new d9(l,a,i,u),d=se({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[d],o);n.disposeIntermediateTensorInfo(d);const h=[...s.shape,a],f=se({inputs:{x:p},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(p),f},h9={kernelName:Od,backendName:"webgl",kernelFunc:p9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nf(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="complex64"){const s=Ep({inputs:{input:r},backend:n}),o=Nf({inputs:{x:s},backend:n}),a=bg({inputs:{input:r},backend:n}),i=Nf({inputs:{x:a},backend:n}),u=$o({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return Rp({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const f9={kernelName:dp,backendName:"webgl",kernelFunc:Nf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Ep({inputs:{input:r},backend:n}),o=XR({inputs:{x:s},backend:n}),a=bg({inputs:{input:r},backend:n}),i=Nf({inputs:{x:a},backend:n}),u=$o({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return Rp({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const m9={kernelName:Ad,backendName:"webgl",kernelFunc:XR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return u0({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{_t(o,c.shape,"All tensors passed to stack must have matching shapes"),k(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(c=>{const d=u0({inputs:{input:c},backend:n,attrs:{dim:s}});return i.push(d),d}),l=AR({inputs:u,backend:n,attrs:{axis:s}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const y9={kernelName:Fd,backendName:"webgl",kernelFunc:g9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x9{constructor(e,n,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((l,c)=>l[0]+e[c]+l[1]);const s=e.length,o=We(s),a=n.map(l=>l[0]).join(","),i=n.map((l,c)=>l[0]+e[c]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);if(s===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w9{constructor(e,n,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=n.map((m,y)=>m[0]+e[y]+m[1]);const s=e.length,o=We(s),a=n.map(m=>m[0]).join(","),i=n.map((m,y)=>m[0]+e[y]).join(","),u=en("rc",s),l=en("source",s),c=`${u[s-1]} < ${this.outputShape[s-1]}`,d=s===1?"source":`vec2(${l.slice(-2).join()})`,p=[`${o} rc = outputLoc;`,`${u[s-1]} += 1;
       if(${c}) {
      `,s===1?"":`}
       rc = outputLoc;
       ${u[s-2]} += 1;
       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,s===1?"":`  ${u[s-1]} += 1;
         if(${c}) {`],h=s===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,y=s===1?2:4;m<y;m++)f+=`
        ${p[m]}
        if (${h}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${l.join()}), ${d});
        }
      `;f+=s===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YR=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;if(L(s.shape)===0){const l=o.map((c,d)=>c[0]+s.shape[d]+c[1]);return Rp({backend:n,attrs:{shape:l,value:a,dtype:s.dtype}})}const i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new w9(s.shape,o,a):new x9(s.shape,o,a),u=[[a]];return n.runWebGLProgram(i,[s],s.dtype,u)},v9={kernelName:Ld,backendName:"webgl",kernelFunc:YR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b9=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,C9=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Da+`
  return result;
`,S9=Bt({opSnippet:b9,packedOpSnippet:C9}),$9={kernelName:Nu,backendName:"webgl",kernelFunc:S9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=s.shape.length,u=[],l=Ie(o,s.shape);let c=l;const d=Ye(c,i);let p=s;d!=null&&(p=rn({inputs:{x:s},backend:n,attrs:{perm:d}}),c=Qe(c.length,i),u.push(p)),bt("prod",c,i);let h;if(n.shouldExecuteOnCPU([p])){const f=n.texData.get(p.dataId).values,{outVals:m,outShape:y,outDtype:g}=Sj(p.shape,p.dtype,f,c);h=n.makeTensorInfo(y,g,m)}else{const[f,m]=wt(p.shape,c),y=L(m),g=se({inputs:{x:p},backend:n,attrs:{shape:[-1,y]}}),x=mp(s.dtype),w=Pa(g,x,"prod",n);h=se({inputs:{x:w},backend:n,attrs:{shape:f}}),u.push(g),u.push(w)}if(a){u.push(h);const f=vt(h.shape,l);h=se({inputs:{x:h},backend:n,attrs:{shape:f}})}return u.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}const I9={kernelName:Bd,backendName:"webgl",kernelFunc:k9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=r,u=s.map(g=>n.readSync(g.dataId)),l=s.map(g=>g.shape),c=n.readSync(o.dataId),d=n.readSync(a.dataId),[p,h,f]=$j(u,l,c,o.shape,o.dtype,d,a.shape,i),m=p.map(g=>n.makeTensorInfo([g.length],"int32",g)),y=n.makeTensorInfo(f,o.dtype,h);return m.concat([y])}const T9={kernelName:gm,backendName:"webgl",kernelFunc:N9};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(t){const{inputs:e,backend:n}=t,{starts:r,limits:s,deltas:o}=e,a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=kj(a,r.shape,r.dtype,i,s.shape,u,o.shape),d=n.makeTensorInfo([l.length],"int32",l),p=n.makeTensorInfo([c.length],r.dtype,c);return[d,p]}const R9={kernelName:ym,backendName:"webgl",kernelFunc:E9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),d=n.readSync(a.dataId),p=i.map(y=>n.readSync(y.dataId)),h=i.map(y=>y.shape),[f,m]=Ij(l,s.shape,c,o.shape,o.dtype,d,a.shape,p,h,u);return n.makeTensorInfo(f,o.dtype,m)}const D9={kernelName:xm,backendName:"webgl",kernelFunc:_9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QR=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:a}=n,i=Nj(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},P9={kernelName:Md,backendName:"webgl",kernelFunc:QR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A9="return 1.0 / x;",O9=Ae({opSnippet:A9}),F9={kernelName:Tu,backendName:"webgl",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L9=yr+`
  return (x < 0.0) ? 0.0 : x;
`,z9=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,B9=Ae({opSnippet:L9,packedOpSnippet:z9}),M9={kernelName:Eu,backendName:"webgl",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=yr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,W9=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,U9=Ae({opSnippet:V9,packedOpSnippet:W9}),G9={kernelName:Ru,backendName:"webgl",kernelFunc:U9};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H9{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,l]=e;this.outputShape=[a,n,r,l];const c=[s&&n>1?i-1:i,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r];let p;o?p="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class j9{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,l]=e;this.outputShape=[a,n,r,l];const c=[s&&n>1?i-1:i,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r];let p;o?p="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,l]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new j9(s.shape,u,l,o,a):new H9(s.shape,u,l,o,a);return n.runWebGLProgram(c,[s],"float32")}const q9={kernelName:Gd,backendName:"webgl",kernelFunc:K9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X9{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],l=[r&&a>1?a-1:a,r&&i>1?i-1:i],c=u[0]/l[0],d=u[1]/l[1],p=1/c,h=1/d,f=Math.ceil(p)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${h});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new X9(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const Q9={kernelName:vm,backendName:"webgl",kernelFunc:Y9};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z9{constructor(e,n,r,s,o){this.variableNames=["A"],this.outputShape=[];const[a,i,u,l]=e;this.outputShape=[a,n,r,l];const c=[s&&n>1?i-1:i,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r],p=s?"0.5":"0.0";let h;o?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${c[0]/d[0]},
          ${c[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class J9{constructor(e,n,r,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,u,l]=e;this.outputShape=[a,n,r,l];const c=[s&&n>1?i-1:i,s&&r>1?u-1:u],d=[s&&n>1?n-1:n,s&&r>1?r-1:r],p=s?"0.5":"0.0";let h;o?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${c[0]/d[0]},
          ${c[1]/d[1]},
          ${c[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${l-1};
        bool hasNextRow = coords.z < ${r-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eY(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,l]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new J9(s.shape,u,l,o,a):new Z9(s.shape,u,l,o,a);return n.runWebGLProgram(c,[s],s.dtype)}const tY={kernelName:Ud,backendName:"webgl",kernelFunc:eY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nY{constructor(e,n,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=n;const[,s,o]=n,[,a,i]=e,u=[r&&a>1?s-1:s,r&&i>1?o-1:o],l=[r&&a>1?a-1:a,r&&i>1?i-1:i],c=u[0]/l[0],d=u[1]/l[1],p=1/c,h=1/d,f=Math.ceil(p)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${c});
        const float widthScale = float(${d});

        const float invHeightScale = float(${p});
        const float invWidthScale = float(${h});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${l[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${l[1]}));

            int sourceNearestRow = int(min(
                float(int(${s}) - 1),
                ${r} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${r} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rY(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,i=new nY(o.shape,s.shape,a);return n.runWebGLProgram(i,[o],o.dtype)}const sY={kernelName:wm,backendName:"webgl",kernelFunc:rY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oY{constructor(e,n){this.variableNames=["x"];const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=e,r===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const s=i=>n.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,u)=>s(u)).join(","),a=We(r);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aY{constructor(e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=e.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=e;const s=en("rc",r),o=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,a=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,i=We(r);r===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(s.slice())};
          if(${o}){
            result.g = ${l(s.slice())};
          }
          if(${a}) {
            result.b = ${c(s.slice())};
            if(${o}) {
              result.a = ${d(s.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(f){return p(f)}function l(f){return f[r-1]="("+f[r-1]+" + 1)",p(f)}function c(f){return f[r-2]="("+f[r-2]+" + 1)",p(f)}function d(f){return f[r-1]="("+f[r-1]+" + 1)",f[r-2]="("+f[r-2]+" + 1)",p(f)}function p(f){const m=e.map((x,w)=>h(w,f)),y=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${y}), vec2(${g}))`}function h(f,m){return n.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,a=s.shape.length,i=Ie(o,s.shape);if(a===0)return Rn({inputs:{x:s},backend:n});const u=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aY(s.shape,i):new oY(s.shape,i);return n.runWebGLProgram(u,[s],s.dtype)}const uY={kernelName:Hd,backendName:"webgl",kernelFunc:iY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lY{constructor(e,n){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=e[1],s=e[2];this.outputShape=e;let o="";typeof n=="number"?o=`float outputValue = ${n.toFixed(2)};`:o=`
        vec3 fill = vec3(${n.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cY={kernelName:pp,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=new lY(r.shape,o),[l,c]=Zm(a,r.shape[1],r.shape[2]),d=[[l,c,Math.sin(s),Math.cos(s)]];return i.runWebGLProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dY=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,pY=Ae({opSnippet:dY}),hY={kernelName:_u,backendName:"webgl",kernelFunc:pY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fY="return inversesqrt(x);",mY=Ae({opSnippet:fY,cpuKernelImpl:Tj}),gY={kernelName:Du,backendName:"webgl",kernelFunc:mY};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jw{constructor(e,n,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=We(o.length),c=We(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const p=`getIndices(${d})`;let h="";s===1?h="i":s===2&&(h="i, coords[1]");const f=`getUpdates(${h})`;let m="";u&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${n}; j++) {
              int index = round(${p});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${f};
              found = true;
            }
          }
          setOutput(mix(${y}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yY{constructor(e,n,r,s,o,a,i=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=We(o.length),c=We(a.length);let d="";r===1?d="i":r===2&&(d="i, j");const p=`getIndices(${d})`;let h="";s===1?h="i":s===2&&(h="i, coords[1]");const f=`getUpdates(${h})`;let m="";u&&(m="coords[0], coords[1]");const y=`getDefaultValue(${m})`,g=n>1?"strides[j]":"strides",x=n>1?"strides[j + 1]":"strides";this.userCode=`
        ${l} strides = ${l}(${o});

        void main() {
          ${c} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${n}; j+=2) {
              ivec4 index = round(${p});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${n}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${f};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${y}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Wr(o,s,a),p=[d/l,l];if(d===0)return n.makeTensorInfo(a,s.dtype);const h=se({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=se({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;z().getBool("WEBGL_PACK")?y=new yY(u,i,h.shape.length,f.shape.length,c,p):y=new Jw(u,i,h.shape.length,f.shape.length,c,p);const g=n.runWebGLProgram(y,[f,h,m],f.dtype),x=se({inputs:{x:g},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),x}const wY={kernelName:jd,backendName:"webgl",kernelFunc:xY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vY{constructor(e,n,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,r];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(n+1))}; ++i) { if (left >= right) break;`,i=z().getNumber("WEBGL_VERSION")===2?o:a,u=s==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=new vY(s.shape[0],s.shape[1],o.shape[1],a),u=[[s.shape[1]]];return n.runWebGLProgram(i,[s,o],"int32",u)}const CY={kernelName:qd,backendName:"webgl",kernelFunc:bY};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SY{constructor(e,n,r){this.variableNames=["c","a","b"],this.outputShape=n;let s,o;if(r>4)throw Error(`Where for rank ${r} is not yet supported`);if(r===1)o="resRC",s="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],l=[];for(let c=0;c<n.length;c++)l.push(`${i[c]}`),c<e&&u.push(`${i[c]}`);s=u.join(),o=l.join()}const a=We(r);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${s});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Y(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,a=new SY(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,o],$t(s.dtype,o.dtype))}const kY={kernelName:Xd,backendName:"webgl",kernelFunc:$Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${tg};
  float scale = ${ng};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,NY=Ae({opSnippet:IY}),TY={kernelName:Pu,backendName:"webgl",kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EY=tl+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,RY=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,_Y=Ae({opSnippet:EY,packedOpSnippet:RY,cpuKernelImpl:Rj}),DY={kernelName:Lu,backendName:"webgl",kernelFunc:_Y};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,AY=Ae({opSnippet:PY}),OY={kernelName:Fu,backendName:"webgl",kernelFunc:AY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FY=tl+`
  return sin(x);
`,LY=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Da}
  return result;
`,zY=Ae({opSnippet:FY,packedOpSnippet:LY}),BY={kernelName:Au,backendName:"webgl",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MY=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,VY=Ae({opSnippet:MY}),WY={kernelName:Ou,backendName:"webgl",kernelFunc:VY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,GY=Ae({opSnippet:UY}),HY={kernelName:zu,backendName:"webgl",kernelFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jY=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;k(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((g,x)=>g*x),u=[[0,0]];u.push(...a);for(let g=1+o.length;g<s.shape.length;++g)u.push([0,0]);const l=[],c=YR({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),d=Na(c.shape,o,i,!1),p=Ta(d.length,o.length,!1),h=Ea(c.shape,o,i,!1),f=se({inputs:{x:c},backend:n,attrs:{shape:d}}),m=rn({inputs:{x:f},backend:n,attrs:{perm:p}}),y=se({inputs:{x:m},backend:n,attrs:{shape:h}});return l.push(c),l.push(f),l.push(m),l.forEach(g=>n.disposeIntermediateTensorInfo(g)),y},KY={kernelName:Zd,backendName:"webgl",kernelFunc:jY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(o.dataId),c=n.readSync(a.dataId)[0],[d,p,h,f,m]=Dj(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const XY={kernelName:bm,backendName:"webgl",kernelFunc:qY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YY(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.readSync(s.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(o.dataId)),[l,c,d]=Pj(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const QY={kernelName:Cm,backendName:"webgl",kernelFunc:YY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=bR(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const JY={kernelName:tp,backendName:"webgl",kernelFunc:ZY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eQ(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=n.readSync(o.dataId),[l,c]=bR(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}const tQ={kernelName:np,backendName:"webgl",kernelFunc:eQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nQ(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Wr(o,s,i),h=!1;if(o.dtype==="string"){const g=n.bufferSync(s),x=n.bufferSync(o),w=fr(n.readSync(a.dataId)[0]),v=Ej(g,x,i,p,c,l,u,d,w,h);return n.makeTensorInfo(i,v.dtype,v.values)}const f=new Jw(l,u,s.shape.length,o.shape.length,d,[p,1],h),m=n.runWebGLProgram(f,[o,s,a],o.dtype),y=se({inputs:{x:m},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(m),y}const rQ={kernelName:rp,backendName:"webgl",kernelFunc:nQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ie(a,s.shape)[0],u=fg(s,o,i),l=s.shape.length,c=new Array(l).fill(0),d=s.shape.slice();return u.map(p=>{const h=[...d];h[i]=p;const f=nl({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});return c[i]+=p,f})}const oQ={kernelName:Jd,backendName:"webgl",kernelFunc:sQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UC="return sqrt(x);",aQ=Ae({opSnippet:UC,packedOpSnippet:UC,cpuKernelImpl:Aj}),iQ={kernelName:Bu,backendName:"webgl",kernelFunc:aQ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uQ="return x * x;",lQ=Ae({opSnippet:uQ}),cQ={kernelName:Sm,backendName:"webgl",kernelFunc:lQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GC="return (a - b) * (a - b);",dQ=Bt({opSnippet:GC,packedOpSnippet:GC}),pQ={kernelName:Mu,backendName:"webgl",kernelFunc:dQ};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;if(s.dtype!=="string")throw new Error("Input must be of datatype string");const o=n.readSync(s.dataId),a=Lr(o),i=Oj(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}const fQ={kernelName:sp,backendName:"webgl",kernelFunc:hQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mQ({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=yr+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new qr(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const gQ={kernelName:Hu,backendName:"webgl",kernelFunc:mQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yQ{constructor(e,n,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,o=We(r.length),a=We(r.length);let i="";if(s===1)i="coords * strides + begin";else{let u=0;i=r.map((l,c)=>(u++,r.length===1?`coords * strides[${c}] + begin[${c}]`:`coords[${u-1}] * strides[${c}] + begin[${c}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${n});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:w,strides:v}=Xm(s.shape,o,a,i,u,l,c,d,p);let b;if(m)b=se({inputs:{x:s},backend:n,attrs:{shape:f}});else if(y||g){k(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const $=Km(x,w,v),N=nl({inputs:{x:s},backend:n,attrs:{begin:x,size:$}});b=se({inputs:{x:N},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(N)}else if(n.shouldExecuteOnCPU([s])){const N=n.readSync(s.dataId),E=be(s.shape,s.dtype,N),R=Fj(h,E,v,x);b=n.makeTensorInfo(f,s.dtype,R.values)}else{const N=new yQ(x,v,h);b=n.runWebGLProgram(N,[s],s.dtype)}const S=se({inputs:{x:b},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(b),S}const wQ={kernelName:op,backendName:"webgl",kernelFunc:xQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vQ(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=e,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=Lj(p,h,s,o,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const bQ={kernelName:ap,backendName:"webgl",kernelFunc:vQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CQ(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.readSync(o.dataId),u=n.readSync(a.dataId)[0],[l,c,d]=zj(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const SQ={kernelName:$m,backendName:"webgl",kernelFunc:CQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $Q(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(o.dataId),i=Bj(a,s);return n.makeTensorInfo(o.shape,"int32",i)}const kQ={kernelName:km,backendName:"webgl",kernelFunc:$Q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IQ="return tan(x);",NQ=Ae({opSnippet:IQ}),TQ={kernelName:Wu,backendName:"webgl",kernelFunc:NQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EQ=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,RQ=Ae({opSnippet:EQ}),_Q={kernelName:Uu,backendName:"webgl",kernelFunc:RQ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DQ(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Wr(a,o,s.shape),p=[d/l,l];if(d===0)return n.makeTensorInfo(s.shape,o.dtype);const h=se({inputs:{x:o},backend:n,attrs:{shape:[u,i]}}),f=se({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=se({inputs:{x:s},backend:n,attrs:{shape:p}}),y=new Jw(u,i,h.shape.length,f.shape.length,c,p,!1,!0),g=n.runWebGLProgram(y,[f,h,m],m.dtype),x=se({inputs:{x:g},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),x}const PQ={kernelName:Kd,backendName:"webgl",kernelFunc:DQ};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AQ{constructor(e,n){this.variableNames=["A"];const r=new Array(e.length);for(let a=0;a<r.length;a++)r[a]=e[a]*n[a];this.outputShape=r,this.rank=r.length;const s=We(this.rank),o=OQ(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function OQ(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<t.length;s++)r.push(`imod(${n[s]}, ${t[s]})`);return r.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if(s.dtype==="string"||s.shape.length>5){const u=n.readSync(s.dataId),l=s.dtype==="string"?u.map(p=>fr(p)):u,c=be(s.shape,s.dtype,l),d=Vj(c,o);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new AQ(s.shape,o);return n.runWebGLProgram(a,[s],s.dtype)}const FQ={kernelName:Gu,backendName:"webgl",kernelFunc:ZR};class LQ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class zQ{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(t,e){e!==null&&t.disposeIntermediateTensorInfo(e)}function HC(t){let e=1;for(;e<t;)e*=2;return e}function BQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r,i=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<i||o>u){const R=n.readSync(s.dataId),[F,B]=Wj(R,l,s.dtype,o,a);return[n.makeTensorInfo(F.shape,F.dtype,F.values),n.makeTensorInfo(B.shape,B.dtype,B.values)]}if(o===0)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(c===1)return[s,Rp({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(s.dataId),p=d!==null&&d.isPacked,h=p?n.unpackTensor(s):s,m=L(l)/c,y=se({inputs:{x:h},attrs:{shape:[m,c]},backend:n});p&&Eo(n,h);const g=HC(o),x=HC(c);let w=null;const v=()=>w===null?[y,y]:[y,w],b=(R,F,B)=>{const M=v(),V=new LQ(B),H=[[c],[w===null?1:0],[Number.NEGATIVE_INFINITY],[R],[F]],q=w;w=n.runWebGLProgram(V,M,"int32",H),Eo(n,q)};for(let R=1;R<g;R*=2){const F=R*2;for(let B=R;B>=1;B/=2)b(F,B,[m,x])}for(let R=x;R>g;R/=2){const F=v(),B=new zQ([m,R/2]),V=[[c],[w===null?1:0],[g]],W=w;w=n.runWebGLProgram(B,F,"int32",V),Eo(n,W);const H=g/2,q=H*2;for(let O=H;O>=1;O/=2)b(q,O,w.shape)}let S=w;w=nl({inputs:{x:w},backend:n,attrs:{begin:0,size:[m,o]}}),Eo(n,S);let $=GR({inputs:{x:y,indices:w},backend:n,attrs:{axis:1,batchDims:1}});Eo(n,y);const N=l.slice(0,-1);N.push(o),S=w,w=se({inputs:{x:w},attrs:{shape:N},backend:n}),Eo(n,S);const E=$;return $=se({inputs:{x:$},attrs:{shape:N},backend:n}),Eo(n,E),[$,w]}const MQ={kernelName:ip,backendName:"webgl",kernelFunc:BQ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VQ{constructor(e,n,r,s,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=r==="nearest"?1:2;let u;switch(s){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${n}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${n}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WQ(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],y=[c,f,m,h],g=new VQ(d,p,a,i,u,y);return n.runWebGLProgram(g,[s,o],"float32")}const UQ={kernelName:up,backendName:"webgl",kernelFunc:WQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GQ(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;Np(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(o.dataId),{outputValues:i,outputShape:u,indices:l}=Uj(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}const HQ={kernelName:Im,backendName:"webgl",kernelFunc:GQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jQ(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(l[c++]=a.shape[m]);const d=[],p=new Array(i).fill(0),h=a.shape.slice();h[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[o]=m;const y=nl({inputs:{x:a},backend:n,attrs:{begin:p,size:h}}),g=se({inputs:{x:y},backend:n,attrs:{shape:l}});f[m]=g,d.push(y)}return d.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const KQ={kernelName:lp,backendName:"webgl",kernelFunc:jQ};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qQ{constructor(e,n){this.variableNames=["x","segmentIds"];const r=e.windowSize,s=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/r);this.outputShape=[s,i];const u="0.0",l="sumValue",c=Math.floor(r/4)*4,d=r%4,p=`
        sumValue += dot(values, segFilter);
    `;let h="";o%r>0&&(h=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%r>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${r}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${c}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${p}
        }

        int inIdx = inOffset + ${c};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${p}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${p}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${p}
        }
        setOutput(${l});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XQ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let l=0;const c=Ye([l],i);let d=s;c!=null&&(d=rn({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(d),l=Qe(1,i)[0]);const p=Ow(d.shape,l,a),h=L([d.shape[l]]),f=se({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=mp(s.dtype),y=(v,b,S,$,N)=>{const E=v.shape[0],R=v.shape[1],F=iE(R,N),B={windowSize:F,inSize:R,batchSize:E,numSegments:N},M=new qQ(B,b),V=n.compileAndRun(M,[v,S],$);if(u.push(V),V.shape[1]===N)return V;const W=QR({backend:n,attrs:{start:0,stop:N,step:1,dtype:"float32"}}),H=ZR({inputs:{x:W},backend:n,attrs:{reps:[R/F]}});return u.push(W),u.push(H),y(V,b,H,$,N)},g=y(f,"unsortedSegmentSum",o,m,a),x=se({inputs:{x:g},backend:n,attrs:{shape:p}});let w=x;if(c!=null){u.push(x);const v=ka(c);w=rn({inputs:{x:w},backend:n,attrs:{perm:v}})}return u.forEach(v=>n.disposeIntermediateTensorInfo(v)),w}const YQ={kernelName:cp,backendName:"webgl",kernelFunc:XQ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QQ=[A5,F5,B5,W5,G5,K5,X5,Q5,tK,rK,aK,lK,pK,gK,wK,bK,SK,NK,EK,_K,OK,WK,GK,qK,YK,nq,sq,uq,y5,dq,gq,vq,Iq,Eq,_q,Pq,Oq,Bq,Wq,Hq,Kq,Xq,Qq,e8,n8,a8,u8,d8,f8,g8,v8,$8,T8,_8,A8,O8,L8,B8,V8,U8,H8,X8,Z8,tX,rX,aX,lX,hX,yX,g5,wX,fq,CX,kX,TX,w5,DX,FX,zX,WX,HX,XX,ZX,n7,a7,l7,d7,m7,y7,w7,S7,k7,N7,E7,_7,O7,B7,U7,Q7,C5,t9,s9,i9,c9,ZK,h9,m9,y9,v9,$9,b5,I9,T9,R9,D9,P9,JK,K7,F9,M9,G9,$5,q9,Q9,tY,sY,uY,cY,hY,gY,wY,CY,kY,TY,DY,OY,BY,WY,MK,X7,HY,KY,XY,QY,JY,tQ,rQ,oQ,iQ,cQ,pQ,fQ,gQ,wQ,bQ,SQ,kQ,q7,_5,TQ,_Q,PQ,FQ,MQ,UQ,D5,HQ,KQ,YQ,f9];for(const t of QQ)hp(t);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZQ=zm;class Cg extends _c{nextDataId(){return Cg.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new rm(this,wn())}write(e,n,r){this.firstUse&&(this.firstUse=!1,z().get("IS_NODE")&&zn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:r,refCount:1}),s}makeTensorInfo(e,n,r){let s;if(n==="string"&&r!=null&&r.length>0&&Ir(r[0])){const o=r.map(a=>_r(a));s=this.write(o,e,n)}else s=this.write(r,e,n);return{dataId:s,shape:e,dtype:n}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const n=this.data.get(e);n.refCount++}decRef(e){if(this.data.has(e)){const n=this.data.get(e);n.refCount--}}move(e,n,r,s,o){this.data.set(e,{values:n,dtype:s,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:n,complexTensorInfos:r}=this.data.get(e);if(n==="complex64"){const s=this.readSync(r.real.dataId),o=this.readSync(r.imag.dataId);return Fr(s,o)}return Ol(this.data.get(e).values,n)}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>fr(s));return be(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return be(e.shape,e.dtype,n)}makeOutput(e,n,r){return wn().makeTensorFromTensorInfo(this.makeTensorInfo(n,r,e),this)}disposeData(e,n=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!n&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(e);r!=null&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const n=bn();return e(),{kernelMs:bn()-n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){he([e],"where");const n=this.readSync(e.dataId);return ZQ(e.shape,n)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Cg.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Nm("cpu",()=>new Cg,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JR=Me(nu,t=>t>=0?t:Math.exp(t)-1),JQ={kernelName:nu,backendName:"cpu",kernelFunc:JR};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r;he([s],"leakyRelu");const a=L(s.shape),i=n.data.get(s.dataId).values,u=xt("float32",a);for(let l=0;l<i.length;l++)u[l]=i[l]<0?o*i[l]:i[l];return n.makeTensorInfo(s.shape,"float32",u)}const eZ={kernelName:vd,backendName:"cpu",kernelFunc:e3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tZ=mt((t,e)=>t<0?e*t:t);function t3(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e;he([r,s],"prelu");const o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[i,u]=tZ(r.shape,s.shape,o,a,"float32");return n.makeTensorInfo(u,"float32",i)}const nZ={kernelName:zd,backendName:"cpu",kernelFunc:t3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n3=Me(Eu,t=>Math.max(0,t)),rZ={kernelName:Eu,backendName:"cpu",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r3=Me(Ru,t=>Math.min(Math.max(0,t),6)),sZ={kernelName:Ru,backendName:"cpu",kernelFunc:r3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tf(t,e,n,r,s){if(n==="linear")return ts({inputs:{x:e},backend:t});if(n==="relu")return n3({inputs:{x:e},backend:t});if(n==="elu")return JR({inputs:{x:e},backend:t});if(n==="relu6")return r3({inputs:{x:e},backend:t});if(n==="prelu")return t3({inputs:{x:e,alpha:r},backend:t});if(n==="leakyrelu")return e3({inputs:{x:e},backend:t,attrs:{alpha:s}});if(n==="sigmoid")return rR({inputs:{x:e},backend:t});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{shape:o}=r,a=L(s.shape),i=om(o,a),u=L(i);k(a===u,()=>`The new shape (${i}) has ${u} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(l.complexTensorInfos!=null){const c=l.complexTensorInfos.real,d=l.complexTensorInfos.imag;c.shape=i,d.shape=i}return{dataId:s.dataId,shape:i,dtype:s.dtype}}const oZ={kernelName:Wd,backendName:"cpu",kernelFunc:qe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s3(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;he([s,o],"matMul");const u=s.shape.length,l=o.shape.length,c=a?s.shape[u-2]:s.shape[u-1],d=i?o.shape[l-1]:o.shape[l-2],p=a?s.shape[u-1]:s.shape[u-2],h=i?o.shape[l-2]:o.shape[l-1],f=s.shape.slice(0,-2),m=o.shape.slice(0,-2),y=L(f),g=L(m),w=$e(s.shape.slice(0,-2),o.shape.slice(0,-2)).concat([p,h]);k(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${s.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const v=a?[y,c,p]:[y,p,c],b=i?[g,h,d]:[g,d,h],S=qe({inputs:{x:s},backend:n,attrs:{shape:v}}),$=qe({inputs:{x:o},backend:n,attrs:{shape:b}}),N=a?S.shape[1]:S.shape[2],E=a?S.shape[2]:S.shape[1],R=i?$.shape[1]:$.shape[2],F=Math.max(y,g),B=n.data.get(S.dataId).values,M=n.data.get($.dataId).values,V=fe(S.shape),W=fe($.shape),[H,q,O]=a?[V[0],1,V[1]]:[V[0],V[1],1],[U,j,T]=i?[1,W[1],W[0]]:[W[1],1,W[0]],A=E*R,_=be([F,E,R],S.dtype),G=_.values,K=n.blockSize;for(let Q=0;Q<F;Q++){const Z=Q%y,ne=Q%g;for(let de=0;de<E;de+=K){const ye=Math.min(de+K,E);for(let ge=0;ge<R;ge+=K){const Ce=Math.min(ge+K,R);for(let Te=0;Te<N;Te+=K){const xe=Math.min(Te+K,N);for(let De=de;De<ye;De++)for(let Ee=ge;Ee<Ce;Ee++){let Se=0;for(let ze=Te;ze<xe;ze++){const on=B[Z*H+De*q+ze*O],Ze=M[ze*U+Ee*j+ne*T];Se+=on*Ze}G[Q*A+(De*R+Ee)]+=Se}}}}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo($),n.makeTensorInfo(w,_.dtype,_.values)}const aZ={kernelName:Mc,backendName:"cpu",kernelFunc:s3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iZ(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=s3({inputs:{a:s,b:o},attrs:{transposeA:u,transposeB:l},backend:n}),a&&(h=Ai({inputs:{a:p,b:a},backend:n}),m.push(p),p=h),c&&(f=Tf(n,p,c,i,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}const uZ={kernelName:bi,backendName:"cpu",kernelFunc:iZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lZ=Me(Ui,t=>Math.acos(t)),cZ={kernelName:Ui,backendName:"cpu",kernelFunc:lZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dZ=Me(Gi,t=>Math.acosh(t)),pZ={kernelName:Gi,backendName:"cpu",kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hZ(t){const{inputs:e,backend:n}=t,r=e;he(e,"addN");const s=r.map(i=>n.data.get(i.dataId).values),o=be(r[0].shape,r[0].dtype),a=o.values;for(let i=0;i<r.length;i++){const u=s[i];for(let l=0;l<a.length;l++)a[l]+=u[l]}return n.makeTensorInfo(o.shape,o.dtype,o.values)}const fZ={kernelName:Pc,backendName:"cpu",kernelFunc:hZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;he(s,"all");const i=Ie(o,s.shape);let u=i;const l=Ye(u,s.shape.length);let c=s;l!=null&&(c=pn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Qe(u.length,s.shape.length)),bt("all",u,c.shape.length);const[d,p]=wt(c.shape,u),h=L(p),f=Rt(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*h;let w=m[x];for(let v=0;v<h;++v){const b=m[x+v];w=w&&b}f[g]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(a){const g=vt(d,i),x=qe({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const gZ={kernelName:Ac,backendName:"cpu",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;he(s,"any");const i=Ie(o,s.shape);let u=i;const l=Ye(u,s.shape.length);let c=s;l!=null&&(c=pn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Qe(u.length,s.shape.length)),bt("any",u,c.shape.length);const[d,p]=wt(c.shape,u),h=L(p),f=Rt(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*h;let w=m[x];for(let v=0;v<h;++v){const b=m[x+v];w=w||b}f[g]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(a){const g=vt(d,i),x=qe({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const xZ={kernelName:Oc,backendName:"cpu",kernelFunc:yZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;he(s,"argMax");let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=pn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),a=[a[0]],bt("argMax",a,u.shape.length);const[c,d]=wt(u.shape,a),p=L(c),h=Rt(p,"int32"),f=L(d),m=n.data.get(u.dataId).values;for(let y=0;y<h.length;++y){const g=y*f;let x=m[g],w=0;for(let v=0;v<f;++v){const b=m[g+v];b>x&&(x=b,w=v)}h[y]=w}return l.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",h)}const vZ={kernelName:Fc,backendName:"cpu",kernelFunc:wZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;he(s,"argMin");let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=pn({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),a=[a[0]],bt("argMin",a,u.shape.length);const[c,d]=wt(u.shape,a),p=L(c),h=Rt(p,"int32"),f=L(d),m=n.data.get(u.dataId).values;for(let y=0;y<h.length;++y){const g=y*f;let x=m[g],w=0;for(let v=0;v<f;++v){const b=m[g+v];b<x&&(x=b,w=v)}h[y]=w}return l.forEach(y=>n.disposeIntermediateTensorInfo(y)),n.makeTensorInfo(c,"int32",h)}const CZ={kernelName:Lc,backendName:"cpu",kernelFunc:bZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SZ=Me(Hi,t=>Math.asin(t)),$Z={kernelName:Hi,backendName:"cpu",kernelFunc:SZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kZ=Me(ji,t=>Math.asinh(t)),IZ={kernelName:ji,backendName:"cpu",kernelFunc:kZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NZ=Me(Ki,t=>Math.atan(t)),TZ={kernelName:Ki,backendName:"cpu",kernelFunc:NZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EZ=mt((t,e)=>Math.atan2(t,e)),RZ=kt(Xi,EZ),_Z={kernelName:Xi,backendName:"cpu",kernelFunc:RZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DZ=Me(qi,t=>Math.atanh(t)),PZ={kernelName:qi,backendName:"cpu",kernelFunc:DZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(t,e,n,r,s,o){const a=s.strideHeight,i=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,h=s.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=be(s.outShape,n),y=m.values,g=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],w=s.outShape[3];for(let v=0;v<s.batchSize;++v){const b=v*g,S=v*r[0];for(let $=0;$<s.inChannels;++$)for(let N=0;N<s.outHeight;++N){const E=N*a-p,R=Math.max(0,E),F=Math.min(s.inHeight,c+E),B=b+N*x;for(let M=0;M<s.outWidth;++M){const V=M*i-h,W=Math.max(0,V),H=Math.min(s.inWidth,d+V);let q=f,O=0,U=0;for(let T=R;T<F;T+=u){const A=S+T*r[1];for(let _=W;_<H;_+=l){const G=A+_*r[2],K=t[G+$];o==="max"&&K>q?q=K:o==="avg"&&(O+=K,U++)}if(isNaN(q))break}const j=B+M*w+$;y[j]=o==="avg"?O/U:q}}}return m}function o3(t,e,n,r,s=!1,o=!1){const a=be(r.outShape,"int32"),i=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,p=r.effectiveFilterWidth,h=r.padInfo.top,f=r.padInfo.left,m=be(e,n,t);for(let y=0;y<r.batchSize;++y)for(let g=0;g<r.inChannels;++g)for(let x=0;x<r.outHeight;++x){const w=x*i-h;let v=w;for(;v<0;)v+=l;const b=Math.min(r.inHeight,d+w);for(let S=0;S<r.outWidth;++S){const $=S*u-f;let N=$;for(;N<0;)N+=c;const E=Math.min(r.inWidth,p+$);let R=Number.NEGATIVE_INFINITY,F=-1;for(let B=v;B<b;B+=l){const M=B-w;for(let V=N;V<E;V+=c){const W=V-$,H=m.get(y,B,V,g);H>R&&(R=H,s?F=o?((y*r.inHeight+B)*r.inWidth+V)*r.inChannels+g:(B*r.inWidth+V)*r.inChannels+g:F=M*p+W)}}a.set(F,y,x,S,g)}}return a}function a3(t,e,n,r,s,o){const a=s.strideDepth,i=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,d=s.dilationWidth,p=s.effectiveFilterDepth,h=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,y=s.padInfo.top,g=s.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,w=be(s.outShape,n),v=w.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[2]*s.outShape[3]*s.outShape[4],$=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let E=0;E<s.batchSize;++E){const R=E*b,F=E*r[0];for(let B=0;B<s.inChannels;++B)for(let M=0;M<s.outDepth;++M){const V=M*a-m;let W=V;for(;W<0;)W+=l;const H=Math.min(s.inDepth,p+V),q=R+M*S;for(let O=0;O<s.outHeight;++O){const U=O*i-y;let j=U;for(;j<0;)j+=c;const T=Math.min(s.inHeight,h+U),A=q+O*$;for(let _=0;_<s.outWidth;++_){const G=_*u-g;let K=G;for(;K<0;)K+=d;const Q=Math.min(s.inWidth,f+G),Z=A+_*N;let ne=x,de=0,ye=0;for(let Ce=W;Ce<H;Ce+=l){const Te=F+Ce*r[1];for(let xe=j;xe<T;xe+=c){const De=Te+xe*r[2];for(let Ee=K;Ee<Q;Ee+=d){const Se=De+Ee*r[3],ze=t[Se+B];if(o==="max"&&ze>ne?ne=ze:o==="avg"&&(de+=ze,ye++),isNaN(ne))break}if(isNaN(ne))break}if(isNaN(ne))break}const ge=Z+B;v[ge]=o==="avg"?de/Math.max(ye,1):ne}}}}return w}function AZ(t,e){const n=be(e.outShape,"int32"),r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.front,h=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let y=0;y<e.inChannels;++y)for(let g=0;g<e.outDepth;++g){const x=g*r-p;let w=x;for(;w<0;)w+=a;const v=Math.min(e.inDepth,l+x);for(let b=0;b<e.outHeight;++b){const S=b*s-h;let $=S;for(;$<0;)$+=i;const N=Math.min(e.inHeight,c+S);for(let E=0;E<e.outWidth;++E){const R=E*o-f;let F=R;for(;F<0;)F+=u;const B=Math.min(e.inWidth,d+R);let M=Number.NEGATIVE_INFINITY,V=-1;for(let W=w;W<v;W+=a){const H=W-x;for(let q=$;q<N;q+=i){const O=q-S;for(let U=F;U<B;U+=u){const j=U-R,T=t.get(m,W,q,U,y);T>=M&&(M=T,V=H*c*d+O*c+j)}}}n.set(V,m,g,b,E,y)}}}return n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;he(s,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1;k(Dt(a,l),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const c=jt(s.shape,o,a,l,i,u);let d;if(c.filterWidth===1&&c.filterHeight===1&&Pe(c.inShape,c.outShape))d=ts({inputs:{x:s},backend:n});else{const p=n.data.get(s.dataId).values,h=fe(s.shape),f=ev(p,s.shape,s.dtype,h,c,"avg");d=n.makeTensorInfo(c.outShape,s.dtype,f.values)}return d}const FZ={kernelName:zc,backendName:"cpu",kernelFunc:OZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r;he(s,"avgPool3d");const c=Yn(s.shape,o,a,1,i,u,l),d=n.data.get(s.dataId).values,p=a3(d,s.shape,s.dtype,fe(s.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}const zZ={kernelName:Bc,backendName:"cpu",kernelFunc:LZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BZ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;he([s,o],"avgPool3DGrad");const c=Yn(o.shape,a,i,1,u,l),d=c.strideDepth,p=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,y=c.filterWidth,g=c.dilationDepth,x=c.dilationHeight,w=c.dilationWidth,v=c.effectiveFilterDepth,b=c.effectiveFilterHeight,S=c.effectiveFilterWidth,$=v-1-c.padInfo.front,N=S-1-c.padInfo.left,E=b-1-c.padInfo.top,R=be(o.shape,"float32"),F=1/(f*m*y),B=n.bufferSync(s);for(let M=0;M<c.batchSize;++M)for(let V=0;V<c.inChannels;++V)for(let W=0;W<c.inDepth;++W)for(let H=0;H<c.inHeight;++H)for(let q=0;q<c.inWidth;++q){const O=W-$,U=H-E,j=q-N;let T=0;for(let A=0;A<v;A+=g){const _=(O+A)/d;if(!(_<0||_>=c.outDepth||Math.floor(_)!==_))for(let G=0;G<b;G+=x){const K=(U+G)/p;if(!(K<0||K>=c.outHeight||Math.floor(K)!==K))for(let Q=0;Q<S;Q+=w){const Z=(j+Q)/h;if(Z<0||Z>=c.outWidth||Math.floor(Z)!==Z)continue;T+=B.get(M,_,K,Z,V)}}}R.set(T*F,M,W,H,q,V)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}const MZ={kernelName:lm,backendName:"cpu",kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VZ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;he([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=jt(a.shape,i,u,1,l),d=c.strideHeight,p=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,y=c.dilationWidth,g=c.effectiveFilterHeight,x=c.effectiveFilterWidth,w=x-1-c.padInfo.left,v=g-1-c.padInfo.top,b=be(a.shape,"float32"),S=1/(h*f),$=n.data.get(s.dataId).values,N=be(s.shape,"float32",$);for(let E=0;E<c.batchSize;++E)for(let R=0;R<c.inChannels;++R)for(let F=0;F<c.inHeight;++F)for(let B=0;B<c.inWidth;++B){const M=F-v,V=B-w;let W=0;for(let H=0;H<g;H+=m){const q=(M+H)/d;if(!(q<0||q>=c.outHeight||Math.floor(q)!==q))for(let O=0;O<x;O+=y){const U=(V+O)/p;if(U<0||U>=c.outWidth||Math.floor(U)!==U)continue;W+=N.get(E,q,U,R)}}b.set(W*S,E,F,B,R)}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const WZ={kernelName:um,backendName:"cpu",kernelFunc:VZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,scale:o,offset:a,mean:i,variance:u}=e;k(i.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),k(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),k(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),he([s,i,u,o,a],"batchNorm");let{varianceEpsilon:l}=r;l==null&&(l=.001);const c=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,p=n.data.get(u.dataId).values,h=o?n.data.get(o.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),y=f.length,g=h.length,x=p.length,w=d.length;let v=0,b=0,S=0,$=0;for(let N=0;N<c.length;++N)m[N]=f[v++]+(c[N]-d[b++])*h[S++]/Math.sqrt(p[$++]+l),v>=y&&(v=0),b>=w&&(b=0),S>=g&&(S=0),$>=x&&($=0);return n.makeTensorInfo(s.shape,s.dtype,m)}const GZ={kernelName:md,backendName:"cpu",kernelFunc:UZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;he([s],"batchToSpaceND");const i=o.reduce((g,x)=>g*x),u=Na(s.shape,o,i),l=Ta(u.length,o.length),c=Ea(s.shape,o,i),d=Jm(a,o.length),p=eg(c,a,o.length),h=qe({inputs:{x:s},backend:n,attrs:{shape:u}}),f=pn({inputs:{x:h},backend:n,attrs:{perm:l}}),m=qe({inputs:{x:f},backend:n,attrs:{shape:c}}),y=fa({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const jZ={kernelName:Vc,backendName:"cpu",kernelFunc:HZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,l=Gw(i,u,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,l)}const qZ={kernelName:Wc,backendName:"cpu",kernelFunc:KZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XZ(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e,o=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,i=$e(Array.from(o),Array.from(a));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const YZ={kernelName:Gc,backendName:"cpu",kernelFunc:XZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QZ=Me(Zi,(t,e)=>{const n=e;return t>n.clipValueMax?n.clipValueMax:t<n.clipValueMin?n.clipValueMin:t}),ZZ={kernelName:Zi,backendName:"cpu",kernelFunc:QZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JZ=t=>{const{x:e}=t.inputs,n=t.backend,r=new Float32Array(L(e.shape)),s=n.data.get(e.dataId),o=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values;for(let l=0;l<i.length;l++){const c=i[l],d=u[l];r[l]=Math.hypot(c,d)}return n.makeOutput(r,e.shape,"float32")},eJ={kernelName:jc,backendName:"cpu",kernelFunc:JZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oi(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.data.get(r.dataId).complexTensorInfos.imag,o=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,o)}const tJ={kernelName:wd,backendName:"cpu",kernelFunc:Oi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fi(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=Ie(s,e[0].shape)[0],a=e.map(m=>m.shape);Ym(a,o);let i=ln(e.map(m=>m.shape),o);if(L(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(m=>L(m.shape)>0);if(u.length===1)return ts({inputs:{x:u[0]},backend:n});if(u[0].dtype==="complex64"){const m=u.map(v=>ha({inputs:{input:v},backend:n})),y=u.map(v=>Oi({inputs:{input:v},backend:n})),g=Fi({inputs:m,backend:n,attrs:{axis:o}}),x=Fi({inputs:y,backend:n,attrs:{axis:o}}),w=Sn({inputs:{real:g,imag:x},backend:n});return m.forEach(v=>n.disposeIntermediateTensorInfo(v)),y.forEach(v=>n.disposeIntermediateTensorInfo(v)),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),w}const l=u.map(m=>{const y=L(m.shape.slice(o));return qe({inputs:{x:m},backend:n,attrs:{shape:[-1,y]}})}),c=l.map(m=>({vals:n.data.get(m.dataId).values,shape:m.shape}));i=ln(l.map(m=>m.shape),1);const d=l[0].shape[0]===1,p=RE(c,i,e[0].dtype,d),h=ln(u.map(m=>m.shape),o),f=n.makeTensorInfo(h,e[0].dtype,p);return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}const nJ={kernelName:Kc,backendName:"cpu",kernelFunc:Fi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r;he([s,o],"conv2d");const d=An(u),p=Xe(s.shape,o.shape,a,l,i,c,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,y=p.dilationWidth,g=p.padInfo.left,x=p.padInfo.top,w=p.dataFormat==="channelsLast",v=new yt(p.outShape,s.dtype),b=fe(s.shape),S=fe(o.shape),$=b[0],N=w?b[1]:b[2],E=w?b[2]:1,R=w?1:b[1],F=v.strides[0],B=w?v.strides[1]:v.strides[2],M=w?v.strides[2]:1,V=w?1:v.strides[1],W=n.data.get(s.dataId).values,H=n.data.get(o.dataId).values,q=v.values;for(let O=0;O<p.batchSize;++O){const U=O*$,j=O*F;for(let T=0;T<p.outHeight;++T){const A=j+T*B,_=T*p.strideHeight-x;for(let G=0;G<h;++G){const K=_+G*m;if(K<0||K>=p.inHeight)continue;const Q=G*S[0],Z=U+K*N;for(let ne=0;ne<p.outWidth;++ne){const de=A+ne*M,ye=ne*p.strideWidth-g;for(let ge=0;ge<f;++ge){const Ce=ye+ge*y;if(Ce<0||Ce>=p.inWidth)continue;const Te=Q+ge*S[1],xe=Z+Ce*E;let De=Te;for(let Ee=0;Ee<p.inChannels;++Ee){const Se=W[xe+Ee*R];for(let ze=0;ze<p.outChannels;++ze)q[de+ze*V]+=Se*H[De+ze];De+=p.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,q)}const rJ={kernelName:qc,backendName:"cpu",kernelFunc:i3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;he([s,o],"conv2dBackpropFilter");const d=An(u),p=Xe(s.shape,c,a,1,i,l,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:y}=p,g=p.dataFormat==="channelsLast",x=new yt(p.filterShape,"float32"),w=p.padInfo.left,v=p.padInfo.top,b=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,$=new yt(s.shape,s.dtype,b),N=new yt(o.shape,o.dtype,S);for(let E=0;E<m;++E){const R=Math.max(0,Math.ceil((v-E)/h)),F=Math.min(p.outHeight,(p.inHeight+v-E)/h);for(let B=0;B<y;++B){const M=Math.max(0,Math.ceil((w-B)/f)),V=Math.min(p.outWidth,(p.inWidth+w-B)/f);for(let W=0;W<p.inChannels;++W)for(let H=0;H<p.outChannels;++H){let q=0;for(let O=0;O<p.batchSize;++O)for(let U=R;U<F;++U){const j=E+U*h-v;for(let T=M;T<V;++T){const A=B+T*f-w;g?q+=$.get(O,j,A,W)*N.get(O,U,T,H):q+=$.get(O,W,j,A)*N.get(O,H,U,T)}}x.set(q,E,B,W,H)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const oJ={kernelName:Xc,backendName:"cpu",kernelFunc:sJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aJ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r;he([s,o],"conv2dBackpropInput");const d=fe(o.shape),p=fe(s.shape);let h=An(l);const f=Xe(a,o.shape,i,1,u,c,!1,h),m=new yt(f.inShape,"float32"),y=m.values,g=n.data.get(s.dataId).values,x=n.data.get(o.dataId).values,[w,v,b]=d,{batchSize:S,filterHeight:$,filterWidth:N,inChannels:E,inHeight:R,inWidth:F,outChannels:B,outHeight:M,outWidth:V,strideHeight:W,strideWidth:H}=f;h=f.dataFormat;const q=$-1-f.padInfo.top,O=N-1-f.padInfo.left,U=h==="channelsLast",j=m.strides[0],T=U?m.strides[1]:m.strides[2],A=U?m.strides[2]:1,_=U?1:m.strides[1],G=p[0],K=U?p[1]:p[2],Q=U?p[2]:1,Z=U?1:p[1];for(let ne=0;ne<S;++ne)for(let de=0;de<E;++de)for(let ye=0;ye<R;++ye){const ge=ye-q,Ce=Math.max(0,Math.ceil(ge/W)),Te=Math.min(M,($+ge)/W);for(let xe=0;xe<F;++xe){const De=xe-O,Ee=Math.max(0,Math.ceil(De/H)),Se=Math.min(V,(N+De)/H);let ze=0;for(let Ze=Ce;Ze<Te;++Ze){const Zn=Ze*W-ge;for(let st=Ee;st<Se;++st){const Ur=st*H-De,On=G*ne+K*Ze+Q*st,xr=w*($-1-Zn)+v*(N-1-Ur)+b*de;for(let mn=0;mn<B;++mn){const gn=g[On+Z*mn],Jn=x[xr+mn];ze+=gn*Jn}}}const on=j*ne+T*ye+A*xe+_*de;y[on]=ze}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const iJ={kernelName:Yc,backendName:"cpu",kernelFunc:aJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r;he([s,o],"conv3d");const l=Vr(s.shape,o.shape,a,u,i),{filterDepth:c,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:y}=l,g=y.front,x=y.left,w=y.top,v=new yt(l.outShape,s.dtype),b=n.data.get(s.dataId).values,S=n.data.get(o.dataId).values,$=v.values,N=fe(s.shape),E=fe(o.shape);for(let R=0;R<l.batchSize;++R){const F=R*N[0],B=R*v.strides[0];for(let M=0;M<l.outDepth;++M){const V=B+M*v.strides[1],W=M*l.strideDepth-g;for(let H=0;H<c;++H){const q=W+H*h;if(q<0||q>=l.inDepth)continue;const O=H*E[0],U=F+q*N[1];for(let j=0;j<l.outHeight;++j){const T=V+j*v.strides[2],A=j*l.strideHeight-w;for(let _=0;_<d;++_){const G=A+_*f;if(G<0||G>=l.inHeight)continue;const K=O+_*E[1],Q=U+G*N[2];for(let Z=0;Z<l.outWidth;++Z){const ne=T+Z*l.outChannels,de=Z*l.strideWidth-x;for(let ye=0;ye<p;++ye){const ge=de+ye*m;if(ge<0||ge>=l.inWidth)continue;const Ce=K+ye*E[2],Te=Q+ge*l.inChannels;let xe=Ce;for(let De=0;De<l.inChannels;++De){const Ee=b[Te+De];for(let Se=0;Se<l.outChannels;++Se)$[ne+Se]+=Ee*S[xe+Se];xe+=l.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const lJ={kernelName:Qc,backendName:"cpu",kernelFunc:uJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r;he([s,o],"conv3dBackpropFilterV2");const l=fe(s.shape),c=fe(o.shape),d=Vr(s.shape,u,a,1,i),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,y=d.filterHeight,g=d.filterWidth,x=new yt(d.filterShape,"float32"),w=x.values,[v,b,S,$]=x.strides,N=n.data.get(o.dataId).values,[E,R,F,B]=c,M=n.data.get(s.dataId).values,[V,W,H,q]=l,O=d.padInfo.front,U=d.padInfo.left,j=d.padInfo.top;for(let T=0;T<m;++T){const A=Math.max(0,Math.ceil((O-T)/p)),_=Math.min(d.outDepth,(d.inDepth+O-T)/p),G=T*v;for(let K=0;K<y;++K){const Q=Math.max(0,Math.ceil((j-K)/h)),Z=Math.min(d.outHeight,(d.inHeight+j-K)/h),ne=K*b+G;for(let de=0;de<g;++de){const ye=Math.max(0,Math.ceil((U-de)/f)),ge=Math.min(d.outWidth,(d.inWidth+U-de)/f),Ce=de*S+ne;for(let Te=0;Te<d.inChannels;++Te){const xe=Te*$+Ce;for(let De=0;De<d.outChannels;++De){let Ee=0;for(let Se=0;Se<d.batchSize;++Se){const ze=Se*V,on=Se*E;for(let Ze=A;Ze<_;++Ze){const st=(T+Ze*p-O)*W+ze,Ur=Ze*R+on;for(let On=Q;On<Z;++On){const mn=(K+On*h-j)*H+st,gn=On*F+Ur;for(let Jn=ye;Jn<ge;++Jn){const Io=(de+Jn*f-U)*q+mn,No=Jn*B+gn;Ee+=M[Io+Te]*N[No+De]}}}}w[xe+De]=Ee}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const dJ={kernelName:cm,backendName:"cpu",kernelFunc:cJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pJ(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{pad:a,strides:i,inputShape:u}=r;he([s],"conv3dBackpropInputV2");const l=fe(s.shape),c=fe(o.shape),d=Vr(u,o.shape,i,1,a),p=new yt(d.inShape,"float32"),h=p.values,[f,m,y,g]=p.strides,x=n.data.get(s.dataId).values,[w,v,b,S]=l,$=n.data.get(o.dataId).values,[N,E,R,F]=c,{batchSize:B,filterDepth:M,filterHeight:V,filterWidth:W,inChannels:H,inDepth:q,inHeight:O,inWidth:U,outChannels:j,outDepth:T,outHeight:A,outWidth:_,strideDepth:G,strideHeight:K,strideWidth:Q}=d,Z=M-1-d.padInfo.front,ne=V-1-d.padInfo.top,de=W-1-d.padInfo.left;for(let ye=0;ye<B;++ye)for(let ge=0;ge<H;++ge)for(let Ce=0;Ce<q;++Ce){const Te=Ce-Z,xe=Math.max(0,Math.ceil(Te/G)),De=Math.min(T,(M+Te)/G);for(let Ee=0;Ee<O;++Ee){const Se=Ee-ne,ze=Math.max(0,Math.ceil(Se/K)),on=Math.min(A,(V+Se)/K);for(let Ze=0;Ze<U;++Ze){const Zn=Ze-de,st=Math.max(0,Math.ceil(Zn/Q)),Ur=Math.min(_,(W+Zn)/Q);let On=0;for(let xr=xe;xr<De;++xr){const mn=xr*G-Te;for(let gn=ze;gn<on;++gn){const Jn=gn*K-Se;for(let ss=st;ss<Ur;++ss){const Io=ss*Q-Zn,No=w*ye+v*xr+b*gn+S*ss,Fg=N*(M-1-mn)+E*(V-1-Jn)+R*(W-1-Io)+F*ge;for(let La=0;La<j;++La){const Lg=x[No+La],zg=$[Fg+La];On+=Lg*zg}}}}h[f*ye+m*Ce+y*Ee+g*Ze+ge]=On}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}const hJ={kernelName:Zc,backendName:"cpu",kernelFunc:pJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fJ=Me(Ji,t=>Math.cos(t)),mJ={kernelName:Ji,backendName:"cpu",kernelFunc:fJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gJ=Me(eu,t=>Math.cosh(t)),yJ={kernelName:eu,backendName:"cpu",kernelFunc:gJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xJ(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=r,[c,d,p,h]=s.shape,f=o.shape[0],[m,y]=i,g=be([f,m,y,h],"float32"),x=n.data.get(o.dataId).values,w=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,b=fe(s.shape),S=fe(g.shape);for(let $=0;$<f;$++){const N=$*4,E=x[N],R=x[N+1],F=x[N+2],B=x[N+3],M=w[$];if(M>=c)continue;const V=m>1?(F-E)*(d-1)/(m-1):0,W=y>1?(B-R)*(p-1)/(y-1):0;for(let H=0;H<m;H++){const q=m>1?E*(d-1)+H*V:.5*(E+F)*(d-1);if(q<0||q>d-1){for(let O=0;O<y;O++)for(let U=0;U<h;U++){const j=U+O*S[2]+H*S[1]+$*S[0];g.values[j]=l}continue}if(u==="bilinear"){const O=Math.floor(q),U=Math.ceil(q),j=q-O;for(let T=0;T<y;T++){const A=y>1?R*(p-1)+T*W:.5*(R+B)*(p-1);if(A<0||A>p-1){for(let Q=0;Q<h;Q++){const Z=Q+T*S[2]+H*S[1]+$*S[0];g.values[Z]=l}continue}const _=Math.floor(A),G=Math.ceil(A),K=A-_;for(let Q=0;Q<h;Q++){let Z=Q+_*b[2]+O*b[1]+M*b[0];const ne=v[Z];Z=Q+G*b[2]+O*b[1]+M*b[0];const de=v[Z];Z=Q+_*b[2]+U*b[1]+M*b[0];const ye=v[Z];Z=Q+G*b[2]+U*b[1]+M*b[0];const ge=v[Z],Ce=ne+(de-ne)*K,Te=ye+(ge-ye)*K;Z=Q+T*S[2]+H*S[1]+$*S[0],g.values[Z]=Ce+(Te-Ce)*j}}}else for(let O=0;O<y;++O){const U=y>1?R*(p-1)+O*W:.5*(R+B)*(p-1);if(U<0||U>p-1){for(let A=0;A<h;A++){const _=A+O*S[2]+H*S[1]+$*S[0];g.values[_]=l}continue}const j=Math.round(U),T=Math.round(q);for(let A=0;A<h;A++){const _=A+j*b[2]+T*b[1]+M*b[0],G=A+O*S[2]+H*S[1]+$*S[0];g.values[G]=v[_]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const wJ={kernelName:td,backendName:"cpu",kernelFunc:xJ};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;he(s,"cumprod");const u=Ye([o],s.shape.length);let l=s;u!=null&&(l=pn({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Qe(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const d=$t(l.dtype,"int32"),p=im(L(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<h.length;g+=f)for(let x=0;x<f;x++){const w=m(g,x);if(x===0)p[w]=a?1:h[w];else{const v=m(g,x-1);p[w]=a?h[v]*p[v]:h[w]*p[v]}}const y=n.makeTensorInfo(l.shape,d,p);if(u!=null){const g=ka(u),x=pn({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),x}return y}const bJ={kernelName:Jc,backendName:"cpu",kernelFunc:vJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;he(s,"cumsum");const u=Ye([o],s.shape.length);let l=s;u!=null&&(l=pn({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Qe(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const d=$t(l.dtype,"int32"),p=Rt(L(l.shape),d),h=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(g,x)=>g+f-x-1:(g,x)=>g+x;for(let g=0;g<h.length;g+=f)for(let x=0;x<f;x++){const w=m(g,x);if(x===0)p[w]=a?0:h[w];else{const v=m(g,x-1);p[w]=a?h[v]+p[v]:h[w]+p[v]}}const y=n.makeTensorInfo(l.shape,d,p);if(u!=null){const g=ka(u),x=pn({inputs:{x:y},backend:n,attrs:{perm:g}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),x}return y}const SJ={kernelName:ed,backendName:"cpu",kernelFunc:CJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $J(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r;if(s.shape.length===1){const u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=Gw(u,l,o.dtype,o.shape,a);return n.makeTensorInfo([a],o.dtype,c)}else if(s.shape.length===2){const u=n.bufferSync(s),l=n.bufferSync(o),c=NE(u,l,a,i);return n.makeTensorInfo(c.shape,o.dtype,c.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const kJ={kernelName:nd,backendName:"cpu",kernelFunc:$J};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r;k(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],d=u*o,p=l*o,h=c/(o*o),f=n.data.get(s.dataId).values,m=new Float32Array(i*d*p*h);let y=0;for(let g=0;g<i;++g)for(let x=0;x<d;++x){const w=Math.floor(x/o),v=x%o;for(let b=0;b<p;++b){const S=Math.floor(b/o),$=b%o,N=(v*o+$)*h;for(let E=0;E<h;++E){const F=E+N+c*(S+l*(w+u*g));m[y++]=f[F]}}}return n.makeTensorInfo([i,d,p,h],s.dtype,m)}const NJ={kernelName:rd,backendName:"cpu",kernelFunc:IJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u,dimRoundingMode:l}=r;he([s,o],"depthwiseConv2DNative");const c=fe(s.shape),d=fe(o.shape);let p=u;p==null&&(p=[1,1]),k(Dt(a,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${p}'`);const h=Xe(s.shape,o.shape,a,p,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:y,dilationWidth:g,padInfo:x}=h,w=x.left,v=x.top,b=h.outChannels/h.inChannels,S=new yt(h.outShape,s.dtype),$=n.data.get(s.dataId).values,N=n.data.get(o.dataId).values,E=S.values;for(let R=0;R<h.batchSize;++R){const F=R*c[0],B=R*S.strides[0];for(let M=0;M<h.outHeight;++M){const V=B+M*S.strides[1],W=M*h.strideHeight-v;for(let H=0;H<f;++H){const q=W+H*y;if(q<0||q>=h.inHeight)continue;const O=H*d[0],U=F+q*c[1];for(let j=0;j<h.outWidth;++j){const T=V+j*S.strides[2],A=j*h.strideWidth-w;for(let _=0;_<m;++_){const G=A+_*g;if(G<0||G>=h.inWidth)continue;const K=O+_*d[1],Q=U+G*h.inChannels;let Z=T,ne=K;for(let de=0;de<h.inChannels;++de){const ye=$[Q+de];for(let ge=0;ge<b;++ge)E[Z+ge]+=ye*N[ne+ge];Z+=b,ne+=b}}}}}}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const TJ={kernelName:sd,backendName:"cpu",kernelFunc:u3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EJ(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r;he([s,o],"depthwiseConv2dNativeBackpropFilter");const d=Xe(s.shape,c,a,i,u,l,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,y=new yt(d.filterShape,"float32"),g=d.padInfo.left,x=d.padInfo.top,w=d.outChannels/d.inChannels,v=n.data.get(s.dataId).values,b=new yt(s.shape,s.dtype,v),S=n.data.get(o.dataId).values,$=new yt(o.shape,o.dtype,S);for(let N=0;N<f;++N){const E=Math.max(0,Math.ceil((x-N)/p)),R=Math.min(d.outHeight,(d.inHeight+x-N)/p);for(let F=0;F<m;++F){const B=Math.max(0,Math.ceil((g-F)/h)),M=Math.min(d.outWidth,(d.inWidth+g-F)/h);for(let V=0;V<d.outChannels;++V){const W=Math.trunc(V/w),H=V%w;let q=0;for(let O=0;O<d.batchSize;++O)for(let U=E;U<R;++U){const j=N+U*p-x;for(let T=B;T<M;++T){const A=F+T*h-g;q+=b.get(O,j,A,W)*$.get(O,U,T,V)}}y.set(q,N,F,W,H)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}const RJ={kernelName:od,backendName:"cpu",kernelFunc:EJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _J(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r;he([s,o],"depthwiseConv2DNativeBackpropInput");const d=fe(s.shape),p=fe(o.shape),h=Xe(c,o.shape,a,i,u,l,!0),f=new yt(h.inShape,"float32"),m=f.values,[y,g,x]=f.strides,w=n.data.get(s.dataId).values,[v,b,S]=d,$=n.data.get(o.dataId).values,[N,E,R]=p,{batchSize:F,filterHeight:B,filterWidth:M,inChannels:V,inHeight:W,inWidth:H,outChannels:q,outHeight:O,outWidth:U,strideHeight:j,strideWidth:T}=h,A=B-1-h.padInfo.top,_=M-1-h.padInfo.left,G=q/V;for(let K=0;K<F;++K)for(let Q=0;Q<V;++Q)for(let Z=0;Z<W;++Z){const ne=Z-A,de=Math.max(0,Math.ceil(ne/j)),ye=Math.min(O,(B+ne)/j);for(let ge=0;ge<H;++ge){const Ce=ge-_,Te=Math.max(0,Math.ceil(Ce/T)),xe=Math.min(U,(M+Ce)/T);let De=0;for(let Ee=de;Ee<ye;++Ee){const Se=Ee*j-ne;for(let ze=Te;ze<xe;++ze){const on=ze*T-Ce,Ze=v*K+b*Ee+S*ze,Zn=N*(B-1-Se)+E*(M-1-on)+R*Q;for(let st=0;st<G;++st){const Ur=Q*G+st,On=w[Ze+Ur],xr=$[Zn+st];De+=On*xr}}}m[y*K+g*Z+x*ge+Q]=De}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const DJ={kernelName:ad,backendName:"cpu",kernelFunc:_J};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PJ(t){const{inputs:e,backend:n}=t,{x:r}=e,s=L(r.shape),o=n.data.get(r.dataId).values,a=be([s,s],r.dtype),i=a.values;for(let l=0;l<o.length;l++)i[l*s+l]=o[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,a.dtype,a.values)}const AJ={kernelName:id,backendName:"cpu",kernelFunc:PJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ={kernelName:ud,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s}=t,{strides:o,pad:a,dilations:i}=n,u=e,l=u.data.get(r.dataId).values,c=r.shape.length,d=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:y,outHeight:g,outWidth:x,padInfo:w,strideHeight:v,strideWidth:b,filterHeight:S,filterWidth:$,dilationHeight:N,dilationWidth:E,outShape:R}=vo(r.shape,s.shape,o,a,"NHWC",i),F=L(R),B=R.length,M=it(r.dtype,F);for(let W=0;W<h;++W)for(let H=0;H<g;++H){const q=H*v-w.top;for(let O=0;O<x;++O){const U=O*b-w.left;for(let j=0;j<y;++j){let T=Number.MIN_SAFE_INTEGER;for(let _=0;_<S;++_){const G=q+_*N;if(G>=0&&G<f)for(let K=0;K<$;++K){const Q=U+K*E;if(Q>=0&&Q<m){const Z=Rr([W,G,Q,j],c,fe(r.shape)),ne=Rr([_,K,j],p,fe(s.shape)),de=l[Z]+d[ne];de>T&&(T=de)}}}const A=Rr([W,H,O,j],B,fe(R));M[A]=T}}}return{dataId:u.write(xo(M,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FJ={kernelName:df,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:o}=t,{strides:a,pad:i,dilations:u}=n,l=e,c=Gn(r.shape,l.data.get(r.dataId).values),d=Gn(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:b,filterWidth:S,dilationHeight:$,dilationWidth:N,outShape:E}=vo(r.shape,s.shape,a,i,"NHWC",u);k(o.rank===E.length,()=>`Error in ${df}, dy must have the same rank as output ${E.length}, but got ${o.rank}`);const R=Gn(E,l.data.get(o.dataId).values),F=k1(s.shape,s.dtype);for(let M=0;M<p;++M)for(let V=0;V<y;++V){const W=V*w-x.top;for(let H=0;H<g;++H){const q=H*v-x.left;for(let O=0;O<m;++O){let U=Number.MIN_SAFE_INTEGER,j=0,T=0;for(let A=0;A<b;++A){const _=W+A*$;if(_>=0&&_<h)for(let G=0;G<S;++G){const K=q+G*N;if(K>=0&&K<f){const Q=c[M][_][K][O]+d[A][G][O];Q>U&&(U=Q,j=A,T=G)}}}F[j][T][O]+=R[M][V][H][O]}}}return{dataId:l.write(xo(F,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ={kernelName:cf,backendName:"cpu",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:r,filter:s,dy:o}=t,{strides:a,pad:i,dilations:u}=n,l=e,c=Gn(r.shape,l.data.get(r.dataId).values),d=Gn(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:y,outWidth:g,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:b,filterWidth:S,dilationHeight:$,dilationWidth:N,outShape:E}=vo(r.shape,s.shape,a,i,"NHWC",u);k(o.rank===E.length,()=>`Error in ${cf}, dy must have the same rank as output ${E.length}, but got ${o.rank}`);const R=Gn(E,l.data.get(o.dataId).values),F=k1(r.shape,r.dtype);for(let M=0;M<p;++M)for(let V=0;V<y;++V){const W=V*w-x.top;for(let H=0;H<g;++H){const q=H*v-x.left;for(let O=0;O<m;++O){let U=Number.MIN_SAFE_INTEGER,j=W<0?0:W,T=q<0?0:q;for(let A=0;A<b;++A){const _=W+A*$;if(_>=0&&_<h)for(let G=0;G<S;++G){const K=q+G*N;if(K>=0&&K<f){const Q=c[M][_][K][O]+d[A][G][O];Q>U&&(U=Q,j=_,T=K)}}}F[M][j][T][O]+=R[M][V][H][O]}}}return{dataId:l.write(xo(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zJ(t){const{inputs:e,backend:n,attrs:r}=t,{image:s}=e,{canvas:o,options:a}=r,{contextOptions:i,imageOptions:u}=a||{},l=(u==null?void 0:u.alpha)||1,c=(i==null?void 0:i.contextType)||"2d";if(c!=="2d")throw new Error(`Context type ${i.contextType} is not supported by the CPU backend.`);const d=o.getContext(c,(i==null?void 0:i.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${c} type.`);const[p,h]=s.shape.slice(0,2),f=s.shape.length===2?1:s.shape[2],m=n.data.get(s.dataId).values,y=s.dtype==="float32"?255:1,g=new Uint8ClampedArray(h*p*4);for(let w=0;w<p*h;++w){const v=[0,0,0,255*l];for(let S=0;S<f;S++){const $=m[w*f+S];if(s.dtype==="float32"){if($<0||$>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${$}.`)}else if(s.dtype==="int32"&&($<0||$>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${$}.`);f===1?(v[0]=$*y,v[1]=$*y,v[2]=$*y):v[S]=$*y}const b=w*4;g[b+0]=Math.round(v[0]),g[b+1]=Math.round(v[1]),g[b+2]=Math.round(v[2]),g[b+3]=Math.round(v[3])}o.width=h,o.height=p;const x=new ImageData(g,h,p);return d.putImageData(x,0,0),s}const BJ={kernelName:ld,backendName:"cpu",kernelFunc:zJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _p(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;he(s,"sum");let i;s.dtype==="bool"?i=co({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):i=ts({inputs:{x:s},backend:n});const u=i.shape.length,l=Ie(o,i.shape),c=Ye(l,u);let d=l,p=i;c!=null&&(p=pn({inputs:{x:i},backend:n,attrs:{perm:c}}),d=Qe(d.length,u)),bt("sum",d,p.shape.length);const[h,f]=wt(p.shape,d),m=$t(p.dtype,"int32");let y=Sf(n,h,m);const g=L(f),x=n.data.get(y.dataId).values,w=n.data.get(p.dataId).values;for(let v=0;v<x.length;++v){const b=v*g;let S=0;for(let $=0;$<g;++$)S+=w[b+$];x[v]=S}if(a){const v=vt(y.shape,l),b=y;y=qe({inputs:{x:y},backend:n,attrs:{shape:v}}),n.disposeIntermediateTensorInfo(b)}return n.disposeIntermediateTensorInfo(i),c!=null&&n.disposeIntermediateTensorInfo(p),y}const MJ={kernelName:Qd,backendName:"cpu",kernelFunc:_p};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VJ(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=lg(s,o.length);dg(a.length,u,o);const{path:l,steps:c}=pg(i,u),d=c.length;let p=null,h=a.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=cg(h,u[y]);let w;hg(g)?w=o[y]:(w=pn({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(w));const v=w.shape.slice();for(let b=0;b<x.length;++b)v.splice(x[b],0,1);Pe(w.shape,v)||(w=qe({inputs:{x:w},backend:n,attrs:{shape:v}}),f.push(w)),p===null?p=w:(p=yg({inputs:{a:w,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=_p({inputs:{x:p},backend:n,attrs:{axis:l[m]-(a.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}const WJ={kernelName:cd,backendName:"cpu",kernelFunc:VJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UJ(t){const{inputs:e,backend:n}=t,{dy:r,y:s}=e;he([r,s],"eluGrad");const o=new Float32Array(L(s.shape)),a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values;for(let u=0;u<a.length;++u){const l=a[u];l>=0?o[u]=i[u]:o[u]=i[u]*(l+1)}return n.makeTensorInfo(s.shape,"float32",o)}const GJ={kernelName:dm,backendName:"cpu",kernelFunc:UJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HJ=rg,jJ=sg,KJ=og,qJ=ag,XJ=ig,YJ=ug,QJ=Me(ru,t=>{const e=Math.sign(t),n=Math.abs(t),r=1/(1+HJ*n);return e*(1-((((YJ*r+XJ)*r+qJ)*r+KJ)*r+jJ)*r*Math.exp(-n*n))}),ZJ={kernelName:ru,backendName:"cpu",kernelFunc:QJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(t){const{inputs:e,backend:n,attrs:r}=t,{input:s}=e,{dim:o}=r,a=s.shape.length,i=s.shape.slice();let u=o;return o<0&&(k(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+o+1),i.splice(u,0,1),qe({inputs:{x:s},backend:n,attrs:{shape:i}})}const JJ={kernelName:dd,backendName:"cpu",kernelFunc:Ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eee=mt((t,e)=>t/e),tv=kt(tu,eee),l0={kernelName:tu,backendName:"cpu",kernelFunc:tv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l3(t,e,n){const r=t.shape,s=r[0],o=r[1],a=n.data.get(t.dataId),i=a.complexTensorInfos.real,u=a.complexTensorInfos.imag,l=[s,o],c=L(l),d=xt("float32",c),p=xt("float32",c);for(let y=0;y<s;y++){const g=fa({inputs:{x:i},backend:n,attrs:{begin:[y,0],size:[1,o]}}),x=fa({inputs:{x:u},backend:n,attrs:{begin:[y,0],size:[1,o]}}),w=Sn({inputs:{real:g,imag:x},backend:n}),{real:v,imag:b}=tee(w,e,n),S=Fr(v,b);for(let $=0;$<o;$++){const N=Aw(S,$);d[y*o+$]=N.real,p[y*o+$]=N.imag}n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w)}const h=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",p),m=Sn({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function tee(t,e,n){const r=L(t.shape),s=n.data.get(t.dataId),o=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(nee(r)){const i=c0(o,a,r,e,n),u=[t.shape[0],t.shape[1]];if(e){const l=n.makeTensorInfo(u,"float32",i.real),c=n.makeTensorInfo(u,"float32",i.imag),d=n.makeTensorInfo([],"float32",Es(r,"float32")),p=ts({inputs:{x:d},backend:n}),h=l0.kernelFunc({inputs:{a:l,b:d},backend:n}),f=l0.kernelFunc({inputs:{a:c,b:p},backend:n}),m=n.data.get(h.dataId).values,y=n.data.get(f.dataId).values;return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),{real:m,imag:y}}return i}else{const i=Fr(o,a),u=ree(i,r,e);return GT(u)}}function nee(t){return(t&t-1)===0}function c0(t,e,n,r,s){if(n===1)return{real:t,imag:e};const o=Fr(t,e),a=n/2,i=HT(o),u=i.real,l=i.imag,c=[u.length],d=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),h=Sn({inputs:{real:d,imag:p},backend:s}),f=jT(o),m=f.real,y=f.imag,g=[m.length],x=s.makeTensorInfo(g,"float32",m),w=s.makeTensorInfo(g,"float32",y),v=Sn({inputs:{real:x,imag:w},backend:s}),b=c0(u,l,a,r,s),S=b.real,$=b.imag,N=[S.length],E=s.makeTensorInfo(N,"float32",S),R=s.makeTensorInfo(N,"float32",$),F=Sn({inputs:{real:E,imag:R},backend:s}),B=c0(m,y,a,r,s),M=B.real,V=B.imag,W=[M.length],H=s.makeTensorInfo(W,"float32",M),q=s.makeTensorInfo(W,"float32",V),O=Sn({inputs:{real:H,imag:q},backend:s}),U=qT(n,r),j=[U.real.length],T=s.makeTensorInfo(j,"float32",U.real),A=s.makeTensorInfo(j,"float32",U.imag),_=Sn({inputs:{real:T,imag:A},backend:s}),G=yg({inputs:{a:_,b:O},backend:s}),K=Ai({inputs:{a:F,b:G},backend:s}),Q=qw({inputs:{a:F,b:G},backend:s}),Z=ha({inputs:{input:K},backend:s}),ne=ha({inputs:{input:Q},backend:s}),de=Oi({inputs:{input:K},backend:s}),ye=Oi({inputs:{input:Q},backend:s}),ge=Fi({inputs:[Z,ne],backend:s,attrs:{axis:0}}),Ce=Fi({inputs:[de,ye],backend:s,attrs:{axis:0}}),Te=s.data.get(ge.dataId).values,xe=s.data.get(Ce.dataId).values;return s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(Q),s.disposeIntermediateTensorInfo(Z),s.disposeIntermediateTensorInfo(de),s.disposeIntermediateTensorInfo(ne),s.disposeIntermediateTensorInfo(ye),s.disposeIntermediateTensorInfo(ge),s.disposeIntermediateTensorInfo(Ce),{real:Te,imag:xe}}function ree(t,e,n){const r=new Float32Array(e*2);for(let s=0;s<e;s++){let o=0,a=0;for(let i=0;i<e;i++){const u=XT(s*i,e,n),l=Aw(t,i);o+=l.real*u.real-l.imag*u.imag,a+=l.real*u.imag+l.imag*u.real}n&&(o/=e,a/=e),KT(r,o,a,s)}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function see(t){const{inputs:e,backend:n}=t,{input:r}=e,s=L(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=qe({inputs:{x:r},backend:n,attrs:{shape:[a,o]}}),u=l3(i,!1,n),l=qe({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const oee={kernelName:pd,backendName:"cpu",kernelFunc:see};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(t){const{backend:e,attrs:n}=t,{shape:r,value:s,dtype:o}=n,a=o||yo(s),i=it(a,L(r));return iee(i,s,a),e.makeTensorInfo(r,a,i)}const aee={kernelName:hd,backendName:"cpu",kernelFunc:nv};function iee(t,e,n){t.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uee={kernelName:fd,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,s=n,o=xt(r.dtype,L(r.shape)),[a,i,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let p=0;p<a;p++){const h=p*u*i*l;for(let f=0;f<i;f++){const m=f*(u*l);for(let y=0;y<u;y++){const g=y*l;for(let x=0;x<l;x++){const w=Math.round(u-y-1),v=h+m+g+x;let b=c[v];if(w>=0&&w<u){const S=w*l,$=h+m+S+x;b=c[$]}o[v]=b}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=i3({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(a){const y=m;if(c==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const g=qe({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});m=Ai({inputs:{a:m,b:g},backend:n}),n.disposeIntermediateTensorInfo(g)}else m=Ai({inputs:{a:m,b:a},backend:n});n.disposeIntermediateTensorInfo(y)}if(h){const y=m;if(c==="NCHW"&&h==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const g=qe({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Tf(n,m,h,g,f),n.disposeIntermediateTensorInfo(g)}else m=Tf(n,m,h,i,f);n.disposeIntermediateTensorInfo(y)}return m}const cee={kernelName:Ci,backendName:"cpu",kernelFunc:lee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=u3({inputs:{x:s,filter:o},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(a){const y=m;m=Ai({inputs:{a:m,b:a},backend:n}),n.disposeIntermediateTensorInfo(y)}if(h){const y=m;m=Tf(n,m,h,i,f),n.disposeIntermediateTensorInfo(y)}return m}const pee={kernelName:Si,backendName:"cpu",kernelFunc:dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hee(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=L(r.shape),a=s.shape,i=a[a.length-1],[u,l,c,d]=kp(r,s);if(l===0)return n.makeTensorInfo(u,r.dtype,[]);const p=n.data.get(s.dataId).values,h=n.bufferSync(r),f=zE(p,h,r.dtype,l,i,c,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,f.values)}const fee={kernelName:yd,backendName:"cpu",kernelFunc:hee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r;he([s,o],"gatherV2");const u=Ie(a,s.shape)[0],l=n.data.get(o.dataId).values,c=s.shape[u];for(let v=0;v<l.length;++v){const b=l[v];k(b<=c-1&&b>=0,()=>`GatherV2: the index value ${b} is not in [0, ${c-1}]`)}let d=i;i==null&&(d=0);const p=L(o.shape),h=mg(s,o,u,d),f=qe({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=qe({inputs:{x:o},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),y=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],g=n.bufferSync(m),x=n.bufferSync(f),w=BE(x,g,y);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,w.dtype,w.values)}const gee={kernelName:gd,backendName:"cpu",kernelFunc:mee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yee(t){const{inputs:e,backend:n}=t,{input:r}=e,s=L(r.shape),o=r.shape[r.shape.length-1],a=s/o,i=qe({inputs:{x:r},backend:n,attrs:{shape:[a,o]}}),u=l3(i,!0,n),l=qe({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}const xee={kernelName:xd,backendName:"cpu",kernelFunc:yee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wee=Me(pu,t=>Number.isFinite(t)?1:0,"bool"),vee={kernelName:pu,backendName:"cpu",kernelFunc:wee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bee=Me(hu,t=>Math.abs(t)===1/0?1:0,"bool"),Cee={kernelName:hu,backendName:"cpu",kernelFunc:bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const See=Me(fu,t=>Number.isNaN(t)?1:0,"bool"),$ee={kernelName:fu,backendName:"cpu",kernelFunc:See};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kee(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=GE(r,s,o);return e.makeTensorInfo([a.length],"float32",a)}const Iee={kernelName:bd,backendName:"cpu",kernelFunc:kee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nee=Me(xu,t=>Math.log1p(t)),Tee={kernelName:xu,backendName:"cpu",kernelFunc:Nee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eee=mt((t,e)=>t&&e),Ree=kt(wu,Eee,null,"bool"),_ee={kernelName:wu,backendName:"cpu",kernelFunc:Ree};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dee=Me(vu,t=>t?0:1,"bool"),Pee={kernelName:vu,backendName:"cpu",kernelFunc:Dee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aee=mt((t,e)=>t||e),Oee=kt(bu,Aee,null,"bool"),Fee={kernelName:bu,backendName:"cpu",kernelFunc:Oee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r;he(s,"LRN");const l=s.shape[3],c=l-1,d=n.data.get(s.dataId).values,p=L(s.shape),h=new Float32Array(p);function f(m){const y=m%l;let g=m-y+Math.max(0,y-o);const x=m-y+Math.min(y+o,c);let w=0;for(;g<=x;g++){const v=d[g];w+=v*v}return w}for(let m=0;m<p;m++){const y=f(m),g=d[m]*Math.pow(a+i*y,-u);h[m]=g}return n.makeTensorInfo(s.shape,s.dtype,h)}const zee={kernelName:Cd,backendName:"cpu",kernelFunc:Lee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:c}=r;he(a,"LRNGrad");const d=L(a.shape),p=a.shape[3],h=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(o.dataId).values,y=new Float32Array(d),g=d;for(let x=0;x<g;x++){const w=x%p,v=x-w+Math.max(0,w-i),b=x-w+Math.min(p,w+i+1);let S=0;for(let $=v;$<b;$++)S+=Math.pow(f[$],2);S=l*S+u;for(let $=v;$<b;$++){let N=-2*l*c*f[$]*m[x]/S;x===$&&(N+=Math.pow(S,-c)),N*=h[x],y[$]+=N}}return n.makeTensorInfo(a.shape,s.dtype,y)}const Mee={kernelName:pm,backendName:"cpu",kernelFunc:Bee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r,i=n;let u=s.shape;const l=u.length,c=Ie(o,u);let d=c;const p=Ye(d,l);let h=i.data.get(s.dataId).values;if(p!=null){const v=new Array(l);for(let b=0;b<v.length;b++)v[b]=u[p[b]];h=jw(h,u,s.dtype,p,v),d=Qe(d.length,l),u=v}he(s,"max"),bt("max",d,l);const[f,m]=wt(u,d),y=L(m),g=jE(h,y,f,s.dtype),x=i.write(g,f,s.dtype);let w=f;return a&&(w=vt(f,c)),{dataId:x,shape:w,dtype:s.dtype}}const Vee={kernelName:Sd,backendName:"cpu",kernelFunc:c3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e;he(s,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1;k(Dt(a,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const c=jt(s.shape,o,a,l,i,u);let d;if(c.filterWidth===1&&c.filterHeight===1&&Pe(c.inShape,c.outShape))d=ts({inputs:{x:s},backend:n});else{const p=n.data.get(s.dataId).values,h=fe(s.shape),f=ev(p,s.shape,s.dtype,h,c,"max");d=n.makeTensorInfo(c.outShape,s.dtype,f.values)}return d}const Uee={kernelName:$d,backendName:"cpu",kernelFunc:Wee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u,dataFormat:l}=r;he(s,"maxPool3d");const c=Yn(s.shape,o,a,1,i,u,l),d=n.data.get(s.dataId).values,p=a3(d,s.shape,s.dtype,fe(s.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}const Hee={kernelName:kd,backendName:"cpu",kernelFunc:Gee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jee(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;he([s,o],"maxPool3DGrad");const c=Yn(o.shape,a,i,1,u,l),d=n.bufferSync(o),p=AZ(d,c),h=c.strideDepth,f=c.strideHeight,m=c.strideWidth,y=c.dilationDepth,g=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,b=c.effectiveFilterWidth,S=w-1-c.padInfo.front,$=b-1-c.padInfo.left,N=v-1-c.padInfo.top,E=be(o.shape,"float32"),R=n.bufferSync(s);for(let F=0;F<c.batchSize;++F)for(let B=0;B<c.inChannels;++B)for(let M=0;M<c.inDepth;++M)for(let V=0;V<c.inHeight;++V)for(let W=0;W<c.inWidth;++W){const H=M-S,q=V-N,O=W-$;let U=0;for(let j=0;j<w;j+=y){const T=(H+j)/h;if(!(T<0||T>=c.outDepth||Math.floor(T)!==T))for(let A=0;A<v;A+=g){const _=(q+A)/f;if(!(_<0||_>=c.outHeight||Math.floor(_)!==_))for(let G=0;G<b;G+=x){const K=(O+G)/m;if(K<0||K>=c.outWidth||Math.floor(K)!==K)continue;const Q=w*v*b-1-p.get(F,T,_,K,B),Z=j*v*b+A*b+G,ne=Q===Z?1:0;if(ne===0)continue;U+=R.get(F,T,_,K,B)*ne}}}E.set(U,F,M,V,W,B)}return n.makeTensorInfo(E.shape,E.dtype,E.values)}const Kee={kernelName:fm,backendName:"cpu",kernelFunc:jee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qee(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;he([o,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=jt(i.shape,u,l,1,c,d),h=n.data.get(i.dataId).values,f=be(p.outShape,i.dtype,o3(h,i.shape,i.dtype,p).values),m=p.strideHeight,y=p.strideWidth,g=p.dilationHeight,x=p.dilationWidth,w=p.effectiveFilterHeight,v=p.effectiveFilterWidth,b=v-1-p.padInfo.left,S=w-1-p.padInfo.top,$=be(i.shape,"float32"),N=n.data.get(s.dataId).values,E=be(s.shape,"float32",N);for(let R=0;R<p.batchSize;++R)for(let F=0;F<p.inChannels;++F)for(let B=0;B<p.inHeight;++B)for(let M=0;M<p.inWidth;++M){const V=B-S,W=M-b;let H=0;for(let q=0;q<w;q+=g){const O=(V+q)/m;if(!(O<0||O>=p.outHeight||Math.floor(O)!==O))for(let U=0;U<v;U+=x){const j=(W+U)/y;if(j<0||j>=p.outWidth||Math.floor(j)!==j)continue;const T=w*v-1-f.get(R,O,j,F),A=q*v+U,_=T===A?1:0;if(_===0)continue;H+=E.get(R,O,j,F)*_}}$.set(H,R,B,M,F)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const Xee={kernelName:hm,backendName:"cpu",kernelFunc:qee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yee(t,e,n,r,s){const o=fe(e),a=ev(t,e,n,o,s,"max"),i=o3(t,e,n,s,!0,r);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qee={kernelName:Id,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=e,u=n;he(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=jt(r.shape,s,o,[1,1],a),[d,p]=Yee(l,r.shape,r.dtype,i,c),h=u.write(d,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:h,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zee(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r,i=Ie(o,s.shape),l=wt(s.shape,i)[1],c=L(l),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([c]));d.push(p);const h=co({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=tv({inputs:{a:h,b:p},backend:n});d.push(f);const m=_p({inputs:{x:f},backend:n,attrs:{axis:o,keepDims:a}});return d.forEach(y=>n.disposeIntermediateTensorInfo(y)),m}const Jee={kernelName:Nd,backendName:"cpu",kernelFunc:Zee};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ete(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;he(s,"min");const i=Ie(o,s.shape);let u=i;const l=Ye(u,s.shape.length);let c=s;l!=null&&(c=pn({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Qe(u.length,s.shape.length)),bt("min",u,c.shape.length);const[d,p]=wt(c.shape,u),h=L(p),f=Rt(L(d),c.dtype),m=n.data.get(c.dataId).values;for(let g=0;g<f.length;++g){const x=g*h;let w=m[x];for(let v=0;v<h;++v){const b=m[x+v];(Number.isNaN(b)||b<w)&&(w=b)}f[g]=w}l!=null&&n.disposeIntermediateTensorInfo(c);const y=n.makeTensorInfo(d,c.dtype,f);if(a){const g=vt(d,i),x=qe({inputs:{x:y},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(y),x}return y}const tte={kernelName:Td,backendName:"cpu",kernelFunc:ete};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nte(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,mode:a}=r;he(s,"mirrorPad");const i=o.map((w,v)=>w[0]+s.shape[v]+w[1]),u=o.map(w=>w[0]),l=o.map((w,v)=>w[0]+s.shape[v]),c=a==="reflect"?0:1,d=n.data.get(s.dataId).values,p=s.shape.length,h=fe(s.shape),f=L(i),m=i.length,y=fe(i),g=xt(s.dtype,f);for(let w=0;w<f;w++){let v=Ca(w,m,y);for(let S=0;S<m;S++)v[S]<u[S]?v[S]=u[S]*2-v[S]-c:v[S]>=l[S]&&(v[S]=(l[S]-1)*2-v[S]+c);v=v.map((S,$)=>S-u[$]);const b=Rr(v,p,h);g[w]=d[b]}return{dataId:n.write(g,i,s.dtype),shape:i,dtype:s.dtype}}const rte={kernelName:Ed,backendName:"cpu",kernelFunc:nte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ste=mt((t,e)=>{const n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e}),ote=kt($u,ste),ate={kernelName:$u,backendName:"cpu",kernelFunc:ote};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d3(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=s.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const u=Ie([i],s.shape),l=c3({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=vt(l.shape,u),d=qe({inputs:{x:l},backend:n,attrs:{shape:c}}),p=qw({inputs:{a:s,b:d},backend:n}),h=AE({inputs:{x:p},backend:n}),f=_p({inputs:{x:h},backend:n,attrs:{axis:u,keepDims:!1}}),m=qe({inputs:{x:f},backend:n,attrs:{shape:c}}),y=tv({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),y}const ite={kernelName:ep,backendName:"cpu",kernelFunc:d3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ute(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r;he(s,"multinomial");const u=i?s:d3({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],d=n.data.get(u.dataId).values,p=[l,o],h=Rt(L(p),"int32");for(let f=0;f<l;++f){const m=f*c,y=new Float32Array(c-1);y[0]=d[m];for(let w=1;w<y.length;++w)y[w]=y[w-1]+d[m+w];const g=Dm.alea(a.toString()),x=f*o;for(let w=0;w<o;++w){const v=g();h[x+w]=y.length;for(let b=0;b<y.length;b++)if(v<y[b]){h[x+w]=b;break}}}return i||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",h)}const lte={kernelName:Rd,backendName:"cpu",kernelFunc:ute};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cte=Sp;function dte(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r;he(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,{selectedIndices:d}=cte(l,c,a,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const pte={kernelName:Dd,backendName:"cpu",kernelFunc:dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte=Gm;function fte(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r;he(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,{selectedIndices:p,validOutputs:h}=hte(c,d,a,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}const mte={kernelName:mm,backendName:"cpu",kernelFunc:fte};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gte=$p;function yte(t){const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r;he(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,p=a,h=i,f=u,m=l,{selectedIndices:y,selectedScores:g}=gte(c,d,p,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const xte={kernelName:Pd,backendName:"cpu",kernelFunc:yte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wte(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r;he(s,"oneHot");const l=L(s.shape),c=new Float32Array(l*a);c.fill(u);const d=n.data.get(s.dataId).values;for(let p=0;p<l;++p)d[p]>=0&&d[p]<a&&(c[p*a+d[p]]=i);return n.makeTensorInfo([...s.shape,a],o,c)}const vte={kernelName:Od,backendName:"cpu",kernelFunc:wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rf(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){const s=ha({inputs:{input:r},backend:n}),o=Rf({inputs:{x:s},backend:n}),a=Oi({inputs:{input:r},backend:n}),i=Rf({inputs:{x:a},backend:n}),u=Sn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return nv({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const bte={kernelName:dp,backendName:"cpu",kernelFunc:Rf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p3(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){const s=ha({inputs:{input:r},backend:n}),o=p3({inputs:{x:s},backend:n}),a=Oi({inputs:{input:r},backend:n}),i=Rf({inputs:{x:a},backend:n}),u=Sn({inputs:{real:o,imag:i},backend:n});return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),u}else return nv({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const Cte={kernelName:Ad,backendName:"cpu",kernelFunc:p3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h3(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return Ef({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{_t(o,c.shape,"All tensors passed to stack must have matching shapes"),k(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(c=>{const d=Ef({inputs:{input:c},backend:n,attrs:{dim:s}});return i.push(d),d}),l=Fi({inputs:u,backend:n,attrs:{axis:s}});return i.forEach(c=>n.disposeIntermediateTensorInfo(c)),l}const Ste={kernelName:Fd,backendName:"cpu",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $te(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;he(s,"pad");const i=o.map((x,w)=>x[0]+s.shape[w]+x[1]),u=o.map(x=>x[0]),l=n.data.get(s.dataId).values,c=L(s.shape),d=s.shape.length,p=fe(s.shape),h=L(i),f=i.length,m=fe(i),y=xt(s.dtype,h);a!==0&&y.fill(a);for(let x=0;x<c;x++){const v=Ca(x,d,p).map((S,$)=>S+u[$]),b=Rr(v,f,m);y[b]=l[x]}return{dataId:n.write(y,i,s.dtype),shape:i,dtype:s.dtype}}const f3={kernelName:Ld,backendName:"cpu",kernelFunc:$te};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kte=mt((t,e)=>Math.pow(t,e)),Ite=kt(Nu,kte),Nte={kernelName:Nu,backendName:"cpu",kernelFunc:Ite};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tte(t){const{inputs:e,backend:n,attrs:r}=t,{paramsNestedSplits:s,paramsDenseValues:o,indices:a}=e,i=s.map(y=>n.data.get(y.dataId).values),u=s.map(y=>y.shape),l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values,[d,p,h]=ZE(i,u,l,o.shape,o.dtype,c,a.shape),f=d.map(y=>n.makeTensorInfo([y.length],"int32",y)),m=n.makeTensorInfo(h,o.dtype,p);return f.concat([m])}const Ete={kernelName:gm,backendName:"cpu",kernelFunc:Tte};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rte(t){const{inputs:e,backend:n}=t,{starts:r,limits:s,deltas:o}=e,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[l,c]=JE(a,r.shape,r.dtype,i,s.shape,u,o.shape),d=n.makeTensorInfo([l.length],"int32",l),p=n.makeTensorInfo([c.length],r.dtype,c);return[d,p]}const _te={kernelName:ym,backendName:"cpu",kernelFunc:Rte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dte(t){const{inputs:e,backend:n,attrs:r}=t,{shape:s,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values,d=n.data.get(a.dataId).values,p=i.map(y=>n.data.get(y.dataId).values),h=i.map(y=>y.shape),[f,m]=eR(l,s.shape,c,o.shape,o.dtype,d,a.shape,p,h,u);return n.makeTensorInfo(f,o.dtype,m)}const Pte={kernelName:xm,backendName:"cpu",kernelFunc:Dte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ate(t){const{backend:e,attrs:n}=t,{start:r,stop:s,dtype:o,step:a}=n,i=tR(r,s,a,o);return e.makeTensorInfo([i.length],o,i)}const Ote={kernelName:Md,backendName:"cpu",kernelFunc:Ate};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fte=Me(Tu,t=>1/t),Lte={kernelName:Tu,backendName:"cpu",kernelFunc:Fte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zte(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;he(s,"resizeBilinear");const u=fe(s.shape),[l,c]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,y=new Float32Array(L([d,l,c,f])),g=[o&&l>1?p-1:p,o&&c>1?h-1:h],x=[o&&l>1?l-1:l,o&&c>1?c-1:c];let w=0;const v=g[0]/x[0],b=g[1]/x[1];for(let S=0;S<d;S++)for(let $=0;$<l;$++){let N;a?N=v*($+.5)-.5:N=v*$;const E=Math.max(0,Math.floor(N)),R=N-E,F=Math.min(p-1,Math.ceil(N)),B=S*u[0]+E*u[1],M=S*u[0]+F*u[1];for(let V=0;V<c;V++){let W;a?W=b*(V+.5)-.5:W=b*V;const H=Math.max(0,Math.floor(W)),q=W-H,O=Math.min(h-1,Math.ceil(W)),U=B+H*u[2],j=M+H*u[2],T=B+O*u[2],A=M+O*u[2];for(let _=0;_<f;_++){const G=m[U+_],K=m[j+_],Q=m[T+_],Z=m[A+_],ne=G+(Q-G)*q,de=K+(Z-K)*q,ye=ne+(de-ne)*R;y[w++]=ye}}}return n.makeTensorInfo([d,l,c,f],"float32",y)}const Bte={kernelName:Gd,backendName:"cpu",kernelFunc:zte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mte(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r;he([o,s],"resizeBilinearGrad");const i=fe(s.shape),[u,l,c,d]=s.shape,[,p,h]=o.shape,f=new Float32Array(u*l*c*d),m=[a&&p>1?l-1:l,a&&h>1?c-1:c],y=[a&&p>1?p-1:p,a&&h>1?h-1:h],g=m[0]/y[0],x=m[1]/y[1],w=n.data.get(o.dataId).values;let v=0;for(let b=0;b<u;b++){const S=b*i[0];for(let $=0;$<p;$++){const N=$*g,E=Math.floor(N),R=Math.min(Math.ceil(N),l-1),F=S+E*i[1],B=S+R*i[1],M=N-E,V=1-M;for(let W=0;W<h;W++){const H=W*x,q=Math.floor(H),O=Math.min(Math.ceil(H),c-1),U=H-q,j=1-U,T=F+q*i[2],A=F+O*i[2],_=B+q*i[2],G=B+O*i[2],K=V*j,Q=V*U,Z=M*j,ne=M*U;for(let de=0;de<d;de++){const ye=w[v++];f[T+de]+=ye*K,f[A+de]+=ye*Q,f[_+de]+=ye*Z,f[G+de]+=ye*ne}}}}return n.makeTensorInfo([u,c,l,d],"float32",f)}const Vte={kernelName:vm,backendName:"cpu",kernelFunc:Mte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wte(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r;he(s,"resizeNearestNeighbor");const u=fe(s.shape),[l,c]=i,[d,p,h,f]=s.shape,m=n.data.get(s.dataId).values,y=new Float32Array(d*l*c*f),g=[o&&l>1?p-1:p,o&&c>1?h-1:h],x=[o&&l>1?l-1:l,o&&c>1?c-1:c],w=g[0]/x[0],v=g[1]/x[1];let b=0;for(let S=0;S<d;S++){const $=S*u[0];for(let N=0;N<l;N++){const E=a?w*(N+.5):w*N;let R=Math.min(p-1,o?Math.round(E):Math.floor(E));a&&(R=Math.max(0,R));const F=$+R*u[1];for(let B=0;B<c;B++){const M=a?v*(B+.5):v*B;let V=Math.min(h-1,o?Math.round(M):Math.floor(M));a&&(V=Math.max(0,V));const W=F+V*u[2];for(let H=0;H<f;H++){const q=m[W+H];y[b++]=q}}}}return n.makeTensorInfo([d,l,c,f],s.dtype,y)}const Ute={kernelName:Ud,backendName:"cpu",kernelFunc:Wte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gte(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r;he([o,s],"resizeNearestNeighborGrad");const i=fe(s.shape),u=fe(o.shape),[l,c,d,p]=s.shape,[,h,f]=o.shape,m=new Float32Array(l*c*d*p),y=n.data.get(o.dataId).values,g=[a&&h>1?c-1:c,a&&f>1?d-1:d],x=[a&&h>1?h-1:h,a&&f>1?f-1:f],w=g[0]/x[0],v=g[1]/x[1],b=1/w,S=1/v,$=Math.ceil(b)*2+2,N=Math.ceil(S)*2+2;for(let E=0;E<l;E++){const R=E*i[0];for(let F=0;F<c;F++){const B=R+F*i[1],M=Math.floor(F*b),V=Math.floor(M-$/2);for(let W=0;W<d;W++){const H=B+W*i[2],q=Math.floor(W*S),O=Math.floor(q-N/2);for(let U=0;U<p;U++){let j=0;for(let T=0;T<$;T++){const A=T+V;if(A<0||A>=h)continue;const _=R+A*u[1],G=A*w,K=Math.min(c-1,a?Math.round(G):Math.floor(G));if(F===K)for(let Q=0;Q<N;Q++){const Z=Q+O;if(Z<0||Z>=f)continue;const ne=_+Z*u[2],de=Z*v,ye=Math.min(d-1,a?Math.round(de):Math.floor(de));W===ye&&(j+=y[ne+U])}}m[H+U]=j}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}const Hte={kernelName:wm,backendName:"cpu",kernelFunc:Gte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jte(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r;he(s,"reverse");const a=s.shape.length,i=Ie(o,s.shape);if(a===0)return ts({inputs:{x:s},backend:n});const u=new yt(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const d=u.indexToLoc(c),p=d.slice();i.forEach(h=>p[h]=s.shape[h]-1-p[h]),u.set(l.get(...p),...d)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}const Kte={kernelName:Hd,backendName:"cpu",kernelFunc:jte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qte={kernelName:pp,backendName:"cpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=xt(r.dtype,L(r.shape)),[l,c,d,p]=r.shape,[h,f]=Zm(a,c,d),m=255,y=Math.sin(s),g=Math.cos(s),x=i.data.get(r.dataId).values;for(let v=0;v<l;v++){const b=v*d*c*p;for(let S=0;S<c;S++){const $=S*(d*p);for(let N=0;N<d;N++){const E=N*p;for(let R=0;R<p;R++){const F=[l,S,N,R],B=F[2],M=F[1];let V=(B-h)*g-(M-f)*y,W=(B-h)*y+(M-f)*g;V=Math.round(V+h),W=Math.round(W+f);let H=o;if(typeof o!="number"&&(R===3?H=m:H=o[R]),V>=0&&V<d&&W>=0&&W<c){const O=W*(d*p),U=V*p,j=b+O+U+R;H=x[j]}const q=b+$+E+R;u[q]=H}}}}return{dataId:i.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xte=Me(_u,t=>{const e=Math.floor(t);return t-e<.5?Math.floor(t):t-e>.5?Math.ceil(t):e%2===0?e:e+1}),Yte={kernelName:_u,backendName:"cpu",kernelFunc:Xte};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qte(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Wr(o,s,a),p=!0,h=n.bufferSync(s),f=n.bufferSync(o),m=Ho(h,f,a,d,l,u,i,c,0,p);return n.makeTensorInfo(a,m.dtype,m.values)}const Zte={kernelName:jd,backendName:"cpu",kernelFunc:Qte};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jte(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<e?n=s+1:r=s;return r}function ene(t,e){let n=0,r=t.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),t[s]<=e?n=s+1:r=s;return r}function tne(t,e,n,r,s,o){const a=it("int32",n*s);for(let i=0;i<n;++i){const u=t.slice(i*r,(i+1)*r),l=i*s;for(let c=0;c<s;++c)a[l+c]=o==="left"?Jte(u,e[c+l]):ene(u,e[c+l])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nne(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,l=tne(i,u,s.shape[0],s.shape[1],o.shape[1],a);return n.makeTensorInfo(o.shape,"int32",l)}const rne={kernelName:qd,backendName:"cpu",kernelFunc:nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sne(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e;he([r,s,o],"select");const a=r.shape.length,i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=$t(s.dtype,o.dtype),d=Rt(L(s.shape),c);let p=0;const h=a===0||a>1||s.shape.length===1?1:L(s.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<h;m++)i[f]===1?d[p++]=u[f]:d[p++]=l[f];return n.makeTensorInfo(s.shape,c,d)}const one={kernelName:Xd,backendName:"cpu",kernelFunc:sne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ane=tg,ine=ng,une=Me(Pu,t=>t>=0?ine*t:ane*(Math.exp(t)-1)),lne={kernelName:Pu,backendName:"cpu",kernelFunc:une};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cne=Me(Fu,t=>t<0?-1:t>0?1:0),dne={kernelName:Fu,backendName:"cpu",kernelFunc:cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pne=Me(Au,t=>Math.sin(t)),hne={kernelName:Au,backendName:"cpu",kernelFunc:pne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fne=Me(Ou,t=>Math.sinh(t)),mne={kernelName:Ou,backendName:"cpu",kernelFunc:fne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gne=11920928955078125e-23,jC=Math.log(gne)+2,yne=Me(zu,t=>{const e=t>-jC,n=t<jC,r=Math.exp(t);let s;return n?s=r:e?s=t:s=Math.log(1+r),s}),xne={kernelName:zu,backendName:"cpu",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;he([s],"spaceToBatchND");const i=L(o),u=[[0,0]];u.push(...a);for(let S=1+o.length;S<s.shape.length;++S)u.push([0,0]);const l=f3.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Na(l.shape,o,i,!1),d=Ta(c.length,o.length,!1),p=Ea(l.shape,o,i,!1),m=qe({inputs:{x:l},backend:n,attrs:{shape:c}}),x=pn({inputs:{x:m},backend:n,attrs:{perm:d}}),b=qe({inputs:{x},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(x),b}const vne={kernelName:Zd,backendName:"cpu",kernelFunc:wne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bne(t){const{inputs:e,backend:n}=t,{indices:r,values:s,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${s.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(o.dataId).values,c=n.data.get(a.dataId).values[0],[d,p,h,f,m]=oR(i,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],s.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(y=>Number(y)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}const Cne={kernelName:bm,backendName:"cpu",kernelFunc:bne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sne(t){const{inputs:e,backend:n}=t,{inputIndices:r,inputShape:s,newShape:o}=e;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(s.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(n.data.get(s.dataId).values),i=n.data.get(r.dataId).values,u=Array.from(n.data.get(o.dataId).values),[l,c,d]=aR(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const $ne={kernelName:Cm,backendName:"cpu",kernelFunc:Sne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kne(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[l,c]=Kw(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}const Ine={kernelName:tp,backendName:"cpu",kernelFunc:kne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nne(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(s.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(s.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values,[l,c]=Kw(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}const Tne={kernelName:np,backendName:"cpu",kernelFunc:Nne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ene(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Wr(o,s,i),h=!1,f=n.bufferSync(s);let m;switch(o.dtype){case"bool":{const y=n.bufferSync(o),g=Boolean(n.data.get(a.dataId).values[0]);m=Ho(f,y,i,p,c,l,u,d,g,h);break}case"float32":{const y=n.bufferSync(o),g=n.data.get(a.dataId).values[0];m=Ho(f,y,i,p,c,l,u,d,g,h);break}case"int32":{const y=n.bufferSync(o),g=n.data.get(a.dataId).values[0];m=Ho(f,y,i,p,c,l,u,d,g,h);break}case"string":{const y=n.bufferSync(o),g=fr(n.data.get(a.dataId).values[0]);m=Ho(f,y,i,p,c,l,u,d,g,h);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return n.makeTensorInfo(i,m.dtype,m.values)}const Rne={kernelName:rp,backendName:"cpu",kernelFunc:Ene};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ie(a,s.shape)[0],u=fg(s,o,i),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map(d=>{const p=[...c];p[i]=d;const h=fa({inputs:{x:s},backend:n,attrs:{begin:l,size:p}});return l[i]+=d,h})}const Dne={kernelName:Jd,backendName:"cpu",kernelFunc:_ne};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pne={kernelName:Sm,backendName:"cpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e;he(n,"square");const s=r.data.get(n.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const u=s[i];o[i]=u*u}return{dataId:r.write(o,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ane=Me(Hu,(t,e)=>{const n=e;return isNaN(t)?NaN:t>0?1:n.alpha}),One={kernelName:Hu,backendName:"cpu",kernelFunc:Ane};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r;he(s,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:w,strides:v}=Xm(s.shape,o,a,i,u,l,c,d,p);let b;if(m)b=qe({inputs:{x:s},backend:n,attrs:{shape:f}});else if(y||g){k(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const S=Km(x,w,v),$=fa({inputs:{x:s},backend:n,attrs:{begin:x,size:S}});b=qe({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo($)}else{const S=n.bufferSync(s),$=lR(h,S,v,x);b=n.makeTensorInfo(f,$.dtype,$.values)}return b}const Lne={kernelName:op,backendName:"cpu",kernelFunc:Fne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zne(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=e,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=cR(p,h,s,o,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const Bne={kernelName:ap,backendName:"cpu",kernelFunc:zne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mne(t){const{inputs:e,backend:n,attrs:r}=t,{skipEmpty:s}=r,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.data.get(o.dataId).values,u=n.data.get(a.dataId).values[0],[l,c,d]=dR(i,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}const Vne={kernelName:$m,backendName:"cpu",kernelFunc:Mne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wne(t){const{inputs:e,backend:n,attrs:r}=t,{numBuckets:s}=r,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(o.dataId).values,i=pR(a,s);return n.makeTensorInfo(o.shape,"int32",i)}const Une={kernelName:km,backendName:"cpu",kernelFunc:Wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gne=Me(Wu,t=>Math.tan(t)),Hne={kernelName:Wu,backendName:"cpu",kernelFunc:Gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jne=Me(Uu,t=>Math.tanh(t)),Kne={kernelName:Uu,backendName:"cpu",kernelFunc:jne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qne(t){const{inputs:e,backend:n}=t,{tensor:r,indices:s,updates:o}=e,{sliceRank:a,numUpdates:i,sliceSize:u,strides:l,outputSize:c}=Wr(o,s,r.shape),d=!1,p=n.bufferSync(s),h=n.bufferSync(o),f=n.bufferSync(r),m=Ho(p,h,r.shape,c,u,i,a,l,f,d);return n.makeTensorInfo(r.shape,m.dtype,m.values)}const Xne={kernelName:Kd,backendName:"cpu",kernelFunc:qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;he(s,"tile");const a=fR(n.bufferSync(s),o);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const Qne={kernelName:Gu,backendName:"cpu",kernelFunc:Yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zne(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r;he(s,"topk");const i=n.data.get(s.dataId).values,[u,l]=gR(i,s.shape,s.dtype,o,a);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}const Jne={kernelName:ip,backendName:"cpu",kernelFunc:Zne};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ere(t){const{inputs:e,attrs:n,backend:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=n,[c,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],y=[c,f,m,h],g=fe(s.shape),x=g[0],w=g[1],v=g[2],b=fe(y),S=b[0],$=b[1],N=b[2],E=xt(s.dtype,L(y));E.fill(u);const R=r.data.get(s.dataId).values,F=r.data.get(o.dataId).values;for(let M=0;M<c;++M){const V=o.shape[0]===1?F:F.subarray(M*8,M*8+8);for(let W=0;W<f;++W)for(let H=0;H<m;++H)for(let q=0;q<h;++q){let O;const U=V[6]*H+V[7]*W+1;if(U===0)continue;const j=(V[0]*H+V[1]*W+V[2])/U,T=(V[3]*H+V[4]*W+V[5])/U,A=KC(j,p,i),_=KC(T,d,i);switch(a){case"nearest":O=are(R,d,p,x,w,v,M,_,A,q,u);break;case"bilinear":O=ire(R,d,p,x,w,v,M,_,A,q,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const G=M*S+W*$+H*N+q;E[G]=O}return r.makeTensorInfo(y,s.dtype,E)}return{dataId:r.write(E,y,s.dtype),shape:s.shape,dtype:s.dtype}}const tre={kernelName:up,backendName:"cpu",kernelFunc:ere};function KC(t,e,n){switch(n){case"reflect":return nre(t,e);case"wrap":return rre(t,e);case"nearest":return ore(t,e);case"constant":default:return sre(t)}}function nre(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const r=2*e;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-e?n+r:-n-1}else if(n>e-1)if(e<=1)n=0;else{const r=2*e;n-=r*Math.trunc(n/r),n>=e&&(n=r-n-1)}return so(0,n,e-1)}function rre(t,e){let n=t;if(n<0)if(e<=1)n=0;else{const r=e-1;n+=e*(Math.trunc(-n/r)+1)}else if(n>e-1)if(e<=1)n=0;else{const r=e-1;n-=e*Math.trunc(n/r)}return so(0,n,e-1)}function sre(t,e){return t}function ore(t,e){return so(0,t,e-1)}function Sl(t,e,n,r,s,o,a,i,u,l,c){const d=a*r+i*s+u*o+l;return 0<=i&&i<e&&0<=u&&u<n?t[d]:c}function are(t,e,n,r,s,o,a,i,u,l,c){const d=Math.round(i),p=Math.round(u);return Sl(t,e,n,r,s,o,a,d,p,l,c)}function ire(t,e,n,r,s,o,a,i,u,l,c){const d=Math.floor(i),p=Math.floor(u),h=d+1,f=p+1,m=(f-u)*Sl(t,e,n,r,s,o,a,d,p,l,c)+(u-p)*Sl(t,e,n,r,s,o,a,d,f,l,c),y=(f-u)*Sl(t,e,n,r,s,o,a,h,p,l,c)+(u-p)*Sl(t,e,n,r,s,o,a,h,f,l,c);return(h-i)*m+(i-d)*y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ure(t){const{inputs:e,attrs:n,backend:r}=t,{axis:s}=n,{x:o}=e;he(o,"unique");const a=r.data.get(o.dataId).values,{outputValues:i,outputShape:u,indices:l}=yR(a,s,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}const lre={kernelName:Im,backendName:"cpu",kernelFunc:ure};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cre(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s.shape.length,i=s.shape[o],u=new Array(a-1);let l=0;for(let h=0;h<a;h++)h!==o&&(u[l++]=s.shape[h]);const c=new Array(a).fill(0),d=s.shape.slice();d[o]=1;const p=new Array(i);for(let h=0;h<p.length;h++){c[o]=h;const f=fa({inputs:{x:s},backend:n,attrs:{begin:c,size:d}});p[h]=qe({inputs:{x:f},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(f)}return p}const dre={kernelName:lp,backendName:"cpu",kernelFunc:cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pre(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r;he(s,"unsortedSegmentSum");const i=s.shape.length,u=o.shape.length,l=[],c=[],d=i-u;let p=o;for(let f=0;f<d;++f){const m=Ef({inputs:{input:p},backend:n,attrs:{dim:f+1}});p=m,c.push(m)}for(let f=0;f<a;++f){const m=Es(f,"int32"),y=n.makeTensorInfo([],"int32",m),g=DE({inputs:{a:y,b:p},backend:n}),x=co({inputs:{x:g},backend:n,attrs:{dtype:"float32"}}),w=yg({inputs:{a:x,b:s},backend:n}),v=_p({inputs:{x:w},backend:n,attrs:{axis:0,keepDims:!1}});l.push(v),c.push(y),c.push(g),c.push(x),c.push(w),c.push(v)}const h=h3({inputs:l,backend:n,attrs:{axis:0}});return c.forEach(f=>n.disposeIntermediateTensorInfo(f)),h}const hre={kernelName:cp,backendName:"cpu",kernelFunc:pre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fre=[uZ,UH,cZ,pZ,XH,fZ,gZ,xZ,vZ,CZ,$Z,IZ,TZ,_Z,PZ,FZ,zZ,MZ,WZ,aZ,GZ,jZ,qZ,QH,YZ,KH,JH,ZZ,GH,eJ,nJ,rJ,oJ,iJ,lJ,dJ,hJ,mJ,yJ,wJ,bJ,SJ,kJ,NJ,TJ,RJ,DJ,AJ,OJ,FJ,LJ,BJ,WJ,JQ,GJ,e6,ZJ,t6,JJ,r6,oee,aee,uee,o6,i6,cee,pee,fee,gee,l6,d6,HH,xee,tJ,vee,Cee,$ee,eZ,h6,m6,Iee,y6,Tee,_ee,Pee,Fee,zee,Mee,Vee,w6,Uee,Hee,Kee,Xee,Qee,Jee,tte,b6,rte,ate,lte,S6,k6,pte,mte,xte,N6,vte,Cte,Ste,f3,Nte,nZ,R6,Ete,_te,Pte,Ote,jH,l0,Lte,rZ,sZ,oZ,Bte,Vte,Ute,Hte,Kte,qte,Yte,z6,Zte,rne,one,lne,M6,dne,hne,mne,V6,ite,xne,vne,Cne,$ne,Ine,Tne,Rne,Dne,G6,Pne,j6,q6,One,Lne,Bne,Vne,Une,Z6,MJ,Hne,Kne,Xne,Qne,Jne,tre,T6,lre,dre,hre,bte];for(const t of fre)hp(t);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qn=z();Qn.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);Qn.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);Qn.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);Qn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);Qn.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);Qn.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);Qn.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);Qn.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);Qn.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);Qn.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);Qn.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);Qn.registerFlag("WEBGPU_PRINT_SHADER",()=>"");Qn.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mre{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gre{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,n,r=!1,s=!0){let o;const a=qC(e,n);return s?(this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).length>0?(o=this.freeBuffers.get(a).pop(),this.numFreeBuffers--):(o=this.device.createBuffer({size:e,usage:n,mappedAtCreation:r}),this.numBytesAllocated+=e)):(o=this.device.createBuffer({size:e,usage:n,mappedAtCreation:r}),this.numBytesAllocated+=e),this.usedBuffers.has(a)||this.usedBuffers.set(a,[]),this.usedBuffers.get(a).push(o),this.numUsedBuffers++,this.numBytesUsed+=e,o}releaseBuffer(e,n=!0){if(this.freeBuffers.size===0)return;const r=e.size,s=e.usage,o=qC(r,s),a=this.usedBuffers.get(o),i=a.indexOf(e);if(i<0)throw new Error("Cannot find the buffer in buffer manager");a[i]=a[a.length-1],a.pop(),this.numUsedBuffers--,this.numBytesUsed-=r,n?(this.freeBuffers.get(o).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=r)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.usedBuffers.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function qC(t,e){return`${t}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yre{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,n,r,s){const o=YC(r),a=e*n*o,i=XC(e,n,r,s);if(this.freeTextures.has(i)||this.freeTextures.set(i,[]),this.usedTextures.has(i)||this.usedTextures.set(i,[]),this.numBytesUsed+=a,this.numUsedTextures++,this.freeTextures.get(i).length>0){this.numFreeTextures--;const l=this.freeTextures.get(i).shift();return this.usedTextures.get(i).push(l),l}this.numBytesAllocated+=a;const u=this.device.createTexture({size:[e,n],format:r,usage:s});return this.usedTextures.get(i).push(u),u}releaseTexture(e){if(this.freeTextures.size===0)return;const n=e.width,r=e.height,s=e.format,o=e.usage,a=XC(n,r,s,o);this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.freeTextures.get(a).push(e),this.numFreeTextures++,this.numUsedTextures--;const i=this.usedTextures.get(a),u=i.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");i.splice(u,1);const l=YC(s),c=n*r*l;this.numBytesUsed-=c}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.usedTextures.forEach((e,n)=>{e.forEach(r=>{r.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function XC(t,e,n,r){return`${t}_${e}_${n}_${r}`}function YC(t){if(t==="rgba8unorm")return 16;throw new Error(`${t} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xre(t,e){if(Math.max(...t)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const n=t.length,r="xyzwuv",s=t.map(a=>`${e}.${r[a]}`),o=new Array(n-1);o[n-2]=s[n-1];for(let a=n-3;a>=0;--a)o[a]=`(${o[a+1]} * ${s[a+1]})`;return o}const ko=(t,e,n)=>n==="int32"?`atomicAdd(${t}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${t}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Li;(function(t){t[t.FROM_PIXELS=0]="FROM_PIXELS",t[t.DRAW=1]="DRAW"})(Li||(Li={}));const wre=(t,e,n,r,s)=>{const o={dtype:r.dtype,shape:r.shape},a=bre(n,o,e),i=t.createShaderModule({code:a,label:e.constructor.name});let u=z().get("WEBGPU_PRINT_SHADER");if(u!==""){u=u.toLowerCase();const l=u.split(",");(u==="all"||l.some(c=>e.shaderKey.toLowerCase().includes(c)))&&(console.group(e.shaderKey),console.debug(a),console.groupEnd())}return s?t.createComputePipelineAsync({compute:{module:i,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):t.createComputePipeline({compute:{module:i,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},ke=(t,e="f32")=>{switch(t){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${t}-component ${e} is not supported.`)}};function ft(t){if(t<=1)return"i32";if(t===2)return"vec2<i32>";if(t===3)return"vec3<i32>";if(t===4)return"vec4<i32>";if(t===5)return"vec5";if(t===6)return"vec6";throw Error(`GPU for rank ${t} is not yet supported`)}function xs(t){if(t===0)return"x";if(t===1)return"y";if(t===2)return"z";if(t===3)return"w";if(t===4)return"u";if(t===5)return"v";throw Error(`Index ${t} is not yet supported`)}function te(...t){let e;switch(t.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${t[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function QC(t,e){let n;return n=`
     ${vre(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${t?"main(getGlobalIndex());":"main();"};
      }
    `,n}function vre(t){return`
  @compute @workgroup_size(${t.workgroupSize[0]}, ${t.workgroupSize[1]}, ${t.workgroupSize[2]})
`}function bre(t,e,n){const r=[],s=n.workgroupSize[0]*n.workgroupSize[1]*n.workgroupSize[2];if(n.outputComponent=n.outputComponent?n.outputComponent:1,r.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${m3(n)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${s}u +
                localIndex);
        `}
      }
    `),n.pixelsOpType!=null){const f=n.pixelsOpType===Li.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${Bo(e.dtype,n.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${Bo(t[0].dtype,n.outputComponent)}>;`,m=e.shape.length===3?"vec2<i32>":"i32";r.push(`
        struct Uniform {
          outShapeStrides : ${m},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${f}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const y=JC(n);return[ZC,r.join(`
`),Nh(e.shape),n.getUserCode(),QC(y,n)].join(`
`)}let o,a,i="struct Uniforms { NAN : f32, INFINITY : f32, ";n.variableNames.forEach((f,m)=>{const y=ft(t[m].shape.length);i+=`${f.charAt(0).toLowerCase()+f.slice(1)}Shape : ${y}, `,o=t[m].shape.length-1,a=ft(o),i+=`${f.charAt(0).toLowerCase()+f.slice(1)}ShapeStrides: ${a}, `}),i+=`outShape : ${ft(e.shape.length)}, `,o=e.shape.length-1,a=ft(o),i+=`
         outShapeStrides: ${a}, `,n.size&&(i+="size : i32, "),n.uniforms&&(i+=n.uniforms),i+="};",i=Rre(i),r.push(i),n.atomic?r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):r.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${Bo(e.dtype,n.outputComponent)}>;
    `),n.variableNames.forEach((f,m)=>{r.push(`
      @group(0) @binding(${1+m}) var<storage, read> ${f}: array<${n.variableComponents?Bo(t[m].dtype,n.variableComponents[m]):Bo(t[m].dtype,n.outputComponent)}>;
        `)}),i!==""&&r.push(`
      @group(0) @binding(${1+n.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const l=Nre(e.shape,n.dispatchLayout),c=[ZC,r.join(`
`)+Sre,Nh(e.shape),l,Tre(e.shape.length)];n.atomic||c.push(Ere(e.shape,e.dtype,n.outputComponent)),n.variableNames.forEach((f,m)=>{c.push(`${Nh(t[m].shape,f)}`)});const d=t.map((f,m)=>Ire(f,e.shape,n.variableComponents?n.variableComponents[m]:n.outputComponent,n.dispatchLayout.x.length===e.shape.length)).join(`
`);c.push(d),c.push(n.getUserCode());const p=JC(n);return c.push(QC(p,n)),c.join(`
`)}function Cre(t,e,n){let r=t.shaderKey;if(t.pixelsOpType!=null)return r;const s=[],o=[];e.forEach(c=>{s.push(c.shape),o.push(c.dtype)}),s.push(n.shape),o.push(n.dtype);const a=e.map(c=>$s(c.shape,n.shape)),i=e.map(c=>Pe(c.shape,n.shape)).join("_"),u=a.map(c=>c.join("_")).join(";"),l=m3(t)?"flatDispatch":"";return r+="_"+(t.workgroupSize?t.workgroupSize.join(","):"")+s.map(c=>c.length).join(",")+o.join(",")+t.variableNames.join(",")+u+i+l,r}const ZC=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Sre=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function Nh(t,e=""){const n=t.length,r=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",s=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(n<=1)return`fn ${r}(index : i32) -> i32 { return index; }`;const o=fe(t),a=ft(n),i=[];for(let l=0;l<n;l++)i.push(`d${l}`);if(o.length===1)return`    fn ${r}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${s}; let d1 = index - d0 * uniforms.${s};
      return vec2<i32>(d0, d1);
    }`;let u;return u="var index2 = index;"+o.map((l,c)=>{const d=`let ${i[c]} = index2 / uniforms.${s}.${xs(c)}`,p=c===o.length-1?`let ${i[c+1]} = index2 - ${i[c]} * uniforms.${s}.${xs(c)}`:`index2 = index2 - ${i[c]} * uniforms.${s}.${xs(c)}`;return`${d}; ${p};`}).join(""),`
    fn ${r}(index : i32) -> ${a} {
      ${u}
      return ${a}(${i.join(",")});
    }
  `}function $re(t,e){const n=t.name,r=t.shape.length,s=ft(r),o="get"+n.charAt(0).toUpperCase()+n.slice(1),a=["d0","d1","d2","d3","d4","d5"].slice(0,r),i=a.map(c=>`${c} : i32`).join(", ");if(r<1)return`
      fn ${o}() -> ${ke(e)} {
        return ${ke(e)}(${n}[0]);
      }
    `;const u=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let l=`${r}D`;return r===0&&(l="1D"),`
    fn ${o}(${i}) -> ${ke(e)} {
      return ${ke(e)}(${n}[getIndexFromCoords${l}(${s}(${a.join(",")}),
        ${u})${e===1?"":` / ${e}`}]);
    }
   `}function kre(t,e,n,r){const s=t.name,o=s.charAt(0).toUpperCase()+s.slice(1),a="get"+o+"ByOutput",i=t.shape.length,u=e.length,l=ft(u);if(Pe(t.shape,e)&&r)return`
    fn ${a}Index(globalIndex : i32) -> ${ke(n)} {
      return ${ke(n)}(${s}[globalIndex]);
    }

    fn ${a}Coords(coords : ${l}) -> ${ke(n)} {
      return ${ke(n)}(${s}[${u>1?"getOutputIndexFromCoords(coords)":"coords"}${n===1?"":` / ${n}`}]);
    }
    `;const c=$s(t.shape,e),d=u-i;let p="";if(i===0)return`
    fn ${a}Index(globalIndex : i32) -> ${ke(n)}{
      return get${o}();
    }

    fn ${a}Coords(coords : ${l}) -> ${ke(n)}{
      return get${o}();
    }
  `;u<2&&c.length>=1?p="coords = 0;":p=c.map(y=>`coords.${xs(y+d)} = 0;`).join(`
`);let h="";if(u<2&&i>0)h="coords";else if(u>1){const y=ft(i),g=t.shape.map((x,w)=>`coords.${xs(w+d)}`).join(", ");h=`${y}(${g})`}else h="coords";const f=`uniforms.${s.charAt(0).toLowerCase()+s.slice(1)}Shape`,m=`${i}D`;return`
  fn ${a}Index(globalIndex : i32) -> ${ke(n)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${p}
    return ${ke(n)}(${s}[getIndexFromCoords${m}(${h}, ${f})${n===1?"":` / ${n}`}]);
  }

  fn ${a}Coords(coordsIn : ${l}) -> ${ke(n)} {
    var coords = coordsIn;
    ${p}
    return ${ke(n)}(${s}[getIndexFromCoords${m}(${h}, ${f})${n===1?"":` / ${n}`}]);
  }
`}function Ire(t,e,n,r){let s=$re(t,n);return t.shape.length<=e.length&&(s+=kre(t,e,n,r)),s}function Nre(t,e){const{x:n,y:r=[],z:s=[]}=e,o=t.length,a=n.length+r.length+s.length;if(a!==o)return"";if(n.length===o)return`fn getOutputCoords() -> ${ft(o)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let i="";const u=[n,r,s];for(let p=0;p<u.length;p++){const h=u[p];if(h.length!==0)if(h.length===1)i+=`let d${h[0]} = i32(globalId[${p}]);`;else{const f=xre(h,"uniforms.outShape");i+=`var index${p} = i32(globalId[${p}]);`;for(let m=0;m<f.length;m++)i+=`let d${h[m]} = index${p} / ${f[m]};`,m===f.length-1?i+=`let d${h[m+1]} = index${p} - d${h[m]} * ${f[m]};`:i+=`index${p} = index${p} - d${h[m]} * ${f[m]};`}}const l=[];for(let p=0;p<a;p++)l.push(`d${p}`);const c=ft(a);let d=`fn getOutputCoords() -> ${c} {
  ${i}
`;return l.length===0?d+=`return ${c}(0); }`:d+=`return ${c}(${l.join(",")}); }`,d}function Tre(t){let e="";switch(t){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:k(!1,()=>`Unsupported ${t}D shape`);break}return e}function m3(t){return t.dispatch[1]===1&&t.dispatch[2]===1}function Bo(t,e=1){if(t==="float32")return ke(e,"f32");if(t==="int32"||t==="bool")return ke(e,"i32");throw new Error(`type ${t} is not supported.`)}function Ere(t,e,n){const r=t.length,s=Bo(e,n);let o=`fn setOutputAtIndex(flatIndex : i32, value : ${ke(n)}) {
      result[flatIndex] = ${s}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${ke(n,"i32")}) {
      result[flatIndex] = ${s}(value);
    }
    `;if(r>=2){const a=["d0","d1","d2","d3","d4","d5"].slice(0,r),i=ft(r);o+=`
      fn setOutputAtCoords(${a.map(u=>`${u} : i32`).join(", ")}, value : ${ke(n)}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndex(flatIndex${n===1?"":` / ${n}`}, value);
      }
      fn setOutputAtCoordsI32(${a.map(u=>`${u} : i32`).join(", ")}, value : ${ke(n,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${i}(${a.join(", ")}));
        setOutputAtIndexI32(flatIndex${n===1?"":` / ${n}`}, value);
      }
    `}return o}function Rre(t){const e=/(\w+)\s*:\s*vec(5|6)/g;t=t.replace(e,r=>"@align(16) "+r);const n=/vec(5|6)\s*,\s*(\w+)/g;return t=t.replace(n,(r,s,o)=>`vec${s}, @align(16) ${o}`),t}function JC(t){return!(t.dispatchLayout.hasOwnProperty("y")&&t.dispatchLayout.y.length!==0||t.dispatchLayout.hasOwnProperty("z")&&t.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ea=t=>{let e=1;for(let n=0;n<t.length;n++)e*=t[n];return e};function re(t,e,n=[1,1,1],r=[1,1,1]){const[s,o,a]=[Math.ceil(ea(t.x.map(i=>e[i]))/(n[0]*r[0])),t.y?Math.ceil(ea(t.y.map(i=>e[i]))/(n[1]*r[1])):1,t.z?Math.ceil(ea(t.z.map(i=>e[i]))/(n[2]*r[2])):1];return[s,o,a]}function _re(t,e,n,r=!1){const s=[8,8,1],o=[4,4,1];return r||(t<=8&&(o[1]=1),e<=16&&n<=16&&(s[0]=4)),{workgroupSize:s,elementsPerThread:o}}function g3(t,e,n=!1){if(n)return[8,8,1];const r=ea(t.x.map(o=>e[o])),s=ea(t.y.map(o=>e[o]));return r<=4?[4,16,1]:s<=4?[16,4,1]:[16,16,1]}function y3(t,e,n=!1){if(n)return[4,4,1];const r=ea(t.x.map(o=>e[o])),s=ea(t.y.map(o=>e[o]));return r<=4?[1,2,1]:s<=4?[2,1,1]:[2,2,1]}function le(t){return{x:t.map((e,n)=>n)}}function eS(t){if(t==="float32"||t==="int32"||t==="bool"||t==="string")return 4;if(t==="complex64")return 8;throw new Error(`Unknown dtype ${t}`)}function x3(){return!!(typeof globalThis!="undefined"&&globalThis.navigator&&globalThis.navigator.gpu)}function w3(t,e){Array.isArray(t)||(t=[t]),t.forEach(n=>{n!=null&&k(n.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var jr;(function(t){t[t.MatMulReduceProgram=0]="MatMulReduceProgram",t[t.MatMulSplitKProgram=1]="MatMulSplitKProgram",t[t.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",t[t.MatMulPackedProgram=3]="MatMulPackedProgram",t[t.MatMulMax=4]="MatMulMax"})(jr||(jr={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre=z().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Pre=(t,e)=>{const n=t.limits.maxComputeWorkgroupsPerDimension,r=e.dispatchLayout,s=e.dispatch;if(s.every(a=>a<=n))return s;k(s[0]>n&&r.y===void 0&&r.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let o=Math.ceil(Math.sqrt(s[0]));return o>n?(o=Math.ceil(Math.cbrt(s[0])),k(o<=n,()=>"Total dispatch size exceeds WebGPU maximum."),[o,o,o]):[o,o,1]};class Sg extends _c{nextDataId(){return Sg.nextDataId++}constructor(e,n){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!x3())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new mre(n),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new gre(this.device),this.textureManager=new yre(this.device),this.tensorMap=new rm(this,wn()),z().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,n=!1){if(!this.tensorMap.has(e))return!0;const r=this.tensorMap.get(e);return n?r.refCount=0:r.refCount--,r.refCount>0?!1:(r.complexTensorInfos!=null&&(this.disposeData(r.complexTensorInfos.real.dataId),this.disposeData(r.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const n=this.tensorMap.get(e);if(!(!n||!n.resource)){if(n.external){n.resource=null;return}n.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(n.resource):n.resource instanceof GPUTexture&&this.textureManager.releaseTexture(n.resource),n.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const n=this.tensorMap.get(e);n.refCount++}decRef(e){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);n.refCount--}}write(e,n,r){if(r==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.tensorMap.set(s,{dtype:r,shape:n,values:e,refCount:1}),s}move(e,n,r,s,o){if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:s,shape:r,values:n,refCount:o})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(n){throw new Error(n.message)}Object.keys(this.pipelineCache).map((n,r)=>{this.pipelineCache[n]=e[r]})}async getBufferData(e){if(z().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const n=e.size,r=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,n),this.submitQueue(),await r.mapAsync(GPUMapMode.READ);const s=r.getMappedRange().slice(0);return r.unmap(),r!=null&&this.bufferManager.releaseBuffer(r),z().getBool("WEBGPU_USE_PROFILE_TOOL")&&(k(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),s}convertAndCacheOnCPU(e,n){const r=this.tensorMap.get(e);return r.values=n,r.values}readSync(e){const n=this.tensorMap.get(e),{values:r,complexTensorInfos:s}=n;if(r!=null||n.dtype==="string")return r;if(n.dtype==="complex64"){const m=this.readSync(s.real.dataId),y=this.readSync(s.imag.dataId),g=Ol(Fr(m,y).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const o=["opaque","premultiplied"],a=n.resource,i=a.size;k(i%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const u=i/4,l=new ArrayBuffer(i),c=256,d=256,p=o.map(m=>new OffscreenCanvas(c,d)),h=new OffscreenCanvas(c,d);this.endComputePassEncoder(),p.map((m,y)=>{const g=m.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:o[y]}),g.getCurrentTexture()}).map((m,y)=>{const g=c*4,x=(N,E,R)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:a,bytesPerRow:g,offset:R},{texture:m},{width:N,height:E}),this.submitQueue();const F=h.getContext("2d",{willReadFrequently:!0});F.clearRect(0,0,N,E),F.drawImage(p[y],0,0);const B=F.getImageData(0,0,N,E).data,M=o[y],V=new Uint8ClampedArray(l,R,N*E*4);for(let W=0;W<V.length;W+=4)if(M==="premultiplied")V[W+3]=B[W+3];else{const H=B[W];V[W]=B[W+2],V[W+1]=B[W+1],V[W+2]=H}},w=Math.floor(u/(c*d));let v=c,b=d,S=0;for(let N=0;N<w;N++)x(v,b,S),S+=c*d*4;const $=u%(c*d);b=Math.floor($/c),b>0&&(x(v,b,S),S+=b*(c*4)),v=$%c,v>0&&x(v,1,S)});const f=Ol(l,n.dtype);return this.convertAndCacheOnCPU(e,f),f}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const n=this.tensorMap.get(e),{values:r}=n;if(r!=null)return r;let s;if(n.dtype==="complex64"){const o=await Promise.all([this.read(n.complexTensorInfos.real.dataId),this.read(n.complexTensorInfos.imag.dataId)]),a=o[0],i=o[1];s=Fr(a,i)}else{const o=await this.getBufferData(n.resource);s=Ol(o,n.dtype)}return this.convertAndCacheOnCPU(e,s),s}copyBuffer(e){const n=e.size,r=e.usage,s=this.bufferManager.acquireBuffer(n,r);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,n),this.submitQueue(),s}createTensorFromGPUData(e,n,r){let s=e.buffer;if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const o={id:this.nextDataId()};this.tensorMap.set(o,{dtype:r,shape:n,values:null,refCount:1,external:e.zeroCopy});const a=this.tensorMap.get(o),i=eS(a.dtype)*L(a.shape);if(e.buffer.size<i)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${i})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(s=this.copyBuffer(s)),a.resource=s,wn().makeTensorFromDataId(o,n,r,this)}readToGPU(e){const n=this.tensorMap.get(e),{values:r,dtype:s,shape:o,resource:a}=n;if(s==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(a==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const i=a,u=i.size,l=i.usage,c=this.bufferManager.acquireBuffer(u,l);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,c,0,u),this.submitQueue();const d=this.makeTensorInfo(o,s),p=wn().makeTensorFromTensorInfo(d),h=this.tensorMap.get(d.dataId);return h.resource=c,{tensorRef:p,buffer:c}}bufferSync(e){const n=this.readSync(e.dataId);if(e.dtype==="string")try{const r=n.map(s=>fr(s));return be(e.shape,e.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return be(e.shape,e.dtype,n)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const n=this.activeTimers,r=[];let s=!1;this.programTimersStack==null?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,e();const o=mr(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),a=mr(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=n,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},u=await Promise.all(o);return i.kernelMs=$1(u),i.getExtraProfileInfo=()=>u.map((l,c)=>({name:a[c],ms:l})).map(l=>`${l.name}: ${l.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}makeTensorInfo(e,n,r){return n==="string"&&r!=null&&r.length>0&&Ir(r[0])&&(r=r.map(o=>_r(o))),{dataId:this.write(r,e,n),shape:e,dtype:n}}tensorToBinding(e){if(!e)return null;const r=this.tensorMap.get(e.dataId).resource;return r instanceof GPUBuffer?{buffer:r}:r instanceof GPUTexture?r.createView():r}uploadToGPU(e){const n=this.tensorMap.get(e);if(n.resource!=null)return;const r=eS(n.dtype)*L(n.shape);let s;const o=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(n.values){if(s=this.bufferManager.acquireBuffer(r,o,!0),s.mapState==="unmapped"){const a=this.bufferManager.acquireBuffer(r,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),i=a.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(i).set(n.values):new Float32Array(i).set(n.values),a.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(a,0,s,0,r),this.stagingPendingDisposal.push(a)}else{const a=s.getMappedRange();n.dtype==="int32"||n.dtype==="bool"?new Int32Array(a).set(n.values):new Float32Array(a).set(n.values),s.unmap()}n.values=null}else s=this.bufferManager.acquireBuffer(r,o);n.resource=s}makeUniforms(e){let n=0,r=0;const s=[];let o=1;e.forEach(u=>{u.data.length===0&&(u.data=[1]);let l;switch(u.data.length){case 1:l=4;break;case 2:l=8;break;case 3:l=16;break;case 4:l=16;break;case 5:l=16;break;case 6:l=16;break;default:k(!1,()=>`Unsupported ${u.data.length}D shape`)}(r===5||r===6)&&(l=16),l>o&&(o=l),n=Math.ceil(n/l)*l,r=u.data.length,s.push(n),n+=u.data.length*4}),n=Math.ceil(n/o)*o;const a=new ArrayBuffer(n);e.forEach((u,l)=>{const c=s[l];u.type==="int32"?new Int32Array(a,c,u.data.length).set(u.data):u.type==="uint32"?new Uint32Array(a,c,u.data.length).set(u.data):new Float32Array(a,c,u.data.length).set(u.data)});const i=this.bufferManager.acquireBuffer(n,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(i,0,a,0,n),this.uniformPendingDisposal.push(i),{offset:0,size:n,buffer:i}}runWebGPUProgram(e,n,r,s,o){if(o||(o=this.makeTensorInfo(e.outputShape,r)),L(o.shape)===0)return this.tensorMap.get(o.dataId).values=xt(o.dtype,0),o;this.uploadToGPU(o.dataId),e.dispatch=Pre(this.device,e);const a=n.map((u,l)=>{if(u.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(u.dataId),{dtype:this.tensorMap.get(u.dataId).dtype,shape:u.shape,name:e.variableNames[l]}});e.shaderKey=Cre(e,a,o);const i=z().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=wre(this.device,e,a,o,i)),e.pipeline=this.pipelineCache[e.shaderKey],i||this.recordAndSubmit(e,o,n,s),o}recordAndSubmit(e,n,r,s){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let o=[],a=[];const i="int32";if(e.pixelsOpType==null){o.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),a=r.concat(n).map(h=>h.shape);const p="int32";a.map(h=>{o.push({type:p,data:h});const f=fe(h);o.push({type:p,data:f})})}else{const p=fe(n.shape);o.push({type:i,data:p})}if(e.size){const p=L(e.outputShape);o.push({type:i,data:[e.outputComponent?p/e.outputComponent:p]})}s&&(o=[...o,...s]);const u=[this.tensorToBinding(n),...r.map(p=>this.tensorToBinding(p)),this.makeUniforms(o)];r.forEach(p=>{this.commandQueueOwnedIds.add(p.dataId)}),this.commandQueueOwnedIds.add(n.dataId);const l=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:u.map((p,h)=>({binding:h,resource:p}))}),c=this.activeTimers!=null;this.ensureCommandEncoderReady();const d={};c&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),d.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(d)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(d)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,l),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(c||z().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===Li.DRAW)&&(this.endComputePassEncoder(),c?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const n=new BigUint64Array(e.getMappedRange()),r=Number(n[1]-n[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),r}shouldExecuteOnCPU(e,n=Dre){return z().getBool("WEBGPU_CPU_FORWARD")&&e.every(r=>this.tensorMap.get(r.dataId).resource==null&&L(r.shape)<n)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Sg.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */x3()&&Nm("webgpu",async()=>{const t={powerPreference:z().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(t),n={},r=[];e.features.has("timestamp-query")&&r.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&r.push(["bgra8unorm-storage"]),n.requiredFeatures=r;const s=e.limits;n.requiredLimits={maxComputeWorkgroupStorageSize:s.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:s.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:s.maxStorageBufferBindingSize,maxBufferSize:s.maxBufferSize,maxComputeWorkgroupSizeX:s.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:s.maxComputeInvocationsPerWorkgroup};const o=await e.requestDevice(n),a=await e.requestAdapterInfo();return new Sg(o,a)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var we;(function(t){t[t.ADD=0]="ADD",t[t.ATAN2=1]="ATAN2",t[t.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",t[t.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",t[t.DIV=4]="DIV",t[t.ELU_DER=5]="ELU_DER",t[t.EQUAL=6]="EQUAL",t[t.FLOOR_DIV=7]="FLOOR_DIV",t[t.GREATER=8]="GREATER",t[t.GREATER_EQUAL=9]="GREATER_EQUAL",t[t.LESS=10]="LESS",t[t.LESS_EQUAL=11]="LESS_EQUAL",t[t.LOGICAL_AND=12]="LOGICAL_AND",t[t.LOGICAL_OR=13]="LOGICAL_OR",t[t.MAX=14]="MAX",t[t.MIN=15]="MIN",t[t.MOD=16]="MOD",t[t.MUL=17]="MUL",t[t.NOT_EQUAL=18]="NOT_EQUAL",t[t.POW=19]="POW",t[t.PRELU=20]="PRELU",t[t.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",t[t.SUB=22]="SUB"})(we||(we={}));const Are="let resultTemp = a + b;",Ore="let resultTemp = atan2(a, b);",Fre="let resultTemp = areal * breal - aimag * bimag;",Lre="let resultTemp = areal * bimag + aimag * breal;",zre="let resultTemp = a / b;",Bre="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Mre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,Vre=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,Wre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,Ure=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,Gre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,Hre=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,jre="return f32(a >= 1.0 && b >= 1.0);",Kre=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,qre="return f32(a >= 1.0 || b >= 1.0);",Xre=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,Yre="let resultTemp = max(a, b);",Qre="let resultTemp = min(a, b);",Zre=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,Jre=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,ese="let resultTemp = a * b;",tse=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,nse=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,rse=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,sse=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,ose="if (a < 0.0) { return b * a; }  return a;",ase=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,ise="let resultTemp = (a - b) * (a - b);",use="let resultTemp = a - b;";function rv(t,e){let n;do{switch(t){case we.ATAN2:n=Ore;break;case we.MAX:n=Yre;break;case we.MIN:n=Qre;break;case we.MOD:n=e?Jre:Zre;break;case we.NOT_EQUAL:n=e?nse:tse;break;case we.POW:n=e?sse:rse;break;default:continue}let r,s,o;return e?(r="isnanVec4",s="vec4<f32>",o="vec4<bool>"):(r="isnan",s="f32",o="bool"),`
      let aIsNaN = ${r}(a);
      let aPostLegalization = select(a, ${s}(42), aIsNaN);
      let bIsNaN = ${r}(b);
      let bPostLegalization = select(b, ${s}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${n}
        return select(
            resultTemp, ${s}(valueForNaN),
            ${o}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(t){case we.ADD:n=Are;break;case we.COMPLEX_MULTIPLY_IMAG:n=Lre;break;case we.COMPLEX_MULTIPLY_REAL:n=Fre;break;case we.DIV:n=zre;break;case we.ELU_DER:n=Bre;break;case we.EQUAL:n=Mre;break;case we.FLOOR_DIV:n=Vre;break;case we.GREATER:n=Wre;break;case we.GREATER_EQUAL:n=Ure;break;case we.LESS:n=Gre;break;case we.LESS_EQUAL:n=Hre;break;case we.LOGICAL_AND:return e?Kre:jre;case we.LOGICAL_OR:return e?Xre:qre;case we.MUL:n=ese;break;case we.PRELU:return e?ase:ose;case we.SQUARED_DIFFERENCE:n=ise;break;case we.SUB:n=use;break}return`
    ${n}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ee;(function(t){t[t.ABS=0]="ABS",t[t.ACOS=1]="ACOS",t[t.ACOSH=2]="ACOSH",t[t.ASIN=3]="ASIN",t[t.ASINH=4]="ASINH",t[t.ATAN=5]="ATAN",t[t.ATANH=6]="ATANH",t[t.CEIL=7]="CEIL",t[t.COS=8]="COS",t[t.COSH=9]="COSH",t[t.ELU=10]="ELU",t[t.ERF=11]="ERF",t[t.EXP=12]="EXP",t[t.EXPM1=13]="EXPM1",t[t.FLOOR=14]="FLOOR",t[t.IS_FINITE=15]="IS_FINITE",t[t.IS_INF=16]="IS_INF",t[t.IS_NAN=17]="IS_NAN",t[t.LINEAR=18]="LINEAR",t[t.LOG=19]="LOG",t[t.LOG1P=20]="LOG1P",t[t.LOGICAL_NOT=21]="LOGICAL_NOT",t[t.NEG=22]="NEG",t[t.RELU=23]="RELU",t[t.RELU6=24]="RELU6",t[t.LEAKYRELU=25]="LEAKYRELU",t[t.RECIPROCAL=26]="RECIPROCAL",t[t.ROUND=27]="ROUND",t[t.RSQRT=28]="RSQRT",t[t.SELU=29]="SELU",t[t.SIGMOID=30]="SIGMOID",t[t.SIGN=31]="SIGN",t[t.SIN=32]="SIN",t[t.SINH=33]="SINH",t[t.SOFTPLUS=34]="SOFTPLUS",t[t.SQRT=35]="SQRT",t[t.SQUARE=36]="SQUARE",t[t.STEP=37]="STEP",t[t.TAN=38]="TAN",t[t.TANH=39]="TANH",t[t.TO_INT=40]="TO_INT"})(ee||(ee={}));const lse="return abs(a);",cse=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,dse=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,pse=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,hse="return asinh(a);",fse=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,mse=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,gse="return ceil(a);",yse="return cos(a);",xse=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,wse="return exp(a) - 1.0;",vse="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",bse=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,Cse=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${rg};
  let a1 = ${sg};
  let a2 = ${og};
  let a3 = ${ag};
  let a4 = ${ig};
  let a5 = ${ug};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,Sse="return exp(a);",$se="return floor(a);",kse="return f32(!isnan(a) && !isinf(a));",Ise="return f32(isinf(a));",Nse="return f32(isnan(a));",Tse="return a;",Ese=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,Rse=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,_se="return f32(!(a >= 1.0));",Dse="return -a;",Pse="if (a < 0.0) { return uniforms.alpha * a; } return a;",Ase=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,Ose="return 1.0 / a;",Fse="return select(a, 0.0, a < 0.0);",Lse="return clamp(a, 0.0, 6.0);",zse="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",Bse=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,Mse="return round(a);",Vse="return inverseSqrt(a);",Wse=`
  if (a >= 0.0) {
    return ${ng} * a;
  } else {
    return ${tg} * (exp(a) - 1.0);
  }
`,Use="return 1.0 / (1.0 + exp(-1.0 * a));",Gse="return sign(a);",Hse="return sin(a);",jse=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,Kse=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,qse="return sqrt(a);",Xse="return a * a;",Yse=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,Qse="return tan(a);",Zse=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,Jse="return f32(i32((a)));";function Po(t,e){switch(t){case ee.ABS:return lse;case ee.ACOS:return cse;case ee.ACOSH:return dse;case ee.ASIN:return pse;case ee.ASINH:return hse;case ee.ATAN:return fse;case ee.ATANH:return mse;case ee.COS:return yse;case ee.COSH:return xse;case ee.CEIL:return gse;case ee.ELU:return e?bse:vse;case ee.ERF:return Cse;case ee.EXP:return Sse;case ee.EXPM1:return wse;case ee.FLOOR:return $se;case ee.IS_FINITE:return kse;case ee.IS_INF:return Ise;case ee.IS_NAN:return Nse;case ee.LINEAR:return Tse;case ee.LOG:return Ese;case ee.LOG1P:return Rse;case ee.LOGICAL_NOT:return _se;case ee.NEG:return Dse;case ee.LEAKYRELU:return e?Ase:Pse;case ee.RECIPROCAL:return Ose;case ee.RELU:return e?Bse:Fse;case ee.RELU6:return e?zse:Lse;case ee.ROUND:return Mse;case ee.RSQRT:return Vse;case ee.SELU:return Wse;case ee.SIGMOID:return Use;case ee.SIGN:return Gse;case ee.SIN:return Hse;case ee.SINH:return jse;case ee.SOFTPLUS:return Kse;case ee.SQRT:return qse;case ee.SQUARE:return Xse;case ee.STEP:return Yse;case ee.TAN:return Qse;case ee.TANH:return Zse;case ee.TO_INT:return Jse;default:throw new Error(`BinaryType ${t} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ds(t,e=!1,n=!1,r=3){if(t===null)return"";let s="";if(t==="linear")s=Po(ee.LINEAR);else if(t==="relu")s=Po(ee.RELU,n);else if(t==="elu")s=Po(ee.ELU,n);else if(t==="relu6")s=Po(ee.RELU6,n);else if(t==="prelu")s=rv(we.PRELU,n);else if(t==="sigmoid")s=Po(ee.SIGMOID,n);else if(t==="leakyrelu")s=Po(ee.LEAKYRELU,n);else throw new Error(`Activation ${t} has not been implemented for the WebGPU backend.`);const a=ke(n?4:1);let i="";return e?i=`
      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${s}
      }`:i=`
      fn activation(a : ${a}, coords : vec${r}<i32>) -> ${a} {
        ${s}
      }`,i}function Aa(t,e){return`
      ${t?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v3(t,e,n=!1,r=!1,s=!1,o=1){k(t&&o===1||!t,()=>`transposeA ${t} is not compatible with component size ${o}`);const a=`
      ${t?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,i=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${ke(o)} {
    var value = ${ke(o)}(0.0);
    ${n&&s?a:`
    ${t?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${a}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${ke(o)} {
    var value = ${ke(o)}(0.0);
    ${i}
    return value;
  }
  `}function sv(t,e,n,r,s=!1,o=!1,a=!1,i=1){return`
  ${v3(n,r,s,o,a,i)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${ke(i)}) {
    ${s&&o?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Aa(t,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const eoe=(t,e)=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,toe=(t,e,n,r)=>{if(t)return`
      for (var k = 0; k < ${r}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${n}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let s="",o="";for(let a=0;a<e;a++)s+=`let BCached${a} = mm_Bsub[k * ${e} + ${a}][tileCol];`,o+=`acc[i] = fma(BCached${a}, vec4<f32>(ACached[${a}]), acc[i]);`;return`
      for (var k = 0; k < ${r/e}; k++) {
        ${s}
        for (var i = 0; i < ${n}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${o}
        }
      }`}};function $g(t,e,n=!1,r=32,s=!1,o=32,a=!1){const i=e[1]*t[1],u=e[0]*t[0],l=n?i:r,c=n?r:i,d=l/e[0],p=r/e[1],h=t[1],f=t[0];return k((n&&d===4&&t[1]===4||!n&&(d===3||d===4))&&l%e[0]===0&&r%e[1]===0&&t[0]===4,()=>`If transposeA ${n} is true, innerElementSize ${d} and workPerThread[1] ${t[1]} must be 4.
          Otherwise, innerElementSize ${d} must be 3 or 4.
      tileAWidth ${l} must be divisible by workgroupSize[0]${e[0]}. tileInner ${r} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${t[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${d}<f32>, ${l/d}>, ${c}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${u/t[0]}>, ${r}>;

  ${te()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${h};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${h};
    let globalCol = i32(globalId.x) * ${f};
    let batch = ${s?"0":"i32(globalId.z)"};
    let batchA = ${s||!a?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${s||!a?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${i};

    let numTiles = ${s?`${Math.ceil(o/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
    var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

    var acc: array<vec4<f32>, ${h}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${p};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${h}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${eoe(n,d)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${p}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${toe(n,d,h,r)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${h}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const tS=t=>t?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,noe=t=>t?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function kg(t,e,n=!1,r=32,s=!1,o=32,a=!1,i=!1){const u=t[1]*e[1],l=t[0]*e[0],c=n?u:r,d=n?r:u;k(d%e[1]===0&&c%e[0]===0&&r%e[1]===0,()=>`tileAHight ${d} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}, tileInner ${r} must be divisible by workgroupSize[1]${e[1]}`);const p=d/e[1],h=c/e[0],f=r/e[1],m=t[1],y=t[0],g=a?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${u};
      let globalColStart = i32(workgroupId.x) * ${l};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${d}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            ${tS(n)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${l}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${r};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${y}>;
        for (var k = 0; k < ${r}; k++) {
          for (var inner = 0; inner < ${y}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${m}; innerRow++) {
            let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${y}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${m};
  let tileCol = i32(localId.x) * ${y};

  let globalRow = i32(globalId.y) * ${m};
  let globalCol = i32(globalId.x) * ${y};
  let globalRowStart = i32(workgroupId.y) * ${u};

  let tileRowA = i32(localId.y) * ${p};
  let tileColA = i32(localId.x) * ${h};
  let tileRowB = i32(localId.y) * ${f};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${h}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${tS(n)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
      for (var innerCol = 0; innerCol < ${y}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${r};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${y}>;
    for (var k = 0; k < ${r}; k++) {
      for (var inner = 0; inner < ${y}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        ${noe(n)}
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${m}; innerRow++) {
    for (var innerCol = 0; innerCol < ${y}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${c}>, ${d}>;
    var<workgroup> mm_Bsub : array<array<f32, ${l}>, ${r}>;

    ${te()} {
      let batch = ${s?"0":"i32(globalId.z)"};
      let batchA = ${s||!i?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${s||!i?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${s?`${Math.ceil(o/r)}`:`(uniforms.dimInner - 1) / ${r} + 1`};
      var kStart = ${s?`i32(globalId.z) * ${o}`:"0"};

      var acc : array<array<f32, ${y}>, ${m}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${m}; innerRow++) {
        for (var innerCol = 0; innerCol < ${y}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const roe=t=>t?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function soe(t,e=!1){k(t[1]===1&&t[2]===1,()=>`A linear work group size is required. But got ${t}.`);const n=t[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${t[0]}>;

    ${te()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${n} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${n} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${roe(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${n/4}; k++) {
          let rowB = t * ${n} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class ooe{constructor(e,n,r=!1,s=!1,o=null,a=null,i=null,u=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]};const l=r?e[1]:e[2];if(this.isVec4=(l%4===0&&!r||n[1]%4===0&&r)&&n[2]%4===0&&!s,this.outputComponent=this.isVec4?4:1,this.isVectorA=n[1]===1&&!r,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const p=_re(n[1],l,n[2],r);this.workgroupSize=p.workgroupSize,this.elementsPerThread=p.elementsPerThread}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const c=o!=null,d=i!=null;c&&this.variableNames.push("bias"),d&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=u,this.transposeA=r,this.transposeB=s,this.addBias=c,this.activation=a,this.hasPreluActivationWeights=d,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(n[1],n[2],l),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${r}_${s}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,n,r){const s=this.workgroupSize[1]*this.elementsPerThread[1],o=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=o;const a=e%s===0,i=n%o===0,u=r%this.tileInner===0;return[a,i,u]}getUserCode(){return`
      ${Ds(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${sv(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?$g(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?soe(this.workgroupSize,this.transposeA):kg(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aoe(t){return`
    var<workgroup> sumValues : array<f32, ${t}>;
    ${te()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${t}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${t/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class ioe{constructor(e,n=!1,r=!1,s=null,o=null,a=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize);const i=s!=null,u=a!=null;i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),this.transposeA=n,this.transposeB=r,this.addBias=i,this.activation=o,this.hasPreluActivationWeights=u,this.shaderKey=`matMulReduce_${this.activation}_${n}_${r}`}getUserCode(){return`
      ${Ds(this.activation,this.hasPreluActivationWeights)}
      ${sv(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${aoe(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(t){const e=t[1],n=t[0],r=e>n?e:n;return`
  var<workgroup> mm_Asub : array<array<f32, ${r}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${n}>, ${r}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${te()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${r} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${r};
    globalRowB = globalRowB + ${r};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${r};
      globalRowB = globalRowB + ${r};

      for (var k = 0; k < ${r}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class loe{constructor(e,n,r,s=!1,o=!1,a=null,i=null,u=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=r,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(r[2]/this.workgroupSize[0]),Math.ceil(r[1]/this.workgroupSize[1]),r[0]];const l=a!=null;l&&this.variableNames.push("bias");const c=u!=null;c&&this.variableNames.push("preluActivationWeights"),this.transposeA=s,this.transposeB=o,this.addBias=l,this.activation=i,this.hasPreluActivationWeights=c,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${s}_${o}`}getUserCode(){return`
      ${Ds(this.activation,this.hasPreluActivationWeights)}
      ${sv(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${uoe(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class coe{constructor(e,n,r=!1,s=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,k(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const o=(r&&this.outputShape[1]%4===0||!r&&n%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=o?4:1,o||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=re(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],n],this.workgroupSize,this.elementsPerThread),this.transposeA=r,this.transposeB=s,this.shaderKey=`matMulSplitK_${r}_${s}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${v3(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${ke(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${ko("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?$g(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):kg(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class doe{constructor(e,n=null,r=null,s=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n!=null,this.hasPreluActivationWeights=s!=null,this.activation=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${r}`}getUserCode(){return`
    ${Ds(this.activation,this.hasPreluActivationWeights)}
    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Aa(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class poe{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cn(t){const{backend:e,attrs:n}=t,{shape:r,value:s}=n;let{dtype:o}=n;if(o=o||yo(s),o==="string"){const a=it(o,L(r));return a.fill(s),e.makeTensorInfo(r,o,a)}else{const a=new poe(r),i=[{type:"float32",data:[s]}];return e.runWebGPUProgram(a,[],o,i)}}const hoe={kernelName:hd,backendName:"webgpu",kernelFunc:cn};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(t){const{inputs:e,attrs:n}=t,{x:r}=e,{shape:s}=n,o=L(r.shape),a=om(s,o),i=L(a);return k(o===i,()=>`The new shape (${a}) has ${i} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.backend.incRef(r.dataId),{dataId:r.dataId,shape:a,dtype:r.dtype}}const foe={kernelName:Wd,backendName:"webgpu",kernelFunc:pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ig({a:t,b:e,transposeA:n,transposeB:r,backend:s,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const l=t.shape.length,c=e.shape.length,d=n?t.shape[l-2]:t.shape[l-1],p=r?e.shape[c-1]:e.shape[c-2],h=n?t.shape[l-1]:t.shape[l-2],f=r?e.shape[c-2]:e.shape[c-1],m=t.shape.slice(0,-2),y=e.shape.slice(0,-2),g=L(m),x=L(y),v=$e(t.shape.slice(0,-2),e.shape.slice(0,-2)).concat([h,f]);k(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${t.shape} and ${e.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=n?[g,d,h]:[g,h,d],S=r?[x,f,p]:[x,p,f],$=pe({inputs:{x:t},backend:s,attrs:{shape:b}}),N=pe({inputs:{x:e},backend:s,attrs:{shape:S}}),E=[$,N],R=Math.max(g,x),F=[$,N],B=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}];let M,V;const W=[R,h,f];let H=z().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(H<0){const O=z().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),U=O>0?O:s.thresholdToIncreaseWorkgroups,j=R*Math.ceil(h/32)*Math.ceil(f/32);j<=U||h<=8&&j<=U*2?R*h*f<=128?H=jr.MatMulReduceProgram:R===1&&p>=2e3?H=jr.MatMulSplitKProgram:H=jr.MatMulSmallOutputSizeProgram:H=jr.MatMulPackedProgram}switch(H){case jr.MatMulReduceProgram:M=new ioe(W,n,r,o,u,a);break;case jr.MatMulSplitKProgram:{if(V=cn({backend:s,attrs:{shape:W,value:0,dtype:t.dtype}}),M=new coe(W,p,n,r),o||u){V=s.runWebGPUProgram(M,F,t.dtype,B,V);const U=new doe(V.shape,o,u,a);let j=null;const T=[V];o&&T.push(o),a&&T.push(a),u==="leakyrelu"&&(j=[{type:"float32",data:[i]}],U.uniforms+=" alpha : f32,");const A=s.runWebGPUProgram(U,T,V.dtype,j);E.push(V);const _=pe({inputs:{x:A},backend:s,attrs:{shape:v}});E.push(A);for(const G of E)s.disposeData(G.dataId);return _}break}case jr.MatMulSmallOutputSizeProgram:M=new loe(b,S,W,n,r,o,u,a);break;case jr.MatMulPackedProgram:const O=s.adapterInfo.isIntel();M=new ooe(b,W,n,r,o,u,a,O);break;default:throw new Error(`Unsupported MatMulProgramType ${H}.`)}o&&F.push(o),a&&F.push(a),u==="leakyrelu"&&(B.push({type:"float32",data:[i]}),M.uniforms+=" alpha : f32,"),V=s.runWebGPUProgram(M,F,t.dtype,B,V);const q=pe({inputs:{x:V},backend:s,attrs:{shape:v}});E.push(V);for(const O of E)s.disposeData(O.dataId);return q}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function moe(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return Ig({a:s,b:o,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}const goe={kernelName:bi,backendName:"webgpu",kernelFunc:moe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nS{constructor(e,n,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=$e(n,r),this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${rv(this.op,!1)}
      }

      ${te("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _f{constructor(e,n,r){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=$e(n,r),this.dispatchLayout=le(this.outputShape),this.op=e,this.useSharedMemoryWithA=n.length<=1&&r.length>1&&n[0]<128,this.useSharedMemoryWithB=r.length<=1&&n.length>1&&r[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?r[0]:n[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const s=n.length>0&&n[n.length-1]%4===0,o=r.length>0&&r[r.length-1]%4===0;s&&o?(this.outputComponent=4,this.variableComponents=[4,4]):s&&(Nx(r)||r[r.length-1]===1)||o&&(Nx(n)||n[n.length-1]===1)?(this.outputComponent=4,this.variableComponents=s?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const n=this.outputComponent===4?"vec4<f32>":"f32",r=`
    fn binaryOperation(a : ${n}, b : ${n}) -> ${n} {
      ${rv(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const s=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",o=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${s}];`:`let a = sharedBuf[${s}];
          let b = getBByOutputIndex(index);`;e=`
        ${r}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${te("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${o}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${r}
       ${te("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${n}(getAByOutputCoords(coords));
           let b = ${n}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _n(t){const{inputs:e}=t,{x:n}=e;return t.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}const yoe={kernelName:du,backendName:"webgpu",kernelFunc:_n};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oa(t){const{inputs:e,backend:n}=t,{real:r,imag:s}=e,o=n.makeTensorInfo(r.shape,"complex64"),a=n.tensorMap.get(o.dataId),i=_n({inputs:{x:r},backend:n}),u=_n({inputs:{x:s},backend:n});return a.complexTensorInfos={real:i,imag:u},o}const xoe={kernelName:Hc,backendName:"webgpu",kernelFunc:Oa};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rl{constructor(e,n,r=""){this.variableNames=["A"],this.size=!0;const s=128;this.workgroupSize=[s,1,1],this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=n,r!==""&&(this.uniforms=r),this.shaderKey=`unary_${n}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Po(this.op,!1)}
      }
      ${te("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oe({opType:t,cpuKernelImpl:e,dtype:n}){return({inputs:r,backend:s})=>{const{x:o}=r,a=s,i=n||o.dtype;if(a.shouldExecuteOnCPU([o])&&e!=null){const l=a.tensorMap.get(o.dataId),c=e(l.values,i);return a.makeTensorInfo(o.shape,i,c)}const u=new rl(o.shape,t);return a.runWebGPUProgram(u,[o],i)}}function Pt({opType:t,cpuKernelImpl:e,supportsComplex:n=!1,dtype:r}){return({inputs:s,backend:o})=>{const{a,b:i}=s,u=o;if(n&&a.dtype==="complex64"){const d=u.tensorMap.get(a.dataId),p=u.tensorMap.get(i.dataId);let h,f;if(t!==we.MUL)[h,f]=[[d.complexTensorInfos.real,p.complexTensorInfos.real],[d.complexTensorInfos.imag,p.complexTensorInfos.imag]].map(y=>{const[g,x]=y,w={dataId:g.dataId,dtype:g.dtype,shape:a.shape},v={dataId:x.dataId,dtype:x.dtype,shape:i.shape},b=new _f(t,a.shape,i.shape);return u.runWebGPUProgram(b,[w,v],$t(g.dtype,x.dtype))});else{const y=new nS(we.COMPLEX_MULTIPLY_REAL,a.shape,i.shape),g=new nS(we.COMPLEX_MULTIPLY_IMAG,a.shape,i.shape),x=[{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}];h=u.runWebGPUProgram(y,x,"float32"),f=u.runWebGPUProgram(g,x,"float32")}const m=Oa({inputs:{real:h,imag:f},backend:u});return u.disposeData(h.dataId),u.disposeData(f.dataId),m}const l=r||$t(a.dtype,i.dtype);if((a.dtype==="string"||i.dtype==="string"||u.shouldExecuteOnCPU([a,i]))&&e!=null){const d=u.tensorMap.get(a.dataId).values,p=u.tensorMap.get(i.dataId).values,h=a.dtype==="string"?Lr(d):d,f=a.dtype==="string"?Lr(p):p,[m,y]=e(a.shape,i.shape,h,f,l);return u.makeTensorInfo(y,l,m)}const c=new _f(t,a.shape,i.shape);return u.runWebGPUProgram(c,[a,i],l)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:woe,castImpl:voe,ceilImpl:boe,concatImpl:Coe,equalImpl:Soe,expImpl:$oe,expm1Impl:koe,floorImpl:Ioe,floorDivImpl:Noe,gatherNdImpl:Toe,gatherV2Impl:Eoe,greaterEqualImpl:Roe,greaterImpl:_oe,lessEqualImpl:Doe,lessImpl:Poe,logImpl:Aoe,maxImpl:Ooe,maximumImpl:Foe,minimumImpl:Loe,multiplyImpl:zoe,negImpl:Boe,notEqualImpl:Moe,prodImpl:Voe,rangeImpl:Woe,rsqrtImpl:Uoe,scatterImpl:Goe,simpleAbsImpl:Hoe,sliceImpl:joe,stridedSliceImpl:Koe,stringNGramsImpl:qoe,subImpl:Xoe,tileImpl:Yoe,topKImpl:Qoe,transposeImpl:Zoe,uniqueImpl:Ome}=xR;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Joe=Oe({opType:ee.ABS,cpuKernelImpl:Hoe}),eae={kernelName:Dc,backendName:"webgpu",kernelFunc:Joe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tae=Oe({opType:ee.ACOS}),nae={kernelName:Ui,backendName:"webgpu",kernelFunc:tae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rae=Oe({opType:ee.ACOSH}),sae={kernelName:Gi,backendName:"webgpu",kernelFunc:rae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oae=Pt({opType:we.ADD,cpuKernelImpl:woe,supportsComplex:!0}),aae={kernelName:Sa,backendName:"webgpu",kernelFunc:oae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iae{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((n,r)=>`T${r}`),this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(s=>{e.push(`let v${s} = get${s}ByOutputCoords(coords);`)});const n=this.variableNames.map(s=>`v${s}`).join(" + ");return`
      ${te("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${n});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(t){const{inputs:e,backend:n}=t,r=e;if(r.length===1)return _n({inputs:{x:r[0]},backend:n});const s=r.map(i=>i.dtype).reduce((i,u)=>$t(i,u)),o=r.map(i=>i.shape),a=new iae(o);return n.runWebGPUProgram(a,r,s)}const lae={kernelName:Pc,backendName:"webgpu",kernelFunc:uae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cae{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[16,16,1];const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[n[s]];this.outputShape=r,this.dispatchLayout={x:[0],y:[1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){k(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${te()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dae{constructor(e,n){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[n[s]];this.outputShape=r,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=n,this.shaderKey=`transpose_${n}`}getUserCode(){const e=ft(this.outputShape.length),n=b3(this.newDim);return`
      ${te("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${n}), uniforms.aShape)]);
          }
        }
      }
    `}}function b3(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=new Array(e);for(let r=0;r<t.length;r++)n[t[r]]=`coords.${xs(r)}`;return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ns(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{perm:o}=r,a=n,i=s.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=s.shape[o[c]];if(n.shouldExecuteOnCPU([s])){const d=a.tensorMap.get(s.dataId).values,p=Zoe(d,s.shape,s.dtype,o,u);return n.makeTensorInfo(u,s.dtype,p)}if(s.shape.length===2&&Pe(o,[1,0])){const c=new cae(s.shape,o);return a.runWebGPUProgram(c,[s],s.dtype)}const l=new dae(s.shape,o);return a.runWebGPUProgram(l,[s],s.dtype)}const pae={kernelName:Qo,backendName:"webgpu",kernelFunc:ns};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hae{constructor(e,n,r){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[s]=wt(this.inputShape,[1]);this.outputShape=s.length===0?[1]:s,e.inSize>=32768&&r>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=n,this.shaderKey=`reduce_${n}`}getUserCode(){let e="",n="0.0";const r=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,n="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",n="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",n="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",n="0.0");const s=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${r}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${te("index")} {
         let outputIndex = index / ${r};
         let offset = getOffset(outputIndex);
         var bestValue = ${n};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${r}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${r}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${r}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${s}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fae={mean:"float32",all:"bool",any:"bool"};function Fa(t,e,n,r,s){const o=t.shape.length,a=[],i=Ie(e,t.shape);let u=i;const l=Ye(u,o);let c=t;l!=null&&(c=ns({inputs:{x:t},attrs:{perm:l},backend:s}),u=Qe(u.length,o),a.push(c)),bt(r,u,o);const[d,p]=wt(c.shape,u);let h=d;n&&(h=vt(d,i));let f;if((r==="max"||r==="prod")&&s.shouldExecuteOnCPU([c])){const m=s.tensorMap.get(c.dataId).values;switch(r){case"max":const y=Ooe(m,L(p),h,t.dtype);f=s.makeTensorInfo(h,t.dtype,y);break;case"prod":const{outVals:g,outShape:x,outDtype:w}=Voe(c.shape,c.dtype,m,u);f=s.makeTensorInfo(x,w,g);break;default:throw new Error(`${r} CPU implementation is not yet supported.`)}}else{const m=L(p),g=L(c.shape)/m,x={windowSize:m,inSize:m,batchSize:g,outSize:1},w=fae[r]||mp(t.dtype),v=[{type:"int32",data:[m]}],b=new hae(x,r,s.device.limits.maxComputeWorkgroupSizeX),S=s.runWebGPUProgram(b,[c],w,v);a.push(S),f=pe({inputs:{x:S},attrs:{shape:h},backend:s})}return a.forEach(m=>s.disposeData(m.dataId)),f}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:a}=r;return Fa(s,a,o,"all",n)}const gae={kernelName:Ac,backendName:"webgpu",kernelFunc:mae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:a}=r;return Fa(s,a,o,"any",n)}const xae={kernelName:Oc,backendName:"webgpu",kernelFunc:yae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C3{constructor(e,n,r){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const s=[n];this.op=r==="min"?"<":">";const[o,a]=wt(e,s);this.outputShape=o.length===0?[1]:o,this.dispatchLayout=le(this.outputShape),L(a)<32?(this.type="plain",this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=re(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],n=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${xs(this.inputShape.length-1)}`,r=()=>{let s="";if(this.outputShape.length===1)this.inputShape.length!==1&&(s+="outputCoords,");else for(let o=0;o<this.outputShape.length;o++)s+=`outputCoords.${xs(o)},`;return s};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${te("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${n()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${r()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${te("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${r()} 0);
          let reduceLength = ${n()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${r()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=ns({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),bt("argMax",[a[0]],u.shape.length);const c=new C3(u.shape,a[0],"max"),d=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(c,[u],"int32",d);return l.forEach(h=>n.disposeData(h.dataId)),p}const vae={kernelName:Fc,backendName:"webgpu",kernelFunc:wae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o}=r;let a=Ie(o,s.shape);const i=Ye(a,s.shape.length);let u=s;const l=[];i!=null&&(u=ns({inputs:{x:s},backend:n,attrs:{perm:i}}),l.push(u),a=Qe(a.length,u.shape.length)),bt("argMin",[a[0]],u.shape.length);const c=new C3(u.shape,a[0],"min"),d=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(c,[u],"int32",d);return l.forEach(h=>n.disposeData(h.dataId)),p}const Cae={kernelName:Lc,backendName:"webgpu",kernelFunc:bae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sae=Oe({opType:ee.ASIN}),$ae={kernelName:Hi,backendName:"webgpu",kernelFunc:Sae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae=Oe({opType:ee.ASINH}),Iae={kernelName:ji,backendName:"webgpu",kernelFunc:kae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nae=Oe({opType:ee.ATAN}),Tae={kernelName:Ki,backendName:"webgpu",kernelFunc:Nae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae=Pt({opType:we.ATAN2}),Rae={kernelName:Xi,backendName:"webgpu",kernelFunc:Eae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _ae=Oe({opType:ee.ATANH}),Dae={kernelName:qi,backendName:"webgpu",kernelFunc:_ae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pae{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wc{constructor(e,n,r=!1,s=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=o,this.shaderKey=`pool2D_${n}_${r}_${s}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}class ov{constructor(e,n,r=!1,s=!1,o=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,n==="avg"&&r)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=n,this.computePositions=r,this.flattenPositions=s,this.includeBatchIndex=o,this.shaderKey=`pool3D_${n}_${r}_${s}_${o}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let n="resultValue";return this.poolType==="avg"&&(n="resultValue / max(count, 1.0)"),`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${n});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reductionIndices:o,keepDims:a}=r;return Fa(s,o,a,"max",n)}const Aae={kernelName:Sd,backendName:"webgpu",kernelFunc:S3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{keepDims:o,axis:a}=r;return Fa(s,a,o,"mean",n)}const Oae={kernelName:Nd,backendName:"webgpu",kernelFunc:$3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k3(t,e,n,r){if(e.filterWidth===1&&e.filterHeight===1&&Pe(e.inShape,e.outShape))return _n({inputs:{x:t},backend:r});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const a=t.shape.length,i=pe({inputs:{x:t},backend:r,attrs:{shape:[t.shape[a-3]*t.shape[a-2],t.shape[a-1]]}});let u;n==="avg"?u=$3({inputs:{x:i},backend:r,attrs:{axis:0,keepDims:!1}}):(k(n==="max",()=>`Invalid pool type ${n}`),u=S3({inputs:{x:i},backend:r,attrs:{reductionIndices:0,keepDims:!1}}));const l=pe({inputs:{x:u},backend:r,attrs:{shape:e.outShape}});return r.disposeData(i.dataId),r.disposeData(u.dataId),l}let s;const o=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?s=new Pae(e):(n==="avg"?s=new wc(e,"avg"):(k(n==="max",()=>`Invalid pool type ${n}`),s=new wc(e,"max")),o.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),r.runWebGPUProgram(s,[t],t.dtype,o)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1,c=jt(s.shape,o,a,l,i,u);return k3(s,c,"avg",n)}const Lae={kernelName:zc,backendName:"webgpu",kernelFunc:Fae};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zae(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=Yn(s.shape,o,a,c,i,l,u),p=new ov(d,"avg"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[s],s.dtype,h)}const Bae={kernelName:Bc,backendName:"webgpu",kernelFunc:zae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mae{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Vae{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wae(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=Yn(a.shape,i,u,1,l,c),p=new Vae(d),h=1/(d.filterDepth*d.filterHeight*d.filterWidth),f=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"float32",data:[h]}];return n.runWebGPUProgram(p,[s],a.dtype,f)}const Uae={kernelName:lm,backendName:"webgpu",kernelFunc:Wae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gae(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o;w3([s,o],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=jt(a.shape,i,u,1,l),d=new Mae(c),p=1/(c.filterHeight*c.filterWidth),h=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.effectiveFilterHeight-1-c.padInfo.top,c.effectiveFilterWidth-1-c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"float32",data:[p]}];return n.runWebGPUProgram(d,[s],a.dtype,h)}const Hae={kernelName:um,backendName:"webgpu",kernelFunc:Gae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(t){const{inputs:e,backend:n,attrs:r}=t,{a:s,b:o}=e,{transposeA:a,transposeB:i}=r;return Ig({a:s,b:o,transposeA:a,transposeB:i,backend:n})}const Kae={kernelName:Mc,backendName:"webgpu",kernelFunc:jae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qae{constructor(e,n){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.rank=n.length,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${ft(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=ft(this.rank),n=Xae(this.rank);let r;return this.start.length===1?r=this.outputShape.map((o,a)=>"sourceLoc = uniforms.start + coords;"):r=this.outputShape.map((o,a)=>`sourceLoc.${d0[a]} = uniforms.start.${xs(a)} + coords.${d0[a]};`),`
      ${te("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${r.join(`
`)}
          setOutputAtIndex(index, getSource(${n}));
        }
      }
    `}}const d0=["x","y","z","w","u","v"];function Xae(t){if(t===1)return"sourceLoc";if(t<=6)return d0.slice(0,t).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sl(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,size:a}=r,[i,u]=qm(s,o,a);if(jm(s,i,u),n.shouldExecuteOnCPU([s])||s.dtype==="string"){const d=n.tensorMap.get(s.dataId),p=joe(d.values,i,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,p)}if(L(u)===0)return n.makeTensorInfo(u,s.dtype,[]);const l=new qae(i,u),c=[{type:"int32",data:i}];return n.runWebGPUProgram(l,[s],s.dtype,c)}const Yae={kernelName:Yd,backendName:"webgpu",kernelFunc:sl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qae=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,crops:a}=r;k(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const i=o.reduce((x,w)=>x*w),u=Na(s.shape,o,i),l=Ta(u.length,o.length),c=Ea(s.shape,o,i),d=Jm(a,o.length),p=eg(c,a,o.length),h=[],f=pe({inputs:{x:s},backend:n,attrs:{shape:u}}),m=ns({inputs:{x:f},backend:n,attrs:{perm:l}}),y=pe({inputs:{x:m},backend:n,attrs:{shape:c}}),g=sl({inputs:{x:y},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(y),h.forEach(x=>n.disposeData(x.dataId)),g},Zae={kernelName:Vc,backendName:"webgpu",kernelFunc:Qae};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jae=`
  fn bincount_write(index: i32, value: f32) {
    ${ko("&result[index]","value","float32")}
  }
`,eie=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class I3{constructor(e,n,r=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=r,r&&(this.atomic=!1),this.hasWeights=n,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?eie:Jae}
  ${te("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tie(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a}=r,i=L(s.shape),l=L(o.shape)>0,c=[a],d=o.dtype,p=cn({backend:n,attrs:{shape:c,value:0,dtype:d}}),h=new I3([i],l),f=[{type:"int32",data:[a]}],m=l?[s,o]:[s];return n.runWebGPUProgram(h,m,d,f,p)}const nie={kernelName:Wc,backendName:"webgpu",kernelFunc:tie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rie{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${te("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sie(t){const{inputs:e,backend:n}=t,{s0:r,s1:s}=e;if(n.shouldExecuteOnCPU([r,s])){const c=n.tensorMap.get(r.dataId),d=n.tensorMap.get(s.dataId),p=c.values,h=d.values,f=$e(Array.from(p),Array.from(h));return n.makeTensorInfo([f.length],"int32",Int32Array.from(f))}const o=L(r.shape),a=L(s.shape),i=Math.max(o,a),u=new rie(i),l=[{type:"int32",data:[o]},{type:"int32",data:[a]}];return n.runWebGPUProgram(u,[r,s],"int32",l)}const oie={kernelName:Gc,backendName:"webgpu",kernelFunc:sie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=Pt({opType:we.NOT_EQUAL,dtype:"bool",cpuKernelImpl:Moe}),aie={kernelName:Iu,backendName:"webgpu",kernelFunc:N3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dp(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.tensorMap.get(r.dataId);return _n({inputs:{x:s.complexTensorInfos.real},backend:n})}const iie={kernelName:Vd,backendName:"webgpu",kernelFunc:Dp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uie(t,e){const n=new rl(t.shape,ee.TO_INT),r=e.runWebGPUProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p0(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dtype:o}=r;if(o==="complex64"){if(s.dtype==="complex64")return _n({inputs:{x:s},backend:n});const a=ks(s.shape),i=p0({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=Oa({inputs:{real:i,imag:a},backend:n});return a.dispose(),n.disposeData(i.dataId),u}if(s.dtype==="complex64"){const a=Dp({inputs:{input:s},backend:n}),i=p0({inputs:{x:a},backend:n,attrs:{dtype:o}});return n.disposeData(a.dataId),i}if(!am(s.dtype,o)){const a=_n({inputs:{x:s},backend:n});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(n.shouldExecuteOnCPU([s])){const a=n.tensorMap.get(s.dataId).values,[i,u,l]=voe(a,s.shape,s.dtype,o);return n.makeTensorInfo(i,u,l)}if(o==="int32")return uie(s,n);if(o==="bool"){const a=n.makeTensorInfo([],"bool",xt("bool",1)),u=N3({inputs:{a:s,b:a},backend:n});return n.disposeData(a.dataId),u}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}const lie={kernelName:Yi,backendName:"webgpu",kernelFunc:p0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cie=Oe({opType:ee.CEIL,cpuKernelImpl:boe}),die={kernelName:Qi,backendName:"webgpu",kernelFunc:cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pie{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${te("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hie{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${te("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fie(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{clipValueMin:o,clipValueMax:a}=r;let i;const u=[{type:"float32",data:[o]},{type:"float32",data:[a]}];return L(s.shape)%4===0?i=new pie(s.shape):i=new hie(s.shape),n.runWebGPUProgram(i,[s],s.dtype,u)}const mie={kernelName:Zi,backendName:"webgpu",kernelFunc:fie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gie{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rS(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}function yie(t){const{inputs:e,backend:n}=t,{x:r}=e,s=n.tensorMap.get(r.dataId),o=new gie(r.shape),a=[rS(r,s.complexTensorInfos.real),rS(r,s.complexTensorInfos.imag)];return n.runWebGPUProgram(o,a,a[0].dtype)}const xie={kernelName:jc,backendName:"webgpu",kernelFunc:yie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wie{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=ln(e,1),this.variableNames=e.map((n,r)=>`T${r}`),this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let n=0;n<this.offsetLength;n++)this.uniforms+=`offset${n} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let o=1;o<this.offsetLength;o++)e.push(`else if (yC < uniforms.offset${[o]}){ setOutputAtCoords(coords.x, coords.y, getT${o}(yR, yC - uniforms.offset${o-1})); }`);const r=this.offsetLength,s=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${r}(yR, yC - uniforms.offset${s})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${te("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ng(t){const{inputs:e,backend:n}=t,{input:r}=e,s=n.tensorMap.get(r.dataId);return _n({inputs:{x:s.complexTensorInfos.imag},backend:n})}const vie={kernelName:wd,backendName:"webgpu",kernelFunc:Ng};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $l(t,e,n){const r=t[0].dtype;if(r==="complex64"){const f=t.map(w=>Dp({inputs:{input:w},backend:n})),m=t.map(w=>Ng({inputs:{input:w},backend:n})),y=$l(f,e,n),g=$l(m,e,n),x=Oa({inputs:{real:y,imag:g},backend:n});return f.forEach(w=>n.disposeData(w.dataId)),m.forEach(w=>n.disposeData(w.dataId)),n.disposeData(y.dataId),n.disposeData(g.dataId),x}let s=n.shouldExecuteOnCPU(t);if(r==="string"&&(s=!0),s){const f=t.map(b=>{const S=L(b.shape.slice(e));return pe({inputs:{x:b},backend:n,attrs:{shape:[-1,S]}})}),m=f.map(b=>({vals:n.readSync(b.dataId),shape:b.shape})),y=ln(f.map(b=>b.shape),1),g=f[0].shape[0]===1,x=Coe(m,y,r,g),w=ln(t.map(b=>b.shape),e),v=n.makeTensorInfo(w,r,x);return f.forEach(b=>n.disposeData(b.dataId)),v}const o=n.device.limits.maxStorageBuffersPerShaderStage-1;if(t.length>o){const f=[];for(let y=0;y<t.length;y+=o){const g=t.slice(y,y+o);f.push($l(g,e,n))}const m=$l(f,e,n);for(const y of f)n.disposeData(y.dataId);return m}const{tensors2D:a,outShape:i}=bie(t,e,n),u=a.map(f=>f.shape),l=new wie(u),c=[],d=new Array(u.length-1);if(d.length>0){d[0]=u[0][1],c.push({type:"int32",data:[d[0]]});for(let f=1;f<d.length;f++)d[f]=d[f-1]+u[f][1],c.push({type:"int32",data:[d[f]]})}const p=n.runWebGPUProgram(l,a,a[0].dtype,c);a.forEach(f=>n.disposeData(f.dataId));const h=pe({inputs:{x:p},backend:n,attrs:{shape:i}});return n.disposeData(p.dataId),h}function bie(t,e,n){const r=ln(t.map(o=>o.shape),e);return{tensors2D:t.map(o=>pe({inputs:{x:o},backend:n,attrs:{shape:[L(o.shape.slice(0,e)),L(o.shape.slice(e))]}})),outShape:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T3(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r,o=Ie(s,e[0].shape)[0],a=e.map(l=>l.shape);Ym(a,o);const i=ln(e.map(l=>l.shape),o);if(L(i)===0)return n.makeTensorInfo(i,e[0].dtype,[]);const u=e.filter(l=>L(l.shape)>0);return u.length===1?_n({inputs:{x:u[0]},backend:n}):$l(u,o,n)}const Cie={kernelName:Kc,backendName:"webgpu",kernelFunc:T3};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sie(t,e,n,r,s=!1,o=null,a=!1,i=4,u=4,l=4){const c=E=>{switch(E){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${E} is not supported.`)}},d=E=>{switch(E){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${E} is not supported.`)}},p=t?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,h=t?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,f=t?"uniforms.xShape[1]":"uniforms.xShape[2]",m=t?"uniforms.xShape[2]":"uniforms.xShape[3]",y=t?"row":"col",g=t?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${y} / outWidth;
      let outCol = ${y} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${ke(i)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${m}) {
        ${p}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${c(i)}
      }
      return resData;`,w=t?e&&r?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${ke(i)}(0.0);`:r&&n?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${ke(i)}(0.0);`,v=`${d(u)}`,b=ke(l),S=ke(t?i:u),$=ke(t?u:i);return`
      ${Ds(o,a,l===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${S} {
        ${t?w:v}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${$} {
        ${t?v:w}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${b}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${t?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${h}
        ${Aa(s,o)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class $ie{constructor(e,n,r,s,o=!1,a=null,i=!1,u=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=g3(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=y3(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),o&&(this.variableNames.push("bias"),this.variableComponents.push(4)),i&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],o&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=u,this.addBias=o,this.activation=a,this.hasPreluActivationWeights=i,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=n%this.tileAOuter===0,this.fitBOuter=r%this.tileBOuter===0,this.fitInner=s%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?$g(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):kg(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),n=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Sie(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,n[0],n[1],n[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kie{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=n,this.activation=r,this.hasPreluActivationWeights=s,n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Ds(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Aa(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${te("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iie{constructor(e,n){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=n,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,r=this.isChannelsLast?"coords[1]":"coords[2]",s=this.isChannelsLast?"coords[2]":"coords[1]",o=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${te("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${r};
        let col = ${s};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${n}] && xCol >= 0) {
            value = ${o};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Df(t,e){const n=t.length;return n>=3?e?[...t.slice(0,-3),t[n-3]*t[n-2],t[n-1]]:[...t.slice(0,-3),t[n-3],t[n-2]*t[n-1]]:!e&&n===1&&t[0]>1?[t[0],1]:null}function Nie({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=n.dataFormat==="channelsLast",l=!u,c=!1,d=u&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",p=[];let h,f;if(d){const g=n.inHeight*n.inWidth*n.inChannels;h=pe({inputs:{x:t},backend:r,attrs:{shape:[1,n.batchSize,g]}}),f=pe({inputs:{x:e},backend:r,attrs:{shape:[1,g,n.outChannels]}})}else h=pe({inputs:{x:t},backend:r,attrs:{shape:u?[n.batchSize,n.inHeight*n.inWidth,n.inChannels]:[n.batchSize,n.inChannels,n.inHeight*n.inWidth]}}),f=pe({inputs:{x:e},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});if(p.push(h),p.push(f),o!=null){const g=Df(o.shape,u);g!=null&&(o=pe({inputs:{x:o},backend:r,attrs:{shape:g}}),p.push(o))}if(s!=null){const g=Df(s.shape,u);g!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:g}}),p.push(s))}const m=Ig({a:u?h:f,b:u?f:h,transposeA:l,transposeB:c,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),y=pe({inputs:{x:m},backend:r,attrs:{shape:n.outShape}});p.push(m);for(const g of p)r.disposeData(g.dataId);return y}function Tie({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:y,dilationHeight:g,dataFormat:x}=n,w=x==="channelsLast",v=u*l*c,b=m*f,S=w?[n.batchSize,b,v]:[n.batchSize,v,b],$=new Iie(S,w),N=[{type:"int32",data:[h.top,h.left]},{type:"int32",data:[p,d]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[c*u]},{type:"int32",data:[c]}],E=r.runWebGPUProgram($,[t],t.dtype,N),R=[];R.push(E);const F=pe({inputs:{x:e},backend:r,attrs:{shape:[1,v,-1]}});if(R.push(F),o!=null){const H=Df(o.shape,w);H!=null&&(o=pe({inputs:{x:o},backend:r,attrs:{shape:H}}),R.push(o))}if(s!=null){const H=Df(s.shape,w);H!=null&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:H}}),R.push(s))}const V=Ig({a:w?E:F,b:w?F:E,transposeA:!w,transposeB:!1,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),W=pe({inputs:{x:V},backend:r,attrs:{shape:n.outShape}});R.push(V);for(const H of R)r.disposeData(H.dataId);return W}function E3({x:t,filter:e,convInfo:n,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const u=s!=null,l=o!=null,c=n.dataFormat==="channelsLast",d=c&&n.filterHeight===n.inHeight&&n.filterWidth===n.inWidth&&n.padInfo.type==="VALID",p=z().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!p&&(d||n.filterHeight===1&&n.filterWidth===1&&n.dilationHeight===1&&n.dilationWidth===1&&n.strideHeight===1&&n.strideWidth===1&&(n.padInfo.type==="SAME"||n.padInfo.type==="VALID")))return Nie({x:t,filter:e,convInfo:n,backend:r,bias:s,activation:i,preluActivationWeights:o,leakyreluAlpha:a});const h=z().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),f=h>-1?h:r.thresholdToIncreaseWorkgroups,m=n.batchSize*Math.ceil(n.outHeight*n.outWidth/32)*Math.ceil(n.outChannels/32);if(z().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||m<=f)return Tie({x:t,filter:e,convInfo:n,backend:r,bias:s,preluActivationWeights:o,leakyreluAlpha:a,activation:i});let y;const g=[n.padInfo.top,n.padInfo.left],x=[{type:"int32",data:[n.filterHeight,n.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[n.strideHeight,n.strideWidth]},{type:"int32",data:[n.dilationHeight,n.dilationWidth]}];if(p)y=new kie(n,u,i,l);else{const S=c?n.outHeight*n.outWidth:n.outChannels,$=c?n.outChannels:n.outHeight*n.outWidth,N=n.filterHeight*n.filterWidth*n.inChannels;x.push({type:"int32",data:[S]},{type:"int32",data:[$]},{type:"int32",data:[N]});const E=r.adapterInfo.isIntel();y=new $ie(n,S,$,N,u,i,l,E)}const w=[],v=[t,e];u&&(!c&&s.shape.length===1&&(s=pe({inputs:{x:s},backend:r,attrs:{shape:[s.shape[0],1,1]}}),w.push(s)),v.push(s)),l&&(!c&&o.shape.length===1&&(o=pe({inputs:{x:o},backend:r,attrs:{shape:[o.shape[0],1,1]}}),w.push(o)),v.push(o)),i==="leakyrelu"&&(x.push({type:"float32",data:[a]}),y.uniforms+=" alpha : f32,");const b=r.runWebGPUProgram(y,v,t.dtype,x);for(const S of w)r.disposeData(S.dataId);return b}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eie(t){const{inputs:e,attrs:n,backend:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=n,d=An(u),p=Xe(s.shape,o.shape,a,l,i,c,!1,d);return E3({x:s,filter:o,convInfo:p,backend:r})}const Rie={kernelName:qc,backendName:"webgpu",kernelFunc:Eie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ie{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,n=this.isChannelsLast?2:3,r=this.isChannelsLast?3:1,s=`
    ${te()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${s}
    `:`
    ${te("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${r}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${n}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Die{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${te("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Pie{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${te("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Aie{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${te("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oie(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=An(u),p=Xe(s.shape,c,a,1,i,l,!1,d),h=new Die(p),f=[{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]},{type:"int32",data:[p.inHeight]},{type:"int32",data:[p.inWidth]}];return n.runWebGPUProgram(h,[s,o],s.dtype,f)}const Fie={kernelName:Xc,backendName:"webgpu",kernelFunc:Oie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lie(t=4){const e=o=>{switch(o){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${o} is not supported.`)}},r=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${ke(t)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${ke(t)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${t}];`}
      }
      return ${ke(t)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${ke(t)} {
    ${r}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${ke(t)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(t)}
    }
    return ${ke(t)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${ke(t)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${t}] = value;
    }
  }`}class zie{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,k(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=g3(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=y3(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?$g(this.elementsPerThread,this.workgroupSize):kg(this.elementsPerThread,this.workgroupSize);return`
    ${Lie(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bie(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{inputShape:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=An(l),p=Xe(a,o.shape,i,1,u,c,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let f;if(z().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||p.dataFormat!=="channelsLast")f=new _ie(p);else{f=new zie(p);const m=p.inHeight*p.inWidth,y=p.inChannels,g=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[m]},{type:"uint32",data:[y]},{type:"uint32",data:[g]})}return n.runWebGPUProgram(f,[s,o],"float32",h)}const Mie={kernelName:Yc,backendName:"webgpu",kernelFunc:Bie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vie{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=Vr(s.shape,o.shape,a,u,i),c=[l.padInfo.front,l.padInfo.top,l.padInfo.left],d=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationDepth,l.dilationHeight,l.dilationWidth]}],p=new Vie(l),h=$t(s.dtype,o.dtype);return n.runWebGPUProgram(p,[s,o],h,d)}const Uie={kernelName:Qc,backendName:"webgpu",kernelFunc:Wie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gie(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,pad:i,filterShape:u}=r,l=Vr(s.shape,u,a,1,i),c=new Pie(l),d=[{type:"int32",data:[l.padInfo.front,l.padInfo.top,l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.batchSize]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.inDepth]},{type:"int32",data:[l.inHeight]},{type:"int32",data:[l.inWidth]}];return n.runWebGPUProgram(c,[s,o],o.dtype,d)}const Hie={kernelName:cm,backendName:"webgpu",kernelFunc:Gie};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jie(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,pad:i,inputShape:u}=r,l=Vr(u,o.shape,a,1,i),c=new Aie(l),d=[{type:"int32",data:[l.filterDepth,l.filterHeight,l.filterWidth]},{type:"int32",data:[l.filterDepth-1-l.padInfo.front,l.filterHeight-1-l.padInfo.top,l.filterWidth-1-l.padInfo.left]},{type:"int32",data:[l.strideDepth,l.strideHeight,l.strideWidth]},{type:"int32",data:[l.outDepth]},{type:"int32",data:[l.outHeight]},{type:"int32",data:[l.outWidth]},{type:"int32",data:[l.outChannels]}];return n.runWebGPUProgram(c,[s,o],s.dtype,d)}const Kie={kernelName:Zc,backendName:"webgpu",kernelFunc:jie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qie=Oe({opType:ee.COS}),Xie={kernelName:Ji,backendName:"webgpu",kernelFunc:qie};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yie=Oe({opType:ee.COSH}),Qie={kernelName:eu,backendName:"webgpu",kernelFunc:Yie};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zie{constructor(e,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[o]=n;this.outputShape=[o,r[0],r[1],e],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=s==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,n]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[r,s,o]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[a,i,u]=this.cropWidthBiggerThan1?[`(${n} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${n} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${n}`];return`
    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${r});
        let width_ratio = f32(${a});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${s};
        let width_scale = ${i};
        let in_y = ${o};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${u};
        if( in_x < 0.0 || in_x > ${n} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jie=t=>{const{inputs:e,backend:n,attrs:r}=t,{image:s,boxes:o,boxInd:a}=e,{cropSize:i,method:u,extrapolationValue:l}=r,c=new Zie(s.shape[3],o.shape,i,u),d=[{type:"float32",data:[l]}];return n.runWebGPUProgram(c,[s,o,a],"float32",d)},eue={kernelName:td,backendName:"webgpu",kernelFunc:Jie};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vc;(function(t){t.Prod="*",t.Sum="+"})(vc||(vc={}));class sS{constructor(e,n,r,s){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=n,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=r,this.reverse=s,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,n=this.op===vc.Prod?"1.0":"0.0",r=this.exclusive?n:`getX(${oS(e,"coords",this.op)})`,s=this.outputShape[this.outputShape.length-1];let o="",a="";return this.exclusive?(o=this.reverse?`end != ${s-1}`:"end != 0",a=this.reverse?"end + 1":"end - 1"):(o=this.reverse?`end + pow2 < ${s}`:"end >= pow2",a=this.reverse?"end + pow2":"end - pow2"),`
      ${te("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${aS(e,"coords",this.op)};
         var val = ${r};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${o}) {
           let idx = ${a};
           ${aS(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${oS(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function oS(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.x, ${e}.y`;if(t===3)return`${e}.x, ${e}.y, ${e}.z`;if(t===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}function aS(t,e,n){if(t===1)return`${e}`;if(t===2)return`${e}.y`;if(t===3)return`${e}.z`;if(t===4)return`${e}.w`;throw Error(`Cumulative ${n} for rank ${t} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R3(t,e,n,r,s,o){const a=e.shape.length,i=Ye([r],a);let u=e;i!=null&&(u=ns({inputs:{x:e},backend:n,attrs:{perm:i}}));const l=Qe(1,a)[0];if(l!==a-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${r}`);const c=u.shape[l];let d=_n({inputs:{x:u},backend:n});for(let p=0;p<=Math.ceil(Math.log2(c))-1;p++){const h=new sS(t,u.shape,!1,o),f=d,m=[{type:"float32",data:[p]}];d=n.runWebGPUProgram(h,[d],d.dtype,m),n.disposeData(f.dataId)}if(s){const p=new sS(t,u.shape,s,o),h=d,f=[{type:"float32",data:[0]}];d=n.runWebGPUProgram(p,[d],d.dtype,f),n.disposeData(h.dataId)}if(i!=null){const p=ka(i),h=ns({inputs:{x:d},backend:n,attrs:{perm:p}});return n.disposeData(d.dataId),n.disposeData(u.dataId),h}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return R3(vc.Prod,s,n,o,a,i)}const nue={kernelName:Jc,backendName:"webgpu",kernelFunc:tue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,exclusive:a,reverse:i}=r;return R3(vc.Sum,s,n,o,a,i)}const sue={kernelName:ed,backendName:"webgpu",kernelFunc:rue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,weights:o}=e,{size:a,binaryOutput:i}=r,u=s.shape.length===1,c=L(o.shape)>0,d=o.dtype,p=u?[s.shape[0]]:[s.shape[0],s.shape[1]],h=u?[a]:[s.shape[0],a],f=cn({backend:n,attrs:{shape:h,value:0,dtype:d}}),m=new I3(p,c,i),y=[{type:"int32",data:[a]}],g=c?[s,o]:[s];return n.runWebGPUProgram(m,g,d,y,f)}const aue={kernelName:nd,backendName:"webgpu",kernelFunc:oue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iue{constructor(e,n){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${n}`,this.dataFormat=n}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockSize:o,dataFormat:a}=r,i=s.shape[0],u=a==="NHWC"?s.shape[1]:s.shape[2],l=a==="NHWC"?s.shape[2]:s.shape[3],c=a==="NHWC"?s.shape[3]:s.shape[1],d=u*o,p=l*o,h=c/(o*o),f=a==="NHWC"?[i,d,p,h]:[i,h,d,p],m=[{type:"int32",data:[o]}],y=new iue(f,a);return n.runWebGPUProgram(y,[s],s.dtype,m)}const lue={kernelName:rd,backendName:"webgpu",kernelFunc:uue};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cue{constructor(e,n,r,s=!1,o=null,a=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),s&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.addBias=s,this.activation=o,this.hasPreluActivation=a,this.filterHeight=n,this.filterWidth=r,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,n=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],r=this.workgroupSize[1]+this.filterHeight-1,s=this.workgroupSize[0]+this.filterWidth-1;return`
      ${Ds(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${s}>, ${r}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${te()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${r}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${s}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<n?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${n})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Aa(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _3{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const o=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=le(o),this.dispatch=re(this.dispatchLayout,o,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),k(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwiseVec4_${r}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,n=this.convInfo.strideHeight,r=this.convInfo.strideWidth;return`
      ${Ds(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${te("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${n}, ${r}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${r} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Aa(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D3{constructor(e,n=!1,r=null,s=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",n&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=n,this.activation=r,this.hasPreluActivation=s,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Ds(this.activation,this.hasPreluActivation,!1,4)}

      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Aa(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function due(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=An(u);let p=l;p==null&&(p=[1,1]);const h=Xe(s.shape,o.shape,a,p,i,c,!0,d),f=[{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inHeight,h.inWidth]}],m=h.dataFormat==="channelsLast";let y;return!m&&h.inHeight>16&&h.inWidth>16&&h.strideHeight===1&&h.strideWidth===1&&h.dilationWidth===1&&h.dilationHeight===1&&h.inChannels===h.outChannels?y=new cue(h.outShape,h.filterHeight,h.filterWidth):m&&h.outHeight>4&&h.outWidth>4&&h.strideWidth<=2&&h.inChannels===h.outChannels&&h.dilationHeight===1&&h.dilationWidth===1&&h.inChannels%4===0?(y=new _3(h),f.push({type:"int32",data:[y.virtualWidth]})):(y=new D3(h),f.push({type:"int32",data:[h.filterHeight]},{type:"int32",data:[h.filterWidth]},{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.dilationHeight,h.dilationWidth]})),n.runWebGPUProgram(y,[s,o],s.dtype,f)}const pue={kernelName:sd,backendName:"webgpu",kernelFunc:due};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hue{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class fue{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,dy:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,d=Xe(s.shape,c,a,i,u,l,!0),p=new hue(d),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(p,[s,o],"float32",h)}const gue={kernelName:od,backendName:"webgpu",kernelFunc:mue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yue(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,filter:o}=e,{strides:a,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,d=Xe(c,o.shape,a,i,u,l,!0),p=new fue(d),h=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.outChannels/d.inChannels]}];return n.runWebGPUProgram(p,[s,o],s.dtype,h)}const xue={kernelName:ad,backendName:"webgpu",kernelFunc:yue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wue{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vue(t){const{inputs:e,backend:n}=t,{x:r}=e,s=[...r.shape,...r.shape],o=L(r.shape),a=pe({inputs:{x:r},backend:n,attrs:{shape:[o]}}),i=new wue(o),u=n.runWebGPUProgram(i,[a],a.dtype),l=pe({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeData(a.dataId),n.disposeData(u.dataId),l}const bue={kernelName:id,backendName:"webgpu",kernelFunc:vue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cue{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${te("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o}=e,{strides:a,pad:i,dilations:u}=r,l=vo(s.shape,o.shape,a,i,"NHWC",u),c=[l.padInfo.top,l.padInfo.left],d=[{type:"int32",data:[l.filterHeight,l.filterWidth]},{type:"int32",data:[...c]},{type:"int32",data:[l.strideHeight,l.strideWidth]},{type:"int32",data:[l.dilationHeight,l.dilationWidth]}],p=new Cue(l);return n.runWebGPUProgram(p,[s,o],s.dtype,d)}const $ue={kernelName:ud,backendName:"webgpu",kernelFunc:Sue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kue{constructor(e,n){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=le(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),n!=="float32"&&n!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${n} type.`);this.type=n,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${te("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${ko("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class Iue{constructor(e,n,r){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=le(e.outShape),this.dispatch=re(this.dispatchLayout,e.outShape,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${r} type.`);this.type=r,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${te("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${ko("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,dy:a}=e,{strides:i,pad:u,dilations:l}=r,c=vo(s.shape,o.shape,i,u,"NHWC",l),d=o.dtype,p=new Iue(c,o.shape,d),h=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=cn({backend:n,attrs:{shape:o.shape,value:0,dtype:d}});return n.runWebGPUProgram(p,[s,o,a],d,h,f)}const Tue={kernelName:df,backendName:"webgpu",kernelFunc:Nue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eue(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,dy:a}=e,{strides:i,pad:u,dilations:l}=r,c=vo(s.shape,o.shape,i,u,"NHWC",l),d=s.dtype,p=new kue(c,d),h=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[L(c.outShape)]}],f=cn({backend:n,attrs:{shape:c.inShape,value:0,dtype:d}});return n.runWebGPUProgram(p,[s,o,a],d,h,f)}const Rue={kernelName:cf,backendName:"webgpu",kernelFunc:Eue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ue{constructor(e,n,r){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=Li.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=n,this.textureFormat=r,this.shaderKey=`draw_${n}_${r}`}getUserCode(){let e;const n=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${n};
        rgba[1] = ${n};
        rgba[2] = ${n};
      } else {
        rgba[d] = ${n};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${te("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Due(t){const{inputs:e,backend:n,attrs:r}=t,{image:s}=e,{canvas:o,options:a}=r,[i,u]=s.shape.slice(0,2),{imageOptions:l}=a||{},c=(l==null?void 0:l.alpha)||1,d=n.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",p=[i,u],h=new _ue(p,s.dtype,d);o.width=u,o.height=i;const f="webgpu";let m=o.getContext(f),y;m||(y=new OffscreenCanvas(u,i),m=y.getContext(f));const g=s.shape.length===3?s.shape[2]:1;m.configure({device:n.device,format:d,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",w=n.makeTensorInfo(p,x),v=n.tensorMap.get(w.dataId);v.resource=m.getCurrentTexture(),v.external=!0;const b=[{type:"uint32",data:[g]},{type:"float32",data:[c]}];if(n.runWebGPUProgram(h,[s],x,b,w),y){const S=o.getContext("2d");if(!S)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");S.drawImage(y,0,0)}return n.disposeData(w.dataId),s}const Pue={kernelName:ld,backendName:"webgpu",kernelFunc:Due};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P3=Pt({opType:we.MUL,cpuKernelImpl:zoe,supportsComplex:!0}),Aue={kernelName:ku,backendName:"webgpu",kernelFunc:P3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return Fa(s,o,a,"sum",n)}const Oue={kernelName:Qd,backendName:"webgpu",kernelFunc:A3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fue(t){const{inputs:e,backend:n,attrs:r}=t,{equation:s}=r,o=e,{allDims:a,summedDims:i,idDims:u}=lg(s,o.length);dg(a.length,u,o);const{path:l,steps:c}=pg(i,u),d=c.length;let p=null,h=a.length;const f=[];for(let m=0;m<d;++m){for(const y of c[m]){const{permutationIndices:g,expandDims:x}=cg(h,u[y]);let w;hg(g)?w=o[y]:(w=ns({inputs:{x:o[y]},backend:n,attrs:{perm:g}}),f.push(w));const v=w.shape.slice();for(let b=0;b<x.length;++b)v.splice(x[b],0,1);Pe(w.shape,v)||(w=pe({inputs:{x:w},backend:n,attrs:{shape:v}}),f.push(w)),p===null?p=w:(p=P3({inputs:{a:w,b:p},backend:n}),f.push(p))}m<d-1&&(l[m]>=0&&(p=A3({inputs:{x:p},backend:n,attrs:{axis:l[m]-(a.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeData(m.dataId);return p}const Lue={kernelName:cd,backendName:"webgpu",kernelFunc:Fue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zue=Oe({opType:ee.ELU}),Bue={kernelName:nu,backendName:"webgpu",kernelFunc:zue};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mue=t=>{const{inputs:e,backend:n}=t,{dy:r,y:s}=e,o=new _f(we.ELU_DER,r.shape,s.shape);return n.runWebGPUProgram(o,[r,s],r.dtype)},Vue={kernelName:dm,backendName:"webgpu",kernelFunc:Mue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wue=Pt({opType:we.EQUAL,dtype:"bool",cpuKernelImpl:Soe}),Uue={kernelName:su,backendName:"webgpu",kernelFunc:Wue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gue=Oe({opType:ee.ERF}),Hue={kernelName:ru,backendName:"webgpu",kernelFunc:Gue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jue=Oe({opType:ee.EXP,cpuKernelImpl:$oe,dtype:"float32"}),Kue={kernelName:ou,backendName:"webgpu",kernelFunc:jue};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h0(t){const{inputs:e,attrs:n,backend:r}=t,{dim:s}=n,{input:o}=e,a=o.shape.length,i=o.shape.slice();let u=s;return s<0&&(k(-(a+1)<=s,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),u=a+s+1),i.splice(u,0,1),pe({inputs:{x:o},backend:r,attrs:{shape:i}})}const que={kernelName:dd,backendName:"webgpu",kernelFunc:h0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xue=Oe({opType:ee.EXPM1,cpuKernelImpl:koe}),Yue={kernelName:au,backendName:"webgpu",kernelFunc:Xue};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iS{constructor(e,n){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O3(t,e,n){const r=n.tensorMap.get(t.dataId),s=L(t.shape),o=t.shape[t.shape.length-1],a=s/o,i=[],u=pe({inputs:{x:t},backend:n,attrs:{shape:[a,o]}});i.push(u);const l=u.shape,c=new iS("real",l),d=new iS("imag",l),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],h=e?2*Math.PI:-2*Math.PI,f=e?l[1]:1,m=[{type:"float32",data:[h]},{type:"float32",data:[f]}],y=n.runWebGPUProgram(c,p,"float32",m);i.push(y);const g=n.runWebGPUProgram(d,p,"float32",m);i.push(g);const x=Oa({inputs:{real:y,imag:g},backend:n});i.push(x);const w=pe({inputs:{x},backend:n,attrs:{shape:t.shape}});return i.forEach(v=>n.disposeData(v.dataId)),w}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Que(t){const{inputs:e,backend:n}=t,{input:r}=e;return O3(r,!1,n)}const Zue={kernelName:pd,backendName:"webgpu",kernelFunc:Que};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jue{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ele={kernelName:fd,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,s=new Jue(n.shape);return r.runWebGPUProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tle=Oe({opType:ee.FLOOR,cpuKernelImpl:Ioe}),nle={kernelName:iu,backendName:"webgpu",kernelFunc:tle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rle=Pt({opType:we.FLOOR_DIV,cpuKernelImpl:Noe,dtype:"int32"}),sle={kernelName:uu,backendName:"webgpu",kernelFunc:rle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ole{constructor(e,n,r=!1){this.pixelsOpType=Li.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[n,1,1]),this.importVideo=r,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${te("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ale={kernelName:nc,backendName:"webgpu",kernelFunc:ile};let Ma,ky=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ile(t){const{inputs:e,backend:n,attrs:r}=t;let{pixels:s}=e;const{numChannels:o}=r;if(s==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const a=typeof HTMLVideoElement!="undefined"&&s instanceof HTMLVideoElement,i=typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement,u=typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof OffscreenCanvas!="undefined"&&s instanceof OffscreenCanvas,l=typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap,[c,d]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],p=[d,c,o],h=z().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&a,f=a||i;if(l||u||f){let x;if(h)x=n.device.importExternalTexture({source:s});else{if(f){const M=z().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(Ma==null||M!==ky)&&(ky=M,Ma=document.createElement("canvas").getContext("2d",{willReadFrequently:ky})),Ma.canvas.width=c,Ma.canvas.height=d,Ma.drawImage(s,0,0,c,d),s=Ma.canvas}const R=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,F="rgba8unorm",B=n.textureManager.acquireTexture(p[1],p[0],F,R);n.queue.copyExternalImageToTexture({source:s},{texture:B},[p[1],p[0]]),x=B}const w=L(p),v=fe(p),b=new ole(p,o,h),S=[{type:"uint32",data:[w]},{type:"uint32",data:[o]},{type:"uint32",data:[...v]}],$=n.makeTensorInfo([d,c],"int32"),N=n.tensorMap.get($.dataId);N.resource=x;const E=n.runWebGPUProgram(b,[$],"int32",S);return n.disposeData($.dataId),E}const m=s.data;let y=m;if(o!=null&&o!==4){y=new Uint8Array(s.width*s.height*o);const x=m.length;let w=0;for(let v=0;v<x;v++)v%4<o&&(y[w++]=m[v])}const g=n.makeTensorInfo(p,"int32",new Int32Array(y));return n.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ule{constructor(e,n,r,s,o){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],$e(e,n),$e(e,r),this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),s!=null&&($e(e,s),this.variableNames.push("offset")),o!=null&&($e(e,o),this.variableNames.push("scale")),this.offsetShape=s,this.scaleShape=o,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let n="1.0";return this.scaleShape!=null&&(n="getScaleByOutputIndex(index)"),`
      ${te("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${n};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lle={kernelName:md,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r,scale:s,offset:o,mean:a,variance:i}=t,{varianceEpsilon:u}=e,l=n,c=[r,a,i];let d=null;o!=null&&(d=o.shape,c.push(o));let p=null;s!=null&&(p=s.shape,c.push(s));const h=new ule(r.shape,a.shape,i.shape,d,p),f=[{type:"float32",data:[u]}];return l.runWebGPUProgram(h,c,r.dtype,f)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cle(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=An(c),y=Xe(s.shape,o.shape,u,d,l,p,!1,m);return E3({x:s,filter:o,convInfo:y,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:f,activation:h})}const dle={kernelName:Ci,backendName:"webgpu",kernelFunc:cle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ple(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,filter:o,bias:a,preluActivationWeights:i}=e,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r;let f=c;f==null&&(f=[1,1]),k(Dt(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);const m=Xe(s.shape,o.shape,u,f,l,d,!0),y=[s,o],g=a!=null,x=i!=null;g&&y.push(a),x&&y.push(i);const w=[{type:"int32",data:[m.padInfo.top,m.padInfo.left]},{type:"int32",data:[m.inHeight,m.inWidth]}];let v;return m.outHeight>4&&m.outWidth>4&&m.strideWidth<=2&&m.inChannels===m.outChannels&&m.dilationHeight===1&&m.dilationWidth===1&&m.inChannels%4===0?(v=new _3(m,g,p,x),w.push({type:"int32",data:[v.virtualWidth]})):(v=new D3(m,g,p,x),w.push({type:"int32",data:[m.filterHeight]},{type:"int32",data:[m.filterWidth]},{type:"int32",data:[m.strideHeight,m.strideWidth]},{type:"int32",data:[m.dilationHeight,m.dilationWidth]})),p==="leakyrelu"&&(w.push({type:"float32",data:[h]}),v.uniforms+=" alpha : f32,"),n.runWebGPUProgram(v,y,"float32",w)}const hle={kernelName:Si,backendName:"webgpu",kernelFunc:ple};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fle{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${ft(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mle(t){const{inputs:e,backend:n}=t,{params:r,indices:s}=e,o=s.shape,a=o[o.length-1],i=L(r.shape),[u,l,c,d]=kp(r,s),p=pe({inputs:{x:s},backend:n,attrs:{shape:[l,a]}}),h=pe({inputs:{x:r},backend:n,attrs:{shape:[L(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||r.dtype==="string"){const x=n.readSync(s.dataId),w=n.bufferSync(r),v=Toe(x,w,r.dtype,l,a,c,d,r.shape,i);return n.makeTensorInfo(u,r.dtype,v.values)}const f=new fle(a,[l,c]),m=[{type:"int32",data:[a]},{type:"int32",data:d}],y=n.runWebGPUProgram(f,[h,p],h.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:u}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(y.dataId),g}const gle={kernelName:yd,backendName:"webgpu",kernelFunc:mle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yle{constructor(e,n){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=n,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=xle(this.aShape);return`
      ${te("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function xle(t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<t.length;r++)r===2?n.push("indexZ"):n.push(`${e[r]}`);return n.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,indices:o}=e,{axis:a,batchDims:i}=r,u=Ie(a,s.shape)[0],l=mg(s,o,u,i),c=L(o.shape),d=[],p=pe({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),h=pe({inputs:{x:o},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});d.push(p),d.push(h);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,o])){const w=n.tensorMap.get(h.dataId).values,v=be(h.shape,h.dtype,w),S=n.tensorMap.get(p.dataId).values,$=be(p.shape,p.dtype,S),N=Eoe($,v,f);return d.forEach(E=>n.disposeData(E.dataId)),n.makeTensorInfo(l.outputShape,N.dtype,N.values)}const m=new yle(p.shape,f),y=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(y);const g=pe({inputs:{x:y},backend:n,attrs:{shape:l.outputShape}});return d.forEach(x=>n.disposeData(x.dataId)),g}const wle={kernelName:gd,backendName:"webgpu",kernelFunc:F3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vle=Pt({opType:we.GREATER,cpuKernelImpl:_oe,dtype:"bool"}),ble={kernelName:lu,backendName:"webgpu",kernelFunc:vle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cle=Pt({opType:we.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:Roe}),Sle={kernelName:cu,backendName:"webgpu",kernelFunc:Cle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $le(t){const{inputs:e,backend:n}=t,{input:r}=e;return O3(r,!0,n)}const kle={kernelName:xd,backendName:"webgpu",kernelFunc:$le};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ile=Oe({opType:ee.IS_FINITE,dtype:"bool"}),Nle={kernelName:pu,backendName:"webgpu",kernelFunc:Ile};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tle=Oe({opType:ee.IS_INF,dtype:"bool"}),Ele={kernelName:hu,backendName:"webgpu",kernelFunc:Tle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rle=Oe({opType:ee.IS_NAN,dtype:"bool"}),_le={kernelName:fu,backendName:"webgpu",kernelFunc:Rle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dle(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{alpha:o}=r,a=[{type:"float32",data:[o]}],i=new rl(s.shape,ee.LEAKYRELU,"alpha : f32,");return n.runWebGPUProgram(i,[s],"float32",a)}const Ple={kernelName:vd,backendName:"webgpu",kernelFunc:Dle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ale=Pt({opType:we.LESS,dtype:"bool",cpuKernelImpl:Poe}),Ole={kernelName:mu,backendName:"webgpu",kernelFunc:Ale};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fle=Pt({opType:we.LESS_EQUAL,dtype:"bool",cpuKernelImpl:Doe}),Lle={kernelName:gu,backendName:"webgpu",kernelFunc:Fle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zle{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ble(t){const{backend:e,attrs:n}=t,{start:r,stop:s,num:o}=n,a=(s-r)/(o-1),i=new zle(o),u=[{type:"float32",data:[r]},{type:"float32",data:[a]}];return e.runWebGPUProgram(i,[],"float32",u)}const Mle={kernelName:bd,backendName:"webgpu",kernelFunc:Ble};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vle=Oe({opType:ee.LOG,cpuKernelImpl:Aoe}),Wle={kernelName:yu,backendName:"webgpu",kernelFunc:Vle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ule=Oe({opType:ee.LOG1P}),Gle={kernelName:xu,backendName:"webgpu",kernelFunc:Ule};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hle=Pt({opType:we.LOGICAL_AND,dtype:"bool"}),jle={kernelName:wu,backendName:"webgpu",kernelFunc:Hle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kle=Oe({opType:ee.LOGICAL_NOT}),qle={kernelName:vu,backendName:"webgpu",kernelFunc:Kle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xle=Pt({opType:we.LOGICAL_OR}),Yle={kernelName:bu,backendName:"webgpu",kernelFunc:Xle};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class Qle{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${L3}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class Zle{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,k(n<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${n}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=re(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${te()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${L3}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jle(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{depthRadius:o,bias:a,alpha:i,beta:u}=r;let l;o>16?l=new Qle(s.shape):l=new Zle(s.shape,o);const c=[{type:"int32",data:[o]},{type:"float32",data:[a]},{type:"float32",data:[i]},{type:"float32",data:[u]}];return n.runWebGPUProgram(l,[s],s.dtype,c)}const ece={kernelName:Cd,backendName:"webgpu",kernelFunc:Jle};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tce{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nce(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,y:o,dy:a}=e,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new tce(s.shape),p=[{type:"int32",data:[i]},{type:"float32",data:[u]},{type:"float32",data:[l]},{type:"float32",data:[c]}];return n.runWebGPUProgram(d,[s,o,a],s.dtype,p)}const rce={kernelName:pm,backendName:"webgpu",kernelFunc:nce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sce=Pt({opType:we.MAX,cpuKernelImpl:Foe}),oce={kernelName:Cu,backendName:"webgpu",kernelFunc:sce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ace(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:u}=r,l=1,c=jt(s.shape,o,a,l,i,u);return k3(s,c,"max",n)}const ice={kernelName:$d,backendName:"webgpu",kernelFunc:ace};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uce(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{filterSize:o,strides:a,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=[1,1,1],d=Yn(s.shape,o,a,c,i,l,u),p=new ov(d,"max"),h=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];return n.runWebGPUProgram(p,[s],s.dtype,h)}const lce={kernelName:kd,backendName:"webgpu",kernelFunc:uce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cce{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class dce{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${te("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pce(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o}=e,a=o,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=[1,1,1],p=Yn(a.shape,i,u,d,l,c),h=new ov(p,"max",!0);let f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.front,p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.inDepth,p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]}];const m=n.runWebGPUProgram(h,[a],"int32",f),y=new dce(p);f=[{type:"int32",data:[p.strideDepth,p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterDepth-1-p.padInfo.front,p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.effectiveFilterDepth,p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outDepth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const g=n.runWebGPUProgram(y,[s,m],a.dtype,f);return n.disposeData(m.dataId),g}const hce={kernelName:fm,backendName:"webgpu",kernelFunc:pce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fce(t){const{inputs:e,backend:n,attrs:r}=t,{dy:s,input:o,output:a}=e,i=o;w3([o,a],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=jt(i.shape,u,l,1,c,d),h=new wc(p,"max",!0);let f=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.padInfo.top,p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.inHeight,p.inWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]}];const m=n.runWebGPUProgram(h,[i],"int32",f),y=new cce(p);f=[{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.effectiveFilterHeight-1-p.padInfo.top,p.effectiveFilterWidth-1-p.padInfo.left]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]},{type:"int32",data:[p.effectiveFilterHeight,p.effectiveFilterWidth]},{type:"int32",data:[p.outHeight]},{type:"int32",data:[p.outWidth]}];const g=n.runWebGPUProgram(y,[s,m],i.dtype,f);return n.disposeData(m.dataId),g}const mce={kernelName:hm,backendName:"webgpu",kernelFunc:fce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gce(t){const{inputs:e,backend:n,attrs:r}=t,{filterSize:s,strides:o,pad:a,includeBatchInIndex:i}=r,{x:u}=e;k(u.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${u.shape.length}.`);const l=[1,1];k(Dt(o,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${l}'`);const c=jt(u.shape,s,o,l,a),d=[{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]},{type:"int32",data:[c.inHeight,c.inWidth]},{type:"int32",data:[c.effectiveFilterHeight,c.effectiveFilterWidth]}];let p=new wc(c,"max",!1);const h=n.runWebGPUProgram(p,[u],u.dtype,d);p=new wc(c,"max",!0,!0,i);const f=n.runWebGPUProgram(p,[u],"int32",d);return[h,f]}const yce={kernelName:Id,backendName:"webgpu",kernelFunc:gce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xce(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return Fa(s,o,a,"min",n)}const wce={kernelName:Td,backendName:"webgpu",kernelFunc:xce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vce=Pt({opType:we.MIN,cpuKernelImpl:Loe}),bce={kernelName:Su,backendName:"webgpu",kernelFunc:vce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cce{constructor(e,n,r){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((s,o)=>s[0]+e[o]+s[1]),this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,n.map((s,o)=>{this.uniforms+=` pad${o} : vec2<i32>,`}),this.offset=r==="reflect"?0:1,this.shaderKey=`mirrorPad_${r}`}getUserCode(){const e=this.xShape.length,n=this.xShape.map((l,c)=>`uniforms.pad${c}[0]`).join(","),r=this.xShape.map((l,c)=>`uniforms.pad${c}[0] + uniforms.xShape${e>1?`[${c}]`:""}`).join(","),s=e===1?"start":"start[i]",o=e===1?"end":"end[i]",a=e===1?"outC":"outC[i]",i=ft(e),u=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${te("index")} {
        if (index < uniforms.size) {
          let start = ${i}(${n});
          let end = ${i}(${r});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${a} < ${s}) {
              ${a} = ${s} * 2 - ${a} - ${this.offset};
            } else if(${a} >= ${o}) {
              ${a} = (${o} - 1) * 2 - ${a} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sce={kernelName:Ed,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{paddings:s,mode:o}=e,a=n,i=s.map(c=>({type:"int32",data:[c[0],c[1]]})),u=new Cce(r.shape,s,o);return a.runWebGPUProgram(u,[r],r.dtype,i)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ce=Pt({opType:we.MOD}),kce={kernelName:$u,backendName:"webgpu",kernelFunc:$ce};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ice{constructor(e,n){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${te("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nce{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${te("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z3(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{dim:o}=r,a=pe({inputs:{x:s},backend:n,attrs:{shape:[L(s.shape)/s.shape[o],s.shape[o]]}}),i=new Nce(a.shape),u=n.runWebGPUProgram(i,[a],s.dtype),l=pe({inputs:{x:u},backend:n,attrs:{shape:s.shape}});return n.disposeData(a.dataId),n.disposeData(u.dataId),l}const Tce={kernelName:ep,backendName:"webgpu",kernelFunc:z3};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ece(t){const{inputs:e,backend:n,attrs:r}=t,{logits:s}=e,{numSamples:o,seed:a,normalized:i}=r,u=i?s:z3({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new Ice(l,o),p=[{type:"float32",data:[a]},{type:"int32",data:[c]}],h=n.runWebGPUProgram(d,[u],"int32",p);return i||n.disposeData(u.dataId),h}const Rce={kernelName:Rd,backendName:"webgpu",kernelFunc:Ece};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _ce(t){const{inputs:e,backend:n}=t,{x:r}=e;if(n.shouldExecuteOnCPU([r])){const o=n.tensorMap.get(r.dataId),[a,i]=Boe(o.values,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}const s=new rl(r.shape,ee.NEG);return n.runWebGPUProgram(s,[r],r.dtype)}const Dce={kernelName:_d,backendName:"webgpu",kernelFunc:_ce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pce(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(o.dataId),{selectedIndices:d}=Sp(l,c,a,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}const Ace={kernelName:Dd,backendName:"webgpu",kernelFunc:Pce};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oce(t){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:n,attrs:r}=t,{boxes:s,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),d=n.readSync(o.dataId),p=a,h=i,f=u,m=l,{selectedIndices:y,selectedScores:g}=$p(c,d,p,h,f,m);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Fce={kernelName:Pd,backendName:"webgpu",kernelFunc:Oce};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lce{constructor(e,n){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,n],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${te("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zce(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s}=e,{dtype:o,depth:a,onValue:i,offValue:u}=r,l=L(s.shape),c=new Lce(l,a),d=pe({inputs:{x:s},backend:n,attrs:{shape:[l]}}),p=[{type:"float32",data:[i]},{type:"float32",data:[u]}],h=n.runWebGPUProgram(c,[d],o,p);n.disposeData(d.dataId);const f=[...s.shape,a],m=pe({inputs:{x:h},backend:n,attrs:{shape:f}});return n.disposeData(h.dataId),m}const Bce={kernelName:Od,backendName:"webgpu",kernelFunc:zce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pf(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="complex64"){const s=Dp({inputs:{input:r},backend:n}),o=Pf({inputs:{x:s},backend:n}),a=Ng({inputs:{input:r},backend:n}),i=Pf({inputs:{x:a},backend:n}),u=Oa({inputs:{real:o,imag:i},backend:n});return n.disposeData(s.dataId),n.disposeData(o.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),u}else return cn({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}const Mce={kernelName:dp,backendName:"webgpu",kernelFunc:Pf};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B3(t){const{inputs:e,backend:n}=t,{x:r}=e;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){const s=Dp({inputs:{input:r},backend:n}),o=B3({inputs:{x:s},backend:n}),a=Ng({inputs:{input:r},backend:n}),i=Pf({inputs:{x:a},backend:n}),u=Oa({inputs:{real:o,imag:i},backend:n});return n.disposeData(s.dataId),n.disposeData(o.dataId),n.disposeData(a.dataId),n.disposeData(i.dataId),u}else return cn({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const Vce={kernelName:Ad,backendName:"webgpu",kernelFunc:B3};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wce(t){const{inputs:e,backend:n,attrs:r}=t,{axis:s}=r;if(e.length===1)return h0({inputs:{input:e[0]},backend:n,attrs:{dim:s}});const o=e[0].shape,a=e[0].dtype;e.forEach(c=>{_t(o,c.shape,"All tensors passed to stack must have matching shapes"),k(a===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=e.map(c=>{const d=h0({inputs:{input:c},backend:n,attrs:{dim:s}});return i.push(d),d}),l=T3({inputs:u,backend:n,attrs:{axis:s}});return i.forEach(c=>n.disposeData(c.dataId)),l}const Uce={kernelName:Fd,backendName:"webgpu",kernelFunc:Wce};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(t,e=!1){const n=t.length,r=ft(n),s=t.map((d,p)=>`uniforms.pad${p}[0]`).join(","),o=t.map((d,p)=>`uniforms.pad${p}[0] + uniforms.xShape${n>1?`[${p}]`:""}`).join(","),a=n>1?`${r}(${s})`:`${s}`,i=n>1?`${r}(${o})`:`${o}`,u=n>1?"any(paddedCoords < start)":"paddedCoords < start",l=n>1?"any(paddedCoords >= end)":"paddedCoords >= end",c=n>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,n):"coords";return`
        let start = ${a};
        let end = ${i};
        if (${u} || ${l}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${c}));
        }
  `}class Gce{constructor(e,n){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n.map((r,s)=>r[0]+e[s]+r[1]),this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),n.map((r,s)=>{this.uniforms+=` pad${s} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${M3(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hce=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{paddings:o,constantValue:a}=r;if(o.every(l=>Pe(l,[0,0])))return _n({inputs:{x:s},backend:n});if(L(s.shape)===0){const l=o.map((c,d)=>c[0]+s.shape[d]+c[1]);return cn({backend:n,attrs:{shape:l,value:a,dtype:s.dtype}})}const i=[{type:"float32",data:[a]}];o.map(l=>i.push({type:"int32",data:[l[0],l[1]]}));const u=new Gce(s.shape,o);return n.runWebGPUProgram(u,[s],s.dtype,i)},jce={kernelName:Ld,backendName:"webgpu",kernelFunc:Hce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kce=Pt({opType:we.POW}),qce={kernelName:Nu,backendName:"webgpu",kernelFunc:Kce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xce(t){const{inputs:e,backend:n}=t,{x:r,alpha:s}=e,o=new _f(we.PRELU,r.shape,s.shape);return n.runWebGPUProgram(o,[r,s],"float32")}const Yce={kernelName:zd,backendName:"webgpu",kernelFunc:Xce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qce(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{axis:o,keepDims:a}=r;return Fa(s,o,a,"prod",n)}const Zce={kernelName:Bd,backendName:"webgpu",kernelFunc:Qce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jce=t=>{const{backend:e,attrs:n}=t,{start:r,stop:s,step:o,dtype:a}=n,i=Woe(r,s,o,a);return e.makeTensorInfo([i.length],a,i)},ede={kernelName:Md,backendName:"webgpu",kernelFunc:Jce};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tde=Pt({opType:we.DIV}),nde={kernelName:tu,backendName:"webgpu",kernelFunc:tde};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rde=Oe({opType:ee.RECIPROCAL}),sde={kernelName:Tu,backendName:"webgpu",kernelFunc:rde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ode=Oe({opType:ee.RELU}),ade={kernelName:Eu,backendName:"webgpu",kernelFunc:ode};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ide=Oe({opType:ee.RELU6}),ude={kernelName:Ru,backendName:"webgpu",kernelFunc:ide};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lde{constructor(e,n,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,r,e[3]],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cde(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,size:a,halfPixelCenters:i}=r,[u,l]=a,c=o&&u>1?1:0,d=o&&l>1?1:0,h=[{type:"float32",data:[c,d]},{type:"float32",data:[i?.5:0]}],f=new lde(s.shape,u,l);return n.runWebGPUProgram(f,[s],"float32",h)}const dde={kernelName:Gd,backendName:"webgpu",kernelFunc:cde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pde{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeBilinearBackprop_${n}`}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hde(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,[,i,u]=s.shape,[,l,c]=o.shape,d=[a&&l>1?i-1:i,a&&c>1?u-1:u],p=[a&&l>1?l-1:l,a&&c>1?c-1:c],h=d[0]/p[0],f=d[1]/p[1],m=1/h,y=1/f,g=Math.ceil(m)*2+2,x=Math.ceil(y)*2+2,w=new pde(s.shape,a),v=[{type:"int32",data:d},{type:"int32",data:p},{type:"float32",data:[h]},{type:"float32",data:[f]},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return n.runWebGPUProgram(w,[o],o.dtype,v)}const fde={kernelName:vm,backendName:"webgpu",kernelFunc:hde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mde{constructor(e,n,r,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],n,r,e[3]],this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=s,this.shaderKey=`resizeNearest_${s}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gde(t){const{inputs:e,backend:n,attrs:r}=t,{images:s}=e,{alignCorners:o,halfPixelCenters:a,size:i}=r,[u,l]=i,c=o&&u>1?1:0,d=o&&l>1?1:0,h=[{type:"float32",data:[c,d]},{type:"float32",data:[o?.5:0]}],f=new mde(s.shape,u,l,a);return n.runWebGPUProgram(f,[s],s.dtype,h)}const yde={kernelName:Ud,backendName:"webgpu",kernelFunc:gde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xde{constructor(e,n){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=n,this.shaderKey=`resizeNearestNeigborBackprop_${n}`}getUserCode(){return`
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wde(t){const{inputs:e,backend:n,attrs:r}=t,{images:s,dy:o}=e,{alignCorners:a}=r,[,i,u]=s.shape,[,l,c]=o.shape,d=[a&&l>1?i-1:i,a&&c>1?u-1:u],p=[a&&l>1?l-1:l,a&&c>1?c-1:c],h=d[0]/p[0],f=d[1]/p[1],m=1/h,y=1/f,g=Math.ceil(m)*2+2,x=Math.ceil(y)*2+2,w=new xde(s.shape,a),v=[{type:"int32",data:d},{type:"int32",data:p},{type:"float32",data:[m]},{type:"float32",data:[y]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return n.runWebGPUProgram(w,[o],o.dtype,v)}const vde={kernelName:wm,backendName:"webgpu",kernelFunc:wde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bde{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cde(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{dims:o}=r,a=s.shape.length;if(a===0)return _n({inputs:{x:s},backend:n});const i=s.shape,u=[1,1,1,1];i.forEach((y,g)=>{const x=g+4-a;u[x]=y});const l=Ie(o,s.shape),c=[0,0,0,0];l.forEach(y=>{const g=y+4-a;c[g]=1});const d=[{type:"int32",data:c}],p=pe({inputs:{x:s},backend:n,attrs:{shape:u}}),h=new bde(u),f=n.runWebGPUProgram(h,[p],p.dtype,d);n.disposeData(p.dataId);const m=pe({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeData(f.dataId),m}const Sde={kernelName:Hd,backendName:"webgpu",kernelFunc:Cde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $de{constructor(e,n){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof n=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${te("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kde={kernelName:pp,backendName:"webgpu",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:s,fillValue:o,center:a}=e,i=n,u=new $de(r.shape,o),[l,c]=Zm(a,r.shape[1],r.shape[2]),d=[{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(s)]},{type:"float32",data:[Math.cos(s)]}];return typeof o=="number"?d.push({type:"float32",data:[Number.parseFloat(o.toFixed(2))]}):d.push({type:"float32",data:o}),i.runWebGPUProgram(u,[r],r.dtype,d)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ide=Oe({opType:ee.ROUND}),Nde={kernelName:_u,backendName:"webgpu",kernelFunc:Ide};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tde=Oe({opType:ee.RSQRT,cpuKernelImpl:Uoe}),Ede={kernelName:Du,backendName:"webgpu",kernelFunc:Tde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fl{constructor(e,n,r,s,o,a,i,u=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=a,this.type=i,this.sumDupeIndices=u,this.dispatchLayout=le(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=n>1,this.shaderKey=`scatter_${r}_${s}_${this.sliceDimGreaterThanOne}_${i}_${u}_${o.length}`;const l=ft(o.length);this.uniforms=`sliceDim : i32, strides: ${l}, updatesSize: i32,`,this.updatesRank=s,this.indicesRank=r}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const n=`getIndices(${e})`,r=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let s="",o="";this.dispatchLayout.x.length===1?(s="flattenedIndex",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(s="vec2<i32>(flattenedIndex, coords[1])",o=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const i=`getUpdates(${Array.from({length:this.updatesRank},(l,c)=>`coords[${c}]`).join(", ")})`;return`
    ${o}
      ${te("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${n}));
            flattenedIndex = flattenedIndex + indexInside * ${r};
          }
          let updateValue =
              ${Bo(this.type)}(${i});
          let flatIndex = getOutputIndexFromCoords(${s});

          ${this.sumDupeIndices?ko("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rde(t){const{inputs:e,backend:n,attrs:r}=t,{indices:s,updates:o}=e,{shape:a}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Wr(o,s,a),p=[d/l,l];if(d===0)return n.makeTensorInfo(a,s.dtype);const h=pe({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),f=pe({inputs:{x:o},backend:n,attrs:{shape:[u,l]}}),m=f.dtype,y=cn({backend:n,attrs:{shape:p,value:0,dtype:m}}),g=L(f.shape),x=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[g]}],w=new Fl(f.shape,i,h.shape.length,f.shape.length,c,p,m),v=n.runWebGPUProgram(w,[f,h],m,x,y),b=pe({inputs:{x:v},backend:n,attrs:{shape:a}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(v.dataId),b}const _de={kernelName:jd,backendName:"webgpu",kernelFunc:Rde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dde{constructor(e,n){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=n,this.shaderKey=`search_sorted_${n}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${te("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pde(t){const{inputs:e,backend:n,attrs:r}=t,{sortedSequence:s,values:o}=e,{side:a}=r,i=new Dde([o.shape[0],o.shape[1]],a),u=[{type:"int32",data:[s.shape[1]]}];return n.runWebGPUProgram(i,[s,o],"int32",u)}const Ade={kernelName:qd,backendName:"webgpu",kernelFunc:Pde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ode{constructor(e,n,r){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=n,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=r,this.shaderKey="select"}getUserCode(){let e,n;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)n="resRC",e="resRC";else{const s=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],a=[];for(let i=0;i<this.outputShape.length;i++)a.push(`${s[i]}`),i<this.cRank&&o.push(`${s[i]}`);e=o.join(),n=a.join()}return`
      ${te("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${n}));
          } else {
            setOutputAtIndex(index, getB(${n}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fde(t){const{inputs:e,backend:n}=t,{condition:r,t:s,e:o}=e,a=new Ode(r.shape.length,s.shape,s.shape.length);return n.runWebGPUProgram(a,[r,s,o],$t(s.dtype,o.dtype))}const Lde={kernelName:Xd,backendName:"webgpu",kernelFunc:Fde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zde=Oe({opType:ee.SELU}),Bde={kernelName:Pu,backendName:"webgpu",kernelFunc:zde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mde=Oe({opType:ee.SIGMOID}),Vde={kernelName:Lu,backendName:"webgpu",kernelFunc:Mde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wde=Oe({opType:ee.SIGN}),Ude={kernelName:Fu,backendName:"webgpu",kernelFunc:Wde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gde=Oe({opType:ee.SIN}),Hde={kernelName:Au,backendName:"webgpu",kernelFunc:Gde};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jde=Oe({opType:ee.SINH}),Kde={kernelName:Ou,backendName:"webgpu",kernelFunc:jde};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qde=Oe({opType:ee.SOFTPLUS}),Xde={kernelName:zu,backendName:"webgpu",kernelFunc:qde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yde{constructor(e,n,r,s,o,a){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const i=new Array(s.length);for(let u=0;u<i.length;u++)i[u]=s[o[u]];this.outputShape=i,this.newDim=o,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=n,this.uniforms+=`reshapedPaddedXShape : ${ft(s.length)}, paddedXShapeStrides : ${ft(a)}, `,r.map((u,l)=>{this.uniforms+=` pad${l} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${o}`}getUserCode(){const e=ft(this.outputShape.length),n=b3(this.newDim);return`
      ${Nh(this.paddedXShape,"PaddedX")}
      ${te("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${n}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${M3(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qde=t=>{const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{blockShape:o,paddings:a}=r;k(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const i=o.reduce((x,w)=>x*w),u=[[0,0]];u.push(...a);for(let x=1+o.length;x<s.shape.length;++x)u.push([0,0]);const l=u.map((x,w)=>x[0]+s.shape[w]+x[1]),c=Na(l,o,i,!1),d=Ta(c.length,o.length,!1),p=Ea(l,o,i,!1),h=fe(l),f=new Yde(s.shape,l,u,c,d,h.length),m=[{type:"int32",data:c},{type:"int32",data:h}];u.map(x=>m.push({type:"int32",data:[x[0],x[1]]}));const y=n.runWebGPUProgram(f,[s],s.dtype,m),g=pe({inputs:{x:y},backend:n,attrs:{shape:p}});return n.disposeData(y.dataId),g},Zde={kernelName:Zd,backendName:"webgpu",kernelFunc:Qde};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jde{constructor(e,n,r){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=r,this.dispatchLayout=le([n]),this.dispatch=re(this.dispatchLayout,[n],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${ko("&result[outIndex]","value",this.type)}
      }
    }
  `}}class epe{constructor(e,n){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=le(n),this.dispatch=re(this.dispatchLayout,n,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${ko("&result[segmentId]","1","int32")}
      }
    }
  `}}class tpe{constructor(e,n){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=n,this.dispatchLayout=le(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V3(t,e,n,r=!1,s){const a=L(t.shape)/t.shape[0],i=t.dtype,u=L(e.shape),l=s.readSync(n.dataId),d=u>0?l[u-1]+1:0;let p;const h=t.shape.slice();h[0]=d;const f=u*a,m=cn({backend:s,attrs:{shape:h,value:0,dtype:i}});p=new Jde(h,f,i);let y=[{type:"int32",data:[a]},{type:"int32",data:[f]}];const g=s.runWebGPUProgram(p,[t,e,n],i,y,m);if(r)return g;const x=cn({backend:s,attrs:{shape:[d],value:0,dtype:"int32"}});p=new epe(d,n.shape);const w=s.runWebGPUProgram(p,[n],"int32",null,x),v=cn({backend:s,attrs:{shape:h,value:0,dtype:i}});p=new tpe(h,i),y=[{type:"int32",data:[a]}];const b=s.runWebGPUProgram(p,[g,w],i,y,v);return s.disposeData(g.dataId),s.disposeData(w.dataId),b}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npe(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;return V3(r,s,o,!1,n)}const rpe={kernelName:tp,backendName:"webgpu",kernelFunc:npe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function spe(t){const{inputs:e,backend:n}=t,{data:r,indices:s,segmentIds:o}=e;return V3(r,s,o,!0,n)}const ope={kernelName:np,backendName:"webgpu",kernelFunc:spe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ape{constructor(e,n){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const r=new Array(e.length);for(let s=0;s<r.length;s++)r[s]=e[s]*n[s];this.outputShape=r,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=ipe(this.rank,"uniforms.");return`
      ${te("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function ipe(t,e=""){if(t>=5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`(resRC % ${e}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<t;s++)r.push(`(${n[s]} % ${e}aShape[${s}])`);return r.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function av(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{reps:o}=r;if(n.shouldExecuteOnCPU([s])||s.dtype==="string"||s.shape.length>=5){const u=n.readSync(s.dataId),l=s.dtype==="string"?u.map(p=>fr(p)):u,c=be(s.shape,s.dtype,l),d=Yoe(c,o);return n.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new ape(s.shape,o);return n.runWebGPUProgram(a,[s],s.dtype)}const upe={kernelName:Gu,backendName:"webgpu",kernelFunc:av};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lpe(t){const{inputs:e,backend:n,attrs:r}=t,{sparseIndices:s,sparseValues:o,defaultValue:a}=e,{outputShape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=Wr(o,s,i),h=!1;if(o.dtype==="string"){const N=n.bufferSync(s),E=n.bufferSync(o),R=fr(n.readSync(a.dataId)[0]),F=Goe(N,E,i,p,c,l,u,d,R,h);return n.makeTensorInfo(i,F.dtype,F.values)}const f=[p/c,c],m=pe({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),y=o.shape.length?pe({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}):_n({inputs:{x:o},backend:n}),g=y.dtype,x=n.makeTensorInfo([],g,Rt(1,g)),w=pe({inputs:{x:a},backend:n,attrs:{shape:Array(f.length).fill(1)}}),v=av({inputs:{x:w},backend:n,attrs:{reps:f}}),b=L([l,c]),S=[{type:"int32",data:[u]},{type:"int32",data:d},{type:"int32",data:[b]}];switch(l){case 0:break;case 1:{const N=new Fl([l,c],u,m.shape.length,y.shape.length,d,f,g,h);n.runWebGPUProgram(N,[y,m],g,S,v)}break;default:{const N=new Fl([l,c],u,m.shape.length,x.shape.length,d,f,g,h);n.runWebGPUProgram(N,[x,m],g,S,v)}{const N=new Fl([l,c],u,m.shape.length,y.shape.length,d,f,g);n.runWebGPUProgram(N,[y,m],g,S,v)}}const $=pe({inputs:{x:v},backend:n,attrs:{shape:i}});return n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(w.dataId),n.disposeData(x.dataId),n.disposeData(v.dataId),$}const cpe={kernelName:rp,backendName:"webgpu",kernelFunc:lpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dpe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{numOrSizeSplits:o,axis:a}=r,i=Ie(a,s.shape)[0],u=fg(s,o,i),l=s.shape.length,c=new Array(l).fill(0),d=s.shape.slice();return u.map(p=>{const h=[...d];h[i]=p;const f=sl({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});return c[i]+=p,f})}const ppe={kernelName:Jd,backendName:"webgpu",kernelFunc:dpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hpe=Oe({opType:ee.SQRT}),fpe={kernelName:Bu,backendName:"webgpu",kernelFunc:hpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mpe={kernelName:Sm,backendName:"webgpu",kernelFunc:({inputs:t,backend:e})=>{const{x:n}=t,r=e,s=new rl(n.shape,ee.SQUARE);return r.runWebGPUProgram(s,[n],n.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gpe=Pt({opType:we.SQUARED_DIFFERENCE}),ype={kernelName:Mu,backendName:"webgpu",kernelFunc:gpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xpe({inputs:t,attrs:e,backend:n}){const{x:r}=t,s=new rl(r.shape,ee.STEP,"stepAlpha : f32,"),o=[{type:"float32",data:[e.alpha]}];return n.runWebGPUProgram(s,[r],r.dtype,o)}const wpe={kernelName:Hu,backendName:"webgpu",kernelFunc:xpe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vpe{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const n=ft(this.outputShape.length);this.uniforms=`begin : ${n},  strides : ${n}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let n="";if(e===1)n="coords * uniforms.strides + uniforms.begin";else{let s=0;n=this.outputShape.map((o,a)=>(s++,this.outputShape.length===1?`coords * uniforms.strides[${a}] + uniforms.begin[${a}]`:`coords[${s-1}] * uniforms.strides[${a}] + uniforms.begin[${a}]`)).join(",")}return`
       ${te("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${n}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bpe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{begin:o,end:a,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:y,isSimpleSlice:g,begin:x,end:w,strides:v}=Xm(s.shape,o,a,i,u,l,c,d,p);let b;if(m)b=pe({inputs:{x:s},backend:n,attrs:{shape:f}});else if(y||g){k(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const S=Km(x,w,v),$=sl({inputs:{x:s},backend:n,attrs:{begin:x,size:S}});b=pe({inputs:{x:$},backend:n,attrs:{shape:f}}),n.disposeData($.dataId)}else if(n.shouldExecuteOnCPU([s])){const $=n.readSync(s.dataId),N=be(s.shape,s.dtype,$),E=Koe(h,N,v,x);b=n.makeTensorInfo(f,s.dtype,E.values)}else{const $=new vpe(h),N=[{type:"int32",data:x},{type:"int32",data:v}],E=n.runWebGPUProgram($,[s],s.dtype,N);b=pe({inputs:{x:E},backend:n,attrs:{shape:f}}),n.disposeData(E.dataId)}return b}const Cpe={kernelName:op,backendName:"webgpu",kernelFunc:bpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Spe(t){const{inputs:e,backend:n,attrs:r}=t,{separator:s,nGramWidths:o,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=e,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=qoe(p,h,s,o,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}const $pe={kernelName:ap,backendName:"webgpu",kernelFunc:Spe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kpe=Pt({opType:we.SUB,cpuKernelImpl:Xoe,supportsComplex:!0}),Ipe={kernelName:Vu,backendName:"webgpu",kernelFunc:kpe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Npe=Oe({opType:ee.TAN}),Tpe={kernelName:Wu,backendName:"webgpu",kernelFunc:Npe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Epe=Oe({opType:ee.TANH}),Rpe={kernelName:Uu,backendName:"webgpu",kernelFunc:Epe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _pe(t){const{inputs:e,backend:n,attrs:r}=t,{tensor:s,indices:o,updates:a}=e,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=Wr(a,o,s.shape),p=[d/l,l];if(d===0)return n.makeTensorInfo(s.shape,o.dtype);const h=[],f=pe({inputs:{x:o},backend:n,attrs:{shape:[u,i]}});h.push(f);const m=pe({inputs:{x:a},backend:n,attrs:{shape:[u,l]}});h.push(m);const y=pe({inputs:{x:s},backend:n,attrs:{shape:p}});h.push(y);const g=av({inputs:{x:y},backend:n,attrs:{reps:Array(p.length).fill(1)}}),x=new Fl([u,l],i,f.shape.length,m.shape.length,c,p,s.dtype,!1),w=L([u,l]),v=[{type:"int32",data:[i]},{type:"int32",data:c},{type:"int32",data:[w]}],b=n.runWebGPUProgram(x,[m,f],y.dtype,v,g);h.push(b);const S=pe({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return h.forEach($=>n.disposeData($.dataId)),S}const Dpe={kernelName:Kd,backendName:"webgpu",kernelFunc:_pe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ppe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${te("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class Ape{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${te("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Va(t,e){e!==null&&t.disposeData(e.dataId)}function uS(t){let e=1;for(;e<t;)e*=2;return e}function Ope(t){const{inputs:e,backend:n,attrs:r}=t,{x:s}=e,{k:o,sorted:a}=r,i=s.shape,u=i[i.length-1];if(n.shouldExecuteOnCPU([s])){const b=n.readSync(s.dataId),[S,$]=Qoe(b,i,s.dtype,o,a);return[n.makeTensorInfo(S.shape,S.dtype,S.values),n.makeTensorInfo($.shape,$.dtype,$.values)]}if(o===0)return i[i.length-1]=0,[n.makeTensorInfo(i,s.dtype,[]),n.makeTensorInfo(i,"int32",[])];if(u===1)return[s,cn({attrs:{shape:i,dtype:"int32",value:0},backend:n})];const c=L(i)/u,d=pe({inputs:{x:s},attrs:{shape:[c,u]},backend:n}),p=uS(o),h=uS(u);let f=null;const m=()=>f===null?[d,d]:[d,f],y=(b,S,$)=>{const N=m(),E=new Ppe($),F=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[b]},{type:"int32",data:[S]}],B=f;f=n.runWebGPUProgram(E,N,"int32",F),Va(n,B)};for(let b=1;b<p;b*=2){const S=b*2;for(let $=b;$>=1;$/=2)y(S,$,[c,h])}for(let b=h;b>p;b/=2){const S=m(),$=new Ape([c,b/2]),E=[{type:"int32",data:[u]},{type:"int32",data:[f===null?1:0]},{type:"int32",data:[p]}],R=f;f=n.runWebGPUProgram($,S,"int32",E),Va(n,R);const F=p/2,B=F*2;for(let M=F;M>=1;M/=2)y(B,M,f.shape)}let g=f;f=sl({inputs:{x:f},backend:n,attrs:{begin:0,size:[c,o]}}),Va(n,g);let x=F3({inputs:{x:d,indices:f},backend:n,attrs:{axis:1,batchDims:1}});Va(n,d);const w=i.slice(0,-1);w.push(o),g=f,f=pe({inputs:{x:f},attrs:{shape:w},backend:n}),Va(n,g);const v=x;return x=pe({inputs:{x},attrs:{shape:w},backend:n}),Va(n,v),[x,f]}const Fpe={kernelName:ip,backendName:"webgpu",kernelFunc:Ope};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lpe{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=le(this.outputShape),this.dispatch=re(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${te("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zpe(t){const{inputs:e,backend:n,attrs:r}=t,{image:s,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,p,h]=s.shape,[f,m]=l!=null?l:[d,p],y=[c,f,m,h],g=new Lpe(y),x=a==="nearest"?1:2;let w;switch(i){case"constant":w=1;break;case"reflect":w=2;break;case"wrap":w=3;break;case"nearest":w=4;break;default:w=1;break}const v=[{type:"int32",data:[x]},{type:"int32",data:[w]},{type:"float32",data:[u]}];return n.runWebGPUProgram(g,[s,o],"float32",v)}const Bpe={kernelName:up,backendName:"webgpu",kernelFunc:zpe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(t){const{inputs:e,backend:n,attrs:r}=t,{value:s}=e;let{axis:o}=r;o<0&&(o+=s.shape.length);const a=s,i=a.shape.length,u=s.shape[o],l=new Array(i-1);let c=0;for(let m=0;m<i;m++)m!==o&&(l[c++]=a.shape[m]);const d=[],p=new Array(i).fill(0),h=a.shape.slice();h[o]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[o]=m;const y=sl({inputs:{x:a},backend:n,attrs:{begin:p,size:h}}),g=pe({inputs:{x:y},backend:n,attrs:{shape:l}});f[m]=g,d.push(y)}return d.forEach(m=>n.disposeData(m.dataId)),f}const Vpe={kernelName:lp,backendName:"webgpu",kernelFunc:Mpe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wpe{constructor(e,n,r){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=n,this.dispatchLayout=le(e),this.dispatch=re(this.dispatchLayout,e,this.workgroupSize),r!=="float32"&&r!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${r} type.`);this.type=r,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${te("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${ko("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Upe(t){const{inputs:e,backend:n,attrs:r}=t,{x:s,segmentIds:o}=e,{numSegments:a}=r,i=s.shape.length,u=[];let l=0;const c=Ye([l],i);let d=s;c!=null&&(d=ns({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(d),l=Qe(1,i)[0]);const p=Ow(d.shape,l,a),h=L([d.shape[l]]),f=pe({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(f);const m=s.dtype,y=[f.shape[0],a],g=cn({backend:n,attrs:{shape:y,value:0,dtype:m}}),x=new Wpe(f.shape,y,m),w=[{type:"int32",data:[a]},{type:"int32",data:[L(f.shape)]}],v=n.runWebGPUProgram(x,[f,o],m,w,g),b=pe({inputs:{x:v},backend:n,attrs:{shape:p}});u.push(v);let S=b;if(c!=null){u.push(b);const $=ka(c);S=ns({inputs:{x:S},backend:n,attrs:{perm:$}})}return u.forEach($=>n.disposeData($.dataId)),S}const Gpe={kernelName:cp,backendName:"webgpu",kernelFunc:Upe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hpe=[goe,eae,nae,sae,aae,lae,gae,xae,vae,Cae,$ae,Iae,Tae,Rae,Dae,Lae,Bae,Uae,Hae,Kae,Zae,nie,oie,lie,die,mie,xoe,xie,Cie,Rie,Fie,Mie,Uie,Hie,Kie,Xie,Qie,eue,nue,sue,aue,lue,gue,xue,pue,bue,$ue,Tue,Rue,Pue,Lue,Bue,Vue,Uue,Hue,Kue,que,Yue,Zue,hoe,ele,ale,nle,sle,lle,dle,hle,gle,wle,ble,Sle,yoe,kle,vie,Nle,Ele,_le,Ple,Ole,Lle,Mle,Gle,Wle,jle,qle,Yle,ece,rce,Aae,oce,ice,mce,lce,hce,yce,Oae,wce,bce,Sce,kce,Rce,Aue,Dce,Ace,Fce,aie,Bce,Vce,Uce,jce,qce,Yce,Zce,ede,iie,nde,sde,ade,ude,foe,dde,fde,yde,vde,Sde,kde,Nde,Ede,_de,Ade,Lde,Bde,Vde,Ude,Hde,Kde,Yae,wpe,Cpe,$pe,Tce,Xde,Zde,rpe,ope,cpe,ppe,fpe,mpe,ype,Ipe,Oue,Tpe,Rpe,Dpe,upe,Fpe,Bpe,pae,Vpe,Gpe,Mce];for(const t of Hpe)hp(t);var f0={exports:{}},jpe=WS(QU),Kpe=WS(wW);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */(function(t,e){(function(n,r){r(e,jpe,Kpe)})(Ln,function(n,r,s){const o={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class a{constructor(u,l){this.modelPath=l||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(u)}/model.json`}getPrefix(u){return u==="lite_mobilenet_v2"?`ssd${u}`:`ssd_${u}`}async load(){this.model=await r.loadGraphModel(this.modelPath);const u=s.zeros([1,300,300,3],"int32"),l=await this.model.executeAsync(u);await Promise.all(l.map(c=>c.data())),l.map(c=>c.dispose()),u.dispose()}async infer(u,l,c){const d=s.tidy(()=>(u instanceof s.Tensor||(u=s.browser.fromPixels(u)),s.expandDims(u))),p=d.shape[1],h=d.shape[2],f=await this.model.executeAsync(d),m=f[0].dataSync(),y=f[1].dataSync();d.dispose(),s.dispose(f);const[g,x]=this.calculateMaxScores(m,f[0].shape[1],f[0].shape[2]),w=s.getBackend();s.getBackend()==="webgl"&&s.setBackend("cpu");const v=s.tidy(()=>{const S=s.tensor2d(y,[f[1].shape[1],f[1].shape[3]]);return s.image.nonMaxSuppression(S,g,l,c,c)}),b=v.dataSync();return v.dispose(),w!==s.getBackend()&&s.setBackend(w),this.buildDetectedObjects(h,p,y,g,b,x)}buildDetectedObjects(u,l,c,d,p,h){const f=p.length,m=[];for(let y=0;y<f;y++){const g=[];for(let S=0;S<4;S++)g[S]=c[4*p[y]+S];const x=g[0]*l,w=g[1]*u,v=g[2]*l,b=g[3]*u;g[0]=w,g[1]=x,g[2]=b-w,g[3]=v-x,m.push({bbox:g,class:o[h[p[y]]+1].displayName,score:d[p[y]]})}return m}calculateMaxScores(u,l,c){const d=[],p=[];for(let h=0;h<l;h++){let f=Number.MIN_VALUE,m=-1;for(let y=0;y<c;y++)u[h*c+y]>f&&(f=u[h*c+y],m=y);d[h]=f,p[h]=m}return[d,p]}async detect(u,l=20,c=.5){return this.infer(u,l,c)}dispose(){this.model!=null&&this.model.dispose()}}n.ObjectDetection=a,n.load=async function(i={}){if(s==null)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const u=i.base||"lite_mobilenet_v2",l=i.modelUrl;if(["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(u)===-1)throw new Error(`ObjectDetection constructed with invalid base model ${u}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const c=new a(u,l);return await c.load(),c},n.version="2.2.3",Object.defineProperty(n,"__esModule",{value:!0})})})(f0,f0.exports);function Vt(t){return`Minified Redux error #${t}; visit https://redux.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `}var qpe=(()=>typeof Symbol=="function"&&Symbol.observable||"@@observable")(),lS=qpe,Iy=()=>Math.random().toString(36).substring(7).split("").join("."),Xpe={INIT:`@@redux/INIT${Iy()}`,REPLACE:`@@redux/REPLACE${Iy()}`,PROBE_UNKNOWN_ACTION:()=>`@@redux/PROBE_UNKNOWN_ACTION${Iy()}`},Af=Xpe;function iv(t){if(typeof t!="object"||t===null)return!1;let e=t;for(;Object.getPrototypeOf(e)!==null;)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e||Object.getPrototypeOf(t)===null}function uv(t,e,n){if(typeof t!="function")throw new Error(Vt(2));if(typeof e=="function"&&typeof n=="function"||typeof n=="function"&&typeof arguments[3]=="function")throw new Error(Vt(0));if(typeof e=="function"&&typeof n=="undefined"&&(n=e,e=void 0),typeof n!="undefined"){if(typeof n!="function")throw new Error(Vt(1));return n(uv)(t,e)}let r=t,s=e,o=new Map,a=o,i=0,u=!1;function l(){a===o&&(a=new Map,o.forEach((y,g)=>{a.set(g,y)}))}function c(){if(u)throw new Error(Vt(3));return s}function d(y){if(typeof y!="function")throw new Error(Vt(4));if(u)throw new Error(Vt(5));let g=!0;l();const x=i++;return a.set(x,y),function(){if(!!g){if(u)throw new Error(Vt(6));g=!1,l(),a.delete(x),o=null}}}function p(y){if(!iv(y))throw new Error(Vt(7));if(typeof y.type=="undefined")throw new Error(Vt(8));if(typeof y.type!="string")throw new Error(Vt(17));if(u)throw new Error(Vt(9));try{u=!0,s=r(s,y)}finally{u=!1}return(o=a).forEach(x=>{x()}),y}function h(y){if(typeof y!="function")throw new Error(Vt(10));r=y,p({type:Af.REPLACE})}function f(){const y=d;return{subscribe(g){if(typeof g!="object"||g===null)throw new Error(Vt(11));function x(){const v=g;v.next&&v.next(c())}return x(),{unsubscribe:y(x)}},[lS](){return this}}}return p({type:Af.INIT}),{dispatch:p,subscribe:d,getState:c,replaceReducer:h,[lS]:f}}function Ype(t){Object.keys(t).forEach(e=>{const n=t[e];if(typeof n(void 0,{type:Af.INIT})=="undefined")throw new Error(Vt(12));if(typeof n(void 0,{type:Af.PROBE_UNKNOWN_ACTION()})=="undefined")throw new Error(Vt(13))})}function Qpe(t){const e=Object.keys(t),n={};for(let o=0;o<e.length;o++){const a=e[o];typeof t[a]=="function"&&(n[a]=t[a])}const r=Object.keys(n);let s;try{Ype(n)}catch(o){s=o}return function(a={},i){if(s)throw s;let u=!1;const l={};for(let c=0;c<r.length;c++){const d=r[c],p=n[d],h=a[d],f=p(h,i);if(typeof f=="undefined")throw i&&i.type,new Error(Vt(14));l[d]=f,u=u||f!==h}return u=u||r.length!==Object.keys(a).length,u?l:a}}function Of(...t){return t.length===0?e=>e:t.length===1?t[0]:t.reduce((e,n)=>(...r)=>e(n(...r)))}function Zpe(...t){return e=>(n,r)=>{const s=e(n,r);let o=()=>{throw new Error(Vt(15))};const a={getState:s.getState,dispatch:(u,...l)=>o(u,...l)},i=t.map(u=>u(a));return o=Of(...i)(s.dispatch),{...s,dispatch:o}}}function Jpe(t){return iv(t)&&"type"in t&&typeof t.type=="string"}var ehe=Object.defineProperty,cS=Object.getOwnPropertySymbols,the=Object.prototype.hasOwnProperty,nhe=Object.prototype.propertyIsEnumerable,dS=(t,e,n)=>e in t?ehe(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,rhe=(t,e)=>{for(var n in e||(e={}))the.call(e,n)&&dS(t,n,e[n]);if(cS)for(var n of cS(e))nhe.call(e,n)&&dS(t,n,e[n]);return t},W3=Symbol.for("immer-nothing"),pS=Symbol.for("immer-draftable"),jn=Symbol.for("immer-state");function kr(t,...e){throw new Error(`[Immer] minified error nr: ${t}. Full error at: https://bit.ly/3cXEKWf`)}var zi=Object.getPrototypeOf;function po(t){return!!t&&!!t[jn]}function Is(t){var e;return t?U3(t)||Array.isArray(t)||!!t[pS]||!!((e=t.constructor)!=null&&e[pS])||Eg(t)||Rg(t):!1}var she=Object.prototype.constructor.toString();function U3(t){if(!t||typeof t!="object")return!1;const e=zi(t);if(e===null)return!0;const n=Object.hasOwnProperty.call(e,"constructor")&&e.constructor;return n===Object?!0:typeof n=="function"&&Function.toString.call(n)===she}function bc(t,e){Tg(t)===0?Object.entries(t).forEach(([n,r])=>{e(n,r,t)}):t.forEach((n,r)=>e(r,n,t))}function Tg(t){const e=t[jn];return e?e.type_:Array.isArray(t)?1:Eg(t)?2:Rg(t)?3:0}function m0(t,e){return Tg(t)===2?t.has(e):Object.prototype.hasOwnProperty.call(t,e)}function G3(t,e,n){const r=Tg(t);r===2?t.set(e,n):r===3?t.add(n):t[e]=n}function ohe(t,e){return t===e?t!==0||1/t===1/e:t!==t&&e!==e}function Eg(t){return t instanceof Map}function Rg(t){return t instanceof Set}function Ao(t){return t.copy_||t.base_}function g0(t,e){if(Eg(t))return new Map(t);if(Rg(t))return new Set(t);if(Array.isArray(t))return Array.prototype.slice.call(t);if(!e&&U3(t))return zi(t)?rhe({},t):Object.assign(Object.create(null),t);const n=Object.getOwnPropertyDescriptors(t);delete n[jn];let r=Reflect.ownKeys(n);for(let s=0;s<r.length;s++){const o=r[s],a=n[o];a.writable===!1&&(a.writable=!0,a.configurable=!0),(a.get||a.set)&&(n[o]={configurable:!0,writable:!0,enumerable:a.enumerable,value:t[o]})}return Object.create(zi(t),n)}function lv(t,e=!1){return _g(t)||po(t)||!Is(t)||(Tg(t)>1&&(t.set=t.add=t.clear=t.delete=ahe),Object.freeze(t),e&&bc(t,(n,r)=>lv(r,!0))),t}function ahe(){kr(2)}function _g(t){return Object.isFrozen(t)}var ihe={};function ga(t){const e=ihe[t];return e||kr(0,t),e}var Cc;function H3(){return Cc}function uhe(t,e){return{drafts_:[],parent_:t,immer_:e,canAutoFreeze_:!0,unfinalizedDrafts_:0}}function hS(t,e){e&&(ga("Patches"),t.patches_=[],t.inversePatches_=[],t.patchListener_=e)}function y0(t){x0(t),t.drafts_.forEach(lhe),t.drafts_=null}function x0(t){t===Cc&&(Cc=t.parent_)}function fS(t){return Cc=uhe(Cc,t)}function lhe(t){const e=t[jn];e.type_===0||e.type_===1?e.revoke_():e.revoked_=!0}function mS(t,e){e.unfinalizedDrafts_=e.drafts_.length;const n=e.drafts_[0];return t!==void 0&&t!==n?(n[jn].modified_&&(y0(e),kr(4)),Is(t)&&(t=Ff(e,t),e.parent_||Lf(e,t)),e.patches_&&ga("Patches").generateReplacementPatches_(n[jn].base_,t,e.patches_,e.inversePatches_)):t=Ff(e,n,[]),y0(e),e.patches_&&e.patchListener_(e.patches_,e.inversePatches_),t!==W3?t:void 0}function Ff(t,e,n){if(_g(e))return e;const r=e[jn];if(!r)return bc(e,(s,o)=>gS(t,r,e,s,o,n)),e;if(r.scope_!==t)return e;if(!r.modified_)return Lf(t,r.base_,!0),r.base_;if(!r.finalized_){r.finalized_=!0,r.scope_.unfinalizedDrafts_--;const s=r.copy_;let o=s,a=!1;r.type_===3&&(o=new Set(s),s.clear(),a=!0),bc(o,(i,u)=>gS(t,r,s,i,u,n,a)),Lf(t,s,!1),n&&t.patches_&&ga("Patches").generatePatches_(r,n,t.patches_,t.inversePatches_)}return r.copy_}function gS(t,e,n,r,s,o,a){if(po(s)){const i=o&&e&&e.type_!==3&&!m0(e.assigned_,r)?o.concat(r):void 0,u=Ff(t,s,i);if(G3(n,r,u),po(u))t.canAutoFreeze_=!1;else return}else a&&n.add(s);if(Is(s)&&!_g(s)){if(!t.immer_.autoFreeze_&&t.unfinalizedDrafts_<1)return;Ff(t,s),(!e||!e.scope_.parent_)&&Lf(t,s)}}function Lf(t,e,n=!1){!t.parent_&&t.immer_.autoFreeze_&&t.canAutoFreeze_&&lv(e,n)}function che(t,e){const n=Array.isArray(t),r={type_:n?1:0,scope_:e?e.scope_:H3(),modified_:!1,finalized_:!1,assigned_:{},parent_:e,base_:t,draft_:null,copy_:null,revoke_:null,isManual_:!1};let s=r,o=cv;n&&(s=[r],o=Sc);const{revoke:a,proxy:i}=Proxy.revocable(s,o);return r.draft_=i,r.revoke_=a,i}var cv={get(t,e){if(e===jn)return t;const n=Ao(t);if(!m0(n,e))return dhe(t,n,e);const r=n[e];return t.finalized_||!Is(r)?r:r===Ny(t.base_,e)?(Ty(t),t.copy_[e]=v0(r,t)):r},has(t,e){return e in Ao(t)},ownKeys(t){return Reflect.ownKeys(Ao(t))},set(t,e,n){const r=j3(Ao(t),e);if(r!=null&&r.set)return r.set.call(t.draft_,n),!0;if(!t.modified_){const s=Ny(Ao(t),e),o=s==null?void 0:s[jn];if(o&&o.base_===n)return t.copy_[e]=n,t.assigned_[e]=!1,!0;if(ohe(n,s)&&(n!==void 0||m0(t.base_,e)))return!0;Ty(t),w0(t)}return t.copy_[e]===n&&(n!==void 0||e in t.copy_)||Number.isNaN(n)&&Number.isNaN(t.copy_[e])||(t.copy_[e]=n,t.assigned_[e]=!0),!0},deleteProperty(t,e){return Ny(t.base_,e)!==void 0||e in t.base_?(t.assigned_[e]=!1,Ty(t),w0(t)):delete t.assigned_[e],t.copy_&&delete t.copy_[e],!0},getOwnPropertyDescriptor(t,e){const n=Ao(t),r=Reflect.getOwnPropertyDescriptor(n,e);return r&&{writable:!0,configurable:t.type_!==1||e!=="length",enumerable:r.enumerable,value:n[e]}},defineProperty(){kr(11)},getPrototypeOf(t){return zi(t.base_)},setPrototypeOf(){kr(12)}},Sc={};bc(cv,(t,e)=>{Sc[t]=function(){return arguments[0]=arguments[0][0],e.apply(this,arguments)}});Sc.deleteProperty=function(t,e){return Sc.set.call(this,t,e,void 0)};Sc.set=function(t,e,n){return cv.set.call(this,t[0],e,n,t[0])};function Ny(t,e){const n=t[jn];return(n?Ao(n):t)[e]}function dhe(t,e,n){var r;const s=j3(e,n);return s?"value"in s?s.value:(r=s.get)==null?void 0:r.call(t.draft_):void 0}function j3(t,e){if(!(e in t))return;let n=zi(t);for(;n;){const r=Object.getOwnPropertyDescriptor(n,e);if(r)return r;n=zi(n)}}function w0(t){t.modified_||(t.modified_=!0,t.parent_&&w0(t.parent_))}function Ty(t){t.copy_||(t.copy_=g0(t.base_,t.scope_.immer_.useStrictShallowCopy_))}var phe=class{constructor(t){this.autoFreeze_=!0,this.useStrictShallowCopy_=!1,this.produce=(e,n,r)=>{if(typeof e=="function"&&typeof n!="function"){const o=n;n=e;const a=this;return function(u=o,...l){return a.produce(u,c=>n.call(this,c,...l))}}typeof n!="function"&&kr(6),r!==void 0&&typeof r!="function"&&kr(7);let s;if(Is(e)){const o=fS(this),a=v0(e,void 0);let i=!0;try{s=n(a),i=!1}finally{i?y0(o):x0(o)}return hS(o,r),mS(s,o)}else if(!e||typeof e!="object"){if(s=n(e),s===void 0&&(s=e),s===W3&&(s=void 0),this.autoFreeze_&&lv(s,!0),r){const o=[],a=[];ga("Patches").generateReplacementPatches_(e,s,o,a),r(o,a)}return s}else kr(1,e)},this.produceWithPatches=(e,n)=>{if(typeof e=="function")return(a,...i)=>this.produceWithPatches(a,u=>e(u,...i));let r,s;return[this.produce(e,n,(a,i)=>{r=a,s=i}),r,s]},typeof(t==null?void 0:t.autoFreeze)=="boolean"&&this.setAutoFreeze(t.autoFreeze),typeof(t==null?void 0:t.useStrictShallowCopy)=="boolean"&&this.setUseStrictShallowCopy(t.useStrictShallowCopy)}createDraft(t){Is(t)||kr(8),po(t)&&(t=K3(t));const e=fS(this),n=v0(t,void 0);return n[jn].isManual_=!0,x0(e),n}finishDraft(t,e){const n=t&&t[jn];(!n||!n.isManual_)&&kr(9);const{scope_:r}=n;return hS(r,e),mS(void 0,r)}setAutoFreeze(t){this.autoFreeze_=t}setUseStrictShallowCopy(t){this.useStrictShallowCopy_=t}applyPatches(t,e){let n;for(n=e.length-1;n>=0;n--){const s=e[n];if(s.path.length===0&&s.op==="replace"){t=s.value;break}}n>-1&&(e=e.slice(n+1));const r=ga("Patches").applyPatches_;return po(t)?r(t,e):this.produce(t,s=>r(s,e))}};function v0(t,e){const n=Eg(t)?ga("MapSet").proxyMap_(t,e):Rg(t)?ga("MapSet").proxySet_(t,e):che(t,e);return(e?e.scope_:H3()).drafts_.push(n),n}function K3(t){return po(t)||kr(10,t),q3(t)}function q3(t){if(!Is(t)||_g(t))return t;const e=t[jn];let n;if(e){if(!e.modified_)return e.base_;e.finalized_=!0,n=g0(t,e.scope_.immer_.useStrictShallowCopy_)}else n=g0(t,!0);return bc(n,(r,s)=>{G3(n,r,q3(s))}),e&&(e.finalized_=!1),n}var Kn=new phe,X3=Kn.produce;Kn.produceWithPatches.bind(Kn);Kn.setAutoFreeze.bind(Kn);Kn.setUseStrictShallowCopy.bind(Kn);Kn.applyPatches.bind(Kn);Kn.createDraft.bind(Kn);Kn.finishDraft.bind(Kn);var hhe=Object.defineProperty,yS=Object.getOwnPropertySymbols,fhe=Object.prototype.hasOwnProperty,mhe=Object.prototype.propertyIsEnumerable,xS=(t,e,n)=>e in t?hhe(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,wS=(t,e)=>{for(var n in e||(e={}))fhe.call(e,n)&&xS(t,n,e[n]);if(yS)for(var n of yS(e))mhe.call(e,n)&&xS(t,n,e[n]);return t};function ghe(t,e=`expected a function, instead received ${typeof t}`){if(typeof t!="function")throw new TypeError(e)}function yhe(t,e="expected all items to be functions, instead received the following types: "){if(!t.every(n=>typeof n=="function")){const n=t.map(r=>typeof r=="function"?`function ${r.name||"unnamed"}()`:typeof r).join(", ");throw new TypeError(`${e}[${n}]`)}}var vS=t=>Array.isArray(t)?t:[t];function xhe(t){const e=Array.isArray(t[0])?t[0]:t;return yhe(e,"createSelector expects all input-selectors to be functions, but received the following types: "),e}function whe(t,e){const n=[],{length:r}=t;for(let s=0;s<r;s++)n.push(t[s].apply(null,e));return n}var vhe=class{constructor(t){this.value=t}deref(){return this.value}},bhe=typeof WeakRef!="undefined"?WeakRef:vhe,Che=0,bS=1;function uh(){return{s:Che,v:void 0,o:null,p:null}}function Y3(t,e={}){let n=uh();const{resultEqualityCheck:r}=e;let s,o=0;function a(){var i;let u=n;const{length:l}=arguments;for(let p=0,h=l;p<h;p++){const f=arguments[p];if(typeof f=="function"||typeof f=="object"&&f!==null){let m=u.o;m===null&&(u.o=m=new WeakMap);const y=m.get(f);y===void 0?(u=uh(),m.set(f,u)):u=y}else{let m=u.p;m===null&&(u.p=m=new Map);const y=m.get(f);y===void 0?(u=uh(),m.set(f,u)):u=y}}const c=u;let d;if(u.s===bS?d=u.v:(d=t.apply(null,arguments),o++),c.s=bS,r){const p=(i=s==null?void 0:s.deref())!=null?i:s;p!=null&&r(p,d)&&(d=p,o!==0&&o--),s=typeof d=="object"&&d!==null||typeof d=="function"?new bhe(d):d}return c.v=d,d}return a.clearCache=()=>{n=uh(),a.resetResultsCount()},a.resultsCount=()=>o,a.resetResultsCount=()=>{o=0},a}function She(t,...e){const n=typeof t=="function"?{memoize:t,memoizeOptions:e}:t;return(...s)=>{let o=0,a=0,i,u={},l=s.pop();typeof l=="object"&&(u=l,l=s.pop()),ghe(l,`createSelector expects an output function after the inputs, but received: [${typeof l}]`);const c=wS(wS({},n),u),{memoize:d,memoizeOptions:p=[],argsMemoize:h=Y3,argsMemoizeOptions:f=[],devModeChecks:m={}}=c,y=vS(p),g=vS(f),x=xhe(s),w=d(function(){return o++,l.apply(null,arguments)},...y),v=h(function(){a++;const S=whe(x,arguments);return i=w.apply(null,S),i},...g);return Object.assign(v,{resultFunc:l,memoizedResultFunc:w,dependencies:x,dependencyRecomputations:()=>a,resetDependencyRecomputations:()=>{a=0},lastResult:()=>i,recomputations:()=>o,resetRecomputations:()=>{o=0},memoize:d,argsMemoize:h})}}function Q3(t){return({dispatch:n,getState:r})=>s=>o=>typeof o=="function"?o(n,r,t):s(o)}var $he=Q3(),khe=Q3,Ihe=(...t)=>{const e=She(...t);return(...n)=>{const r=e(...n),s=(o,...a)=>r(po(o)?K3(o):o,...a);return Object.assign(s,r),s}};Ihe(Y3);var Nhe=typeof window!="undefined"&&window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__?window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__:function(){if(arguments.length!==0)return typeof arguments[0]=="object"?Of:Of.apply(null,arguments)};function $c(t,e){function n(...r){if(e){let s=e(...r);if(!s)throw new Error(Ar(0));return{type:t,payload:s.payload,..."meta"in s&&{meta:s.meta},..."error"in s&&{error:s.error}}}return{type:t,payload:r[0]}}return n.toString=()=>`${t}`,n.type=t,n.match=r=>Jpe(r)&&r.type===t,n}var Z3=class kl extends Array{constructor(...e){super(...e),Object.setPrototypeOf(this,kl.prototype)}static get[Symbol.species](){return kl}concat(...e){return super.concat.apply(this,e)}prepend(...e){return e.length===1&&Array.isArray(e[0])?new kl(...e[0].concat(this)):new kl(...e.concat(this))}};function CS(t){return Is(t)?X3(t,()=>{}):t}function SS(t,e,n){if(t.has(e)){let s=t.get(e);return n.update&&(s=n.update(s,e,t),t.set(e,s)),s}if(!n.insert)throw new Error(Ar(10));const r=n.insert(e,t);return t.set(e,r),r}function The(t){return typeof t=="boolean"}var Ehe=()=>function(e){const{thunk:n=!0,immutableCheck:r=!0,serializableCheck:s=!0,actionCreatorCheck:o=!0}=e!=null?e:{};let a=new Z3;return n&&(The(n)?a.push($he):a.push(khe(n.extraArgument))),a},Rhe="RTK_autoBatch",J3=t=>e=>{setTimeout(e,t)},_he=typeof window!="undefined"&&window.requestAnimationFrame?window.requestAnimationFrame:J3(10),Dhe=(t={type:"raf"})=>e=>(...n)=>{const r=e(...n);let s=!0,o=!1,a=!1;const i=new Set,u=t.type==="tick"?queueMicrotask:t.type==="raf"?_he:t.type==="callback"?t.queueNotification:J3(t.timeout),l=()=>{a=!1,o&&(o=!1,i.forEach(c=>c()))};return Object.assign({},r,{subscribe(c){const d=()=>s&&c(),p=r.subscribe(d);return i.add(c),()=>{p(),i.delete(c)}},dispatch(c){var d;try{return s=!((d=c==null?void 0:c.meta)!=null&&d[Rhe]),o=!s,o&&(a||(a=!0,u(l))),r.dispatch(c)}finally{s=!0}}})},Phe=t=>function(n){const{autoBatch:r=!0}=n!=null?n:{};let s=new Z3(t);return r&&s.push(Dhe(typeof r=="object"?r:void 0)),s},Ahe=!0;function Ohe(t){const e=Ehe(),{reducer:n=void 0,middleware:r,devTools:s=!0,preloadedState:o=void 0,enhancers:a=void 0}=t||{};let i;if(typeof n=="function")i=n;else if(iv(n))i=Qpe(n);else throw new Error(Ar(1));let u;typeof r=="function"?u=r(e):u=e();let l=Of;s&&(l=Nhe({trace:!Ahe,...typeof s=="object"&&s}));const c=Zpe(...u),d=Phe(c);let p=typeof a=="function"?a(d):d();const h=l(...p);return uv(i,o,h)}function e_(t){const e={},n=[];let r;const s={addCase(o,a){const i=typeof o=="string"?o:o.type;if(!i)throw new Error(Ar(28));if(i in e)throw new Error(Ar(29));return e[i]=a,s},addMatcher(o,a){return n.push({matcher:o,reducer:a}),s},addDefaultCase(o){return r=o,s}};return t(s),[e,n,r]}function Fhe(t){return typeof t=="function"}function Lhe(t,e){let[n,r,s]=e_(e),o;if(Fhe(t))o=()=>CS(t());else{const i=CS(t);o=()=>i}function a(i=o(),u){let l=[n[u.type],...r.filter(({matcher:c})=>c(u)).map(({reducer:c})=>c)];return l.filter(c=>!!c).length===0&&(l=[s]),l.reduce((c,d)=>{if(d)if(po(c)){const h=d(c,u);return h===void 0?c:h}else{if(Is(c))return X3(c,p=>d(p,u));{const p=d(c,u);if(p===void 0){if(c===null)return c;throw new Error(Ar(9))}return p}}return c},i)}return a.getInitialState=o,a}var zhe=Symbol.for("rtk-slice-createasyncthunk");function Bhe(t,e){return`${t}/${e}`}function Mhe({creators:t}={}){var n;const e=(n=t==null?void 0:t.asyncThunk)==null?void 0:n[zhe];return function(s){const{name:o,reducerPath:a=o}=s;if(!o)throw new Error(Ar(11));const i=(typeof s.reducers=="function"?s.reducers(Uhe()):s.reducers)||{},u=Object.keys(i),l={sliceCaseReducersByName:{},sliceCaseReducersByType:{},actionCreators:{},sliceMatchers:[]},c={addCase(y,g){const x=typeof y=="string"?y:y.type;if(!x)throw new Error(Ar(12));if(x in l.sliceCaseReducersByType)throw new Error(Ar(13));return l.sliceCaseReducersByType[x]=g,c},addMatcher(y,g){return l.sliceMatchers.push({matcher:y,reducer:g}),c},exposeAction(y,g){return l.actionCreators[y]=g,c},exposeCaseReducer(y,g){return l.sliceCaseReducersByName[y]=g,c}};u.forEach(y=>{const g=i[y],x={reducerName:y,type:Bhe(o,y),createNotation:typeof s.reducers=="function"};Hhe(g)?Khe(x,g,c,e):Ghe(x,g,c)});function d(){const[y={},g=[],x=void 0]=typeof s.extraReducers=="function"?e_(s.extraReducers):[s.extraReducers],w={...y,...l.sliceCaseReducersByType};return Lhe(s.initialState,v=>{for(let b in w)v.addCase(b,w[b]);for(let b of l.sliceMatchers)v.addMatcher(b.matcher,b.reducer);for(let b of g)v.addMatcher(b.matcher,b.reducer);x&&v.addDefaultCase(x)})}const p=y=>y,h=new WeakMap;let f;const m={name:o,reducerPath:a,reducer(y,g){return f||(f=d()),f(y,g)},actions:l.actionCreators,caseReducers:l.sliceCaseReducersByName,getInitialState(){return f||(f=d()),f.getInitialState()},getSelectors(y=p){const g=SS(h,this,{insert:()=>new WeakMap});return SS(g,y,{insert:()=>{var w;const x={};for(const[v,b]of Object.entries((w=s.selectors)!=null?w:{}))x[v]=Vhe(this,b,y,this!==m);return x}})},selectSlice(y){let g=y[this.reducerPath];return typeof g=="undefined"&&this!==m&&(g=this.getInitialState()),g},get selectors(){return this.getSelectors(this.selectSlice)},injectInto(y,{reducerPath:g,...x}={}){const w=g!=null?g:this.reducerPath;return y.inject({reducerPath:w,reducer:this.reducer},x),{...this,reducerPath:w}}};return m}}function Vhe(t,e,n,r){function s(o,...a){let i=n.call(t,o);return typeof i=="undefined"&&r&&(i=t.getInitialState()),e(i,...a)}return s.unwrapped=e,s}var Whe=Mhe();function Uhe(){function t(e,n){return{_reducerDefinitionType:"asyncThunk",payloadCreator:e,...n}}return t.withTypes=()=>t,{reducer(e){return Object.assign({[e.name](...n){return e(...n)}}[e.name],{_reducerDefinitionType:"reducer"})},preparedReducer(e,n){return{_reducerDefinitionType:"reducerWithPrepare",prepare:e,reducer:n}},asyncThunk:t}}function Ghe({type:t,reducerName:e,createNotation:n},r,s){let o,a;if("reducer"in r){if(n&&!jhe(r))throw new Error(Ar(17));o=r.reducer,a=r.prepare}else o=r;s.addCase(t,o).exposeCaseReducer(e,o).exposeAction(e,a?$c(t,a):$c(t))}function Hhe(t){return t._reducerDefinitionType==="asyncThunk"}function jhe(t){return t._reducerDefinitionType==="reducerWithPrepare"}function Khe({type:t,reducerName:e},n,r,s){if(!s)throw new Error(Ar(18));const{payloadCreator:o,fulfilled:a,pending:i,rejected:u,settled:l,options:c}=n,d=s(t,o,c);r.exposeAction(e,d),a&&r.addCase(d.fulfilled,a),i&&r.addCase(d.pending,i),u&&r.addCase(d.rejected,u),l&&r.addMatcher(d.settled,l),r.exposeCaseReducer(e,{fulfilled:a||lh,pending:i||lh,rejected:u||lh,settled:l||lh})}function lh(){}var dv="listenerMiddleware";$c(`${dv}/add`);$c(`${dv}/removeAll`);$c(`${dv}/remove`);function Ar(t){return`Minified Redux Toolkit error #${t}; visit https://redux-toolkit.js.org/Errors?code=${t} for the full message or use the non-minified dev environment for full errors. `}const $S={toast:{},toasts:[]},t_=Whe({name:"home",initialState:$S,reducers:{addToast:(t,{payload:{id:e,message:n,toastType:r,payload:s,isActive:o,headerText:a,timestamp:i,toastOwner:u}})=>{try{let l={id:e,message:n,toastType:r,payload:s,isActive:o,headerText:a,timestamp:i,toastOwner:u};console.log("newToast: ",l),t.toast=l,console.log("[ADDED NEW TOAST]: ",l)}catch(l){console.error(l)}},deleteToast:(t,{payload:{toastId:e}})=>{try{console.log("delete toast: ",e),t.toast=$S.toast,console.log("[DELETED TOAST]: ",e)}catch(n){console.error(n)}},editToast:(t,{payload:{editedToast:e}})=>{try{console.log("editedToast: ",e),t.toast=e,console.log("[UPDATED TOAST]: ",e)}catch(n){console.error(n)}}}}),{addToast:kS,deleteToast:Dg,editToast:Fme}=t_.actions;var qhe=t_.reducer,n_={exports:{}},r_={};/**
 * @license React
 * use-sync-external-store-with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Pp=oe.exports;function Xhe(t,e){return t===e&&(t!==0||1/t===1/e)||t!==t&&e!==e}var Yhe=typeof Object.is=="function"?Object.is:Xhe,Qhe=Pp.useSyncExternalStore,Zhe=Pp.useRef,Jhe=Pp.useEffect,efe=Pp.useMemo,tfe=Pp.useDebugValue;r_.useSyncExternalStoreWithSelector=function(t,e,n,r,s){var o=Zhe(null);if(o.current===null){var a={hasValue:!1,value:null};o.current=a}else a=o.current;o=efe(function(){function u(h){if(!l){if(l=!0,c=h,h=r(h),s!==void 0&&a.hasValue){var f=a.value;if(s(f,h))return d=f}return d=h}if(f=d,Yhe(c,h))return f;var m=r(h);return s!==void 0&&s(f,m)?f:(c=h,d=m)}var l=!1,c,d,p=n===void 0?null:n;return[function(){return u(e())},p===null?void 0:function(){return u(p())}]},[e,n,r,s]);var i=Qhe(t,o[0],o[1]);return Jhe(function(){a.hasValue=!0,a.value=i},[i]),tfe(i),i};n_.exports=r_;var Wn="default"in Ph?X:Ph,IS=Symbol.for("react-redux-context"),NS=typeof globalThis!="undefined"?globalThis:{};function nfe(){var t;if(!Wn.createContext)return{};const e=(t=NS[IS])!=null?t:NS[IS]=new Map;let n=e.get(Wn.createContext);return n||(n=Wn.createContext(null),e.set(Wn.createContext,n)),n}var ho=nfe(),rfe=()=>{throw new Error("uSES not initialized!")};function pv(t=ho){return function(){return Wn.useContext(t)}}var s_=pv(),o_=rfe,sfe=t=>{o_=t},ofe=(t,e)=>t===e;function afe(t=ho){const e=t===ho?s_:pv(t);return function(r,s={}){const{equalityFn:o=ofe,devModeChecks:a={}}=typeof s=="function"?{equalityFn:s}:s,{store:i,subscription:u,getServerState:l,stabilityCheck:c,identityFunctionCheck:d}=e();Wn.useRef(!0);const p=Wn.useCallback({[r.name](f){return r(f)}}[r.name],[r,c,a.stabilityCheck]),h=o_(u.addNestedSub,i.getState,l||i.getState,p,o);return Wn.useDebugValue(h),h}}var ife=afe();function ufe(t){t()}function lfe(){let t=null,e=null;return{clear(){t=null,e=null},notify(){ufe(()=>{let n=t;for(;n;)n.callback(),n=n.next})},get(){let n=[],r=t;for(;r;)n.push(r),r=r.next;return n},subscribe(n){let r=!0,s=e={callback:n,next:null,prev:e};return s.prev?s.prev.next=s:t=s,function(){!r||t===null||(r=!1,s.next?s.next.prev=s.prev:e=s.prev,s.prev?s.prev.next=s.next:t=s.next)}}}}var TS={notify(){},get:()=>[]};function cfe(t,e){let n,r=TS,s=0,o=!1;function a(m){c();const y=r.subscribe(m);let g=!1;return()=>{g||(g=!0,y(),d())}}function i(){r.notify()}function u(){f.onStateChange&&f.onStateChange()}function l(){return o}function c(){s++,n||(n=e?e.addNestedSub(u):t.subscribe(u),r=lfe())}function d(){s--,n&&s===0&&(n(),n=void 0,r.clear(),r=TS)}function p(){o||(o=!0,c())}function h(){o&&(o=!1,d())}const f={addNestedSub:a,notifyNestedSubs:i,handleChangeWrapper:u,isSubscribed:l,trySubscribe:p,tryUnsubscribe:h,getListeners:()=>r};return f}var dfe=typeof window!="undefined"&&typeof window.document!="undefined"&&typeof window.document.createElement!="undefined",pfe=dfe?Wn.useLayoutEffect:Wn.useEffect;function hfe({store:t,context:e,children:n,serverState:r,stabilityCheck:s="once",identityFunctionCheck:o="once"}){const a=Wn.useMemo(()=>{const l=cfe(t);return{store:t,subscription:l,getServerState:r?()=>r:void 0,stabilityCheck:s,identityFunctionCheck:o}},[t,r,s,o]),i=Wn.useMemo(()=>t.getState(),[t]);pfe(()=>{const{subscription:l}=a;return l.onStateChange=l.notifyNestedSubs,l.trySubscribe(),i!==t.getState()&&l.notifyNestedSubs(),()=>{l.tryUnsubscribe(),l.onStateChange=void 0}},[a,i]);const u=e||ho;return Wn.createElement(u.Provider,{value:a},n)}var ffe=hfe;function a_(t=ho){const e=t===ho?s_:pv(t);return function(){const{store:r}=e();return r}}var mfe=a_();function gfe(t=ho){const e=t===ho?mfe:a_(t);return function(){return e().dispatch}}var Pg=gfe();sfe(n_.exports.useSyncExternalStoreWithSelector);var yfe=["second","minute","hour","day","week","month","year"];function xfe(t,e){if(e===0)return["just now","right now"];var n=yfe[Math.floor(e/2)];return t>1&&(n+="s"),[t+" "+n+" ago","in "+t+" "+n]}var wfe=["\u79D2","\u5206\u949F","\u5C0F\u65F6","\u5929","\u5468","\u4E2A\u6708","\u5E74"];function vfe(t,e){if(e===0)return["\u521A\u521A","\u7247\u523B\u540E"];var n=wfe[~~(e/2)];return[t+" "+n+"\u524D",t+" "+n+"\u540E"]}var b0={},i_=function(t,e){b0[t]=e},u_=function(t){return b0[t]||b0.en_US},jo=[60,60,24,7,365/7/12,12];function ES(t){return t instanceof Date?t:!isNaN(t)||/^\d+$/.test(t)?new Date(parseInt(t)):(t=(t||"").trim().replace(/\.\d+/,"").replace(/-/,"/").replace(/-/,"/").replace(/(\d)T(\d)/,"$1 $2").replace(/Z/," UTC").replace(/([+-]\d\d):?(\d\d)/," $1$2"),new Date(t))}function l_(t,e){var n=t<0?1:0;t=Math.abs(t);for(var r=t,s=0;t>=jo[s]&&s<jo.length;s++)t/=jo[s];return t=Math.floor(t),s*=2,t>(s===0?9:1)&&(s+=1),e(t,s,r)[n].replace("%s",t.toString())}function c_(t,e){var n=e?ES(e):new Date;return(+n-+ES(t))/1e3}function bfe(t){for(var e=1,n=0,r=Math.abs(t);t>=jo[n]&&n<jo.length;n++)t/=jo[n],e*=jo[n];return r=r%e,r=r?e-r:e,Math.ceil(r)}var Cfe=function(t,e,n){var r=c_(t,n&&n.relativeDate);return l_(r,u_(e))},d_="timeago-id";function Sfe(t){return t.getAttribute("datetime")}function $fe(t,e){t.setAttribute(d_,e)}function p_(t){return parseInt(t.getAttribute(d_))}var hv={},C0=function(t){clearTimeout(t),delete hv[t]};function h_(t,e,n,r){C0(p_(t));var s=r.relativeDate,o=r.minInterval,a=c_(e,s);t.innerText=l_(a,n);var i=setTimeout(function(){h_(t,e,n,r)},Math.min(Math.max(bfe(a),o||1)*1e3,2147483647));hv[i]=0,$fe(t,i)}function RS(t){t?C0(p_(t)):Object.keys(hv).forEach(C0)}function kfe(t,e,n){var r=t.length?t:[t];return r.forEach(function(s){h_(s,Sfe(s),u_(e),n||{})}),r}i_("en_US",xfe);i_("zh_CN",vfe);var Ife=globalThis&&globalThis.__extends||function(){var t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(r,s){r.__proto__=s}||function(r,s){for(var o in s)s.hasOwnProperty(o)&&(r[o]=s[o])},t(e,n)};return function(e,n){t(e,n);function r(){this.constructor=e}e.prototype=n===null?Object.create(n):(r.prototype=n.prototype,new r)}}(),S0=globalThis&&globalThis.__assign||function(){return S0=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){e=arguments[n];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s])}return t},S0.apply(this,arguments)},Nfe=globalThis&&globalThis.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]]);return n},Tfe=function(t){return""+(t instanceof Date?t.getTime():t)},Ag=function(t){Ife(e,t);function e(){var n=t!==null&&t.apply(this,arguments)||this;return n.dom=null,n}return e.prototype.componentDidMount=function(){this.renderTimeAgo()},e.prototype.componentDidUpdate=function(){this.renderTimeAgo()},e.prototype.renderTimeAgo=function(){var n=this.props,r=n.live,s=n.datetime,o=n.locale,a=n.opts;RS(this.dom),r!==!1&&(this.dom.setAttribute("datetime",Tfe(s)),kfe(this.dom,o,a))},e.prototype.componentWillUnmount=function(){RS(this.dom)},e.prototype.render=function(){var n=this,r=this.props,s=r.datetime;r.live;var o=r.locale,a=r.opts,i=Nfe(r,["datetime","live","locale","opts"]);return oe.exports.createElement("time",S0({ref:function(u){n.dom=u}},i),Cfe(s,o,a))},e.defaultProps={live:!0,className:""},e}(oe.exports.PureComponent);const Efe=({message:t,id:e,timestamp:n})=>{const r=Pg(),s=()=>{try{r(Dg({toastId:e}));const o=document.getElementById("dangerToast");o&&o.classList.toggle("hidden")}catch(o){console.error(o)}};return X.createElement("div",{id:"dangerToast",className:"flex items-center max-w-md p-4 mb-4 text-gray-500 bg-white rounded-lg shadow",role:"alert"},X.createElement("div",{className:"inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-red-500 bg-red-100 rounded-lg"},X.createElement("svg",{className:"w-5 h-5","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 20 20"},X.createElement("path",{d:"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 11.793a1 1 0 1 1-1.414 1.414L10 11.414l-2.293 2.293a1 1 0 0 1-1.414-1.414L8.586 10 6.293 7.707a1 1 0 0 1 1.414-1.414L10 8.586l2.293-2.293a1 1 0 0 1 1.414 1.414L11.414 10l2.293 2.293Z"})),X.createElement("span",{className:"sr-only"},"Error icon")),X.createElement("div",{className:"ms-3 text-sm font-normal"},t),"\xA0",X.createElement("span",{className:"text-xs font-medium text-orange-600"},X.createElement(Ag,{datetime:n})),X.createElement("button",{type:"button",onClick:s,className:"ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8","data-dismiss-target":"#toast-danger","aria-label":"Close"},X.createElement("span",{className:"sr-only"},"Close"),X.createElement("svg",{className:"w-3 h-3","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 14 14"},X.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"}))))},Rfe=({message:t,id:e,timestamp:n})=>{const r=Pg(),s=()=>{try{r(Dg({toastId:e}));const o=document.getElementById("toastSuccess");o&&o.classList.toggle("hidden")}catch(o){console.error(o)}};return X.createElement("div",{id:`toast_${e}`,className:"flex items-center max-w-md p-3 mb-4 text-gray-500 bg-white rounded-lg shadow",role:"alert"},X.createElement("div",{className:"inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-green-500 bg-green-100 rounded-lg"},X.createElement("svg",{className:"w-5 h-5","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 20 20"},X.createElement("path",{d:"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5Zm3.707 8.207-4 4a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L9 10.586l3.293-3.293a1 1 0 0 1 1.414 1.414Z"})),X.createElement("span",{className:"sr-only"},"Check icon")),X.createElement("div",{className:"ms-3 text-sm font-normal"},t),"\xA0",X.createElement("span",{className:"text-xs font-medium text-orange-600"},X.createElement(Ag,{datetime:n})),X.createElement("button",{type:"button",onClick:s,className:"ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8 dark:text-gray-500 dark:hover:text-white dark:bg-gray-800 dark:hover:bg-gray-700","data-dismiss-target":"#toast-success","aria-label":"Close"},X.createElement("span",{className:"sr-only"},"Close"),X.createElement("svg",{className:"w-3 h-3","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 14 14"},X.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"}))))},_fe=({message:t,id:e,timestamp:n})=>{const r=Pg(),s=()=>{try{r(Dg({toastId:e}));const o=document.getElementById("warningToast");o&&o.classList.toggle("hidden")}catch(o){console.error(o)}};return X.createElement("div",{id:"warningToast",className:"flex items-center max-w-md p-4 text-gray-500 bg-white rounded-lg shadow",role:"alert"},X.createElement("div",{className:"inline-flex items-center justify-center flex-shrink-0 w-8 h-8 text-orange-500 bg-orange-100 rounded-lg"},X.createElement("svg",{className:"w-5 h-5","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"currentColor",viewBox:"0 0 20 20"},X.createElement("path",{d:"M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM10 15a1 1 0 1 1 0-2 1 1 0 0 1 0 2Zm1-4a1 1 0 0 1-2 0V6a1 1 0 0 1 2 0v5Z"})),X.createElement("span",{className:"sr-only"},"Warning icon")),X.createElement("div",{className:"ms-3 text-sm font-normal"},t),"\xA0",X.createElement("span",{className:"text-xs font-medium text-orange-600"},X.createElement(Ag,{datetime:n})),X.createElement("button",{type:"button",onClick:s,className:"ms-auto -mx-1.5 -my-1.5 bg-white text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex items-center justify-center h-8 w-8","data-dismiss-target":"#toast-warning","aria-label":"Close"},X.createElement("span",{className:"sr-only"},"Close"),X.createElement("svg",{className:"w-3 h-3","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 14 14"},X.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"}))))},Dfe=({headerText:t,message:e,id:n,timestamp:r})=>X.createElement("div",{id:`toast_${n}`,className:"mb-2 max-w-md p-4 text-gray-900 bg-white rounded-lg shadow",role:"alert"},X.createElement("div",{className:"flex items-center mb-3"},X.createElement("span",{className:"mb-1 text-sm pl-3 font-semibold text-gray-900"},t),X.createElement("button",{type:"button",className:"ms-auto -mx-1.5 -my-1.5 bg-white justify-center items-center flex-shrink-0 text-gray-400 hover:text-gray-900 rounded-lg focus:ring-2 focus:ring-gray-300 p-1.5 hover:bg-gray-100 inline-flex h-8 w-8","data-dismiss-target":"#toast-notification","aria-label":"Close"},X.createElement("span",{className:"sr-only"},"Close"),X.createElement("svg",{className:"w-3 h-3","aria-hidden":"true",xmlns:"http://www.w3.org/2000/svg",fill:"none",viewBox:"0 0 14 14"},X.createElement("path",{stroke:"currentColor",strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"})))),X.createElement("div",{className:"flex items-center"},X.createElement("div",{className:"ms-3 text-sm font-normal"},X.createElement("p",{className:"text-sm font-normal"},e),X.createElement("span",{className:"text-xs font-medium text-orange-600"},X.createElement(Ag,{datetime:r})))));var Ko=(t=>(t.SUCCESS="success",t.WARNING="warning",t.ERROR="error",t.NONE="none",t.STATUS="status",t))(Ko||{});const Pfe=({id:t,message:e,toastType:n,payload:r,isActive:s,headerText:o,timestamp:a,toastOwner:i})=>X.createElement("div",{className:"w-full"},t&&t.length>0?X.createElement(X.Fragment,null,n===Ko.SUCCESS&&s?X.createElement(Rfe,{message:e,id:t,toastType:n,payload:r,isActive:s,headerText:o,timestamp:a,toastOwner:i}):null,n===Ko.WARNING&&s?X.createElement(_fe,{message:e,id:t,toastType:n,payload:r,isActive:s,headerText:o,timestamp:a,toastOwner:i}):null,n===Ko.ERROR&&s?X.createElement(Efe,{message:e,id:t,toastType:n,payload:r,isActive:s,headerText:o,timestamp:a,toastOwner:i}):null,n===Ko.STATUS&&s?X.createElement(Dfe,{message:e,id:t,toastType:n,payload:r,isActive:s,headerText:o,timestamp:a,toastOwner:i}):null):null);let ch;const Afe=new Uint8Array(16);function Ofe(){if(!ch&&(ch=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!ch))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return ch(Afe)}const Mt=[];for(let t=0;t<256;++t)Mt.push((t+256).toString(16).slice(1));function Ffe(t,e=0){return Mt[t[e+0]]+Mt[t[e+1]]+Mt[t[e+2]]+Mt[t[e+3]]+"-"+Mt[t[e+4]]+Mt[t[e+5]]+"-"+Mt[t[e+6]]+Mt[t[e+7]]+"-"+Mt[t[e+8]]+Mt[t[e+9]]+"-"+Mt[t[e+10]]+Mt[t[e+11]]+Mt[t[e+12]]+Mt[t[e+13]]+Mt[t[e+14]]+Mt[t[e+15]]}const Lfe=typeof crypto!="undefined"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto);var _S={randomUUID:Lfe};function DS(t,e,n){if(_S.randomUUID&&!e&&!t)return _S.randomUUID();t=t||{};const r=t.random||(t.rng||Ofe)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,e){n=n||0;for(let s=0;s<16;++s)e[n+s]=r[s];return e}return Ffe(r)}var zfe={cm:!0,mm:!0,in:!0,px:!0,pt:!0,pc:!0,em:!0,ex:!0,ch:!0,rem:!0,vw:!0,vh:!0,vmin:!0,vmax:!0,"%":!0};function f_(t){if(typeof t=="number")return{value:t,unit:"px"};var e,n=(t.match(/^[0-9.]*/)||"").toString();n.includes(".")?e=parseFloat(n):e=parseInt(n,10);var r=(t.match(/[^0-9]*$/)||"").toString();return zfe[r]?{value:e,unit:r}:(console.warn("React Spinners: ".concat(t," is not a valid css value. Defaulting to ").concat(e,"px.")),{value:e,unit:"px"})}function PS(t){var e=f_(t);return"".concat(e.value).concat(e.unit)}var Bfe=function(t,e,n){var r="react-spinners-".concat(t,"-").concat(n);if(typeof window=="undefined"||!window.document)return r;var s=document.createElement("style");document.head.appendChild(s);var o=s.sheet,a=`
    @keyframes `.concat(r,` {
      `).concat(e,`
    }
  `);return o&&o.insertRule(a,0),r},zf=globalThis&&globalThis.__assign||function(){return zf=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++){e=arguments[n];for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s])}return t},zf.apply(this,arguments)},Mfe=globalThis&&globalThis.__rest||function(t,e){var n={};for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(t!=null&&typeof Object.getOwnPropertySymbols=="function")for(var s=0,r=Object.getOwnPropertySymbols(t);s<r.length;s++)e.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(t,r[s])&&(n[r[s]]=t[r[s]]);return n},Vfe=Bfe("CircleLoader","0% {transform: rotate(0deg)} 50% {transform: rotate(180deg)} 100% {transform: rotate(360deg)}","circle");function m_(t){var e=t.loading,n=e===void 0?!0:e,r=t.color,s=r===void 0?"#000000":r,o=t.speedMultiplier,a=o===void 0?1:o,i=t.cssOverride,u=i===void 0?{}:i,l=t.size,c=l===void 0?50:l,d=Mfe(t,["loading","color","speedMultiplier","cssOverride","size"]),p=zf({display:"inherit",position:"relative",width:PS(c),height:PS(c)},u),h=function(f){var m=f_(c),y=m.value,g=m.unit;return{position:"absolute",height:"".concat(y*(1-f/10)).concat(g),width:"".concat(y*(1-f/10)).concat(g),borderTop:"1px solid ".concat(s),borderBottom:"none",borderLeft:"1px solid ".concat(s),borderRight:"none",borderRadius:"100%",transition:"2s",top:"".concat(f*.7*2.5,"%"),left:"".concat(f*.35*2.5,"%"),animation:"".concat(Vfe," ").concat(1/a,"s ").concat(f*.2/a,"s infinite linear")}};return n?oe.exports.createElement("span",zf({style:p},d),oe.exports.createElement("span",{style:h(0)}),oe.exports.createElement("span",{style:h(1)}),oe.exports.createElement("span",{style:h(2)}),oe.exports.createElement("span",{style:h(3)}),oe.exports.createElement("span",{style:h(4)})):null}const Wfe=t=>t.predictions.map((e,n)=>X.createElement("span",{key:e.class,className:"inline-block bg-gray-600 size rounded-full px-3 py-1 text-sm font-semibold text-white mr-2 mb-2"},"#",e.class," - ",(e.score*100).toFixed(2),"%")),Ufe=()=>{const t=ife(g=>g.homePersistedReducer.toast),[e,n]=oe.exports.useState(!1),[r,s]=oe.exports.useState(!1),[o,a]=oe.exports.useState(""),i=[],[u,l]=oe.exports.useState(i),[c,d]=oe.exports.useState({}),p=Pg(),h=g=>{a(URL.createObjectURL(g.target.files[0]))},f=async()=>{n(!0);try{await Ok();const g=await f0.exports.load();if(d(g),!g){n(!1);return}const x=document.getElementById("uploadedImage");x&&g.detect(x).then(w=>{l(w);let v=!1;for(let b=0;b<w.length;b++)w[b].score>.66&&w[b].class==="person"&&(s(!0),v=!0);console.log("predictions: ",w),m(v)}),n(!1)}catch(g){n(!1),console.error(g)}},m=g=>{try{p(kS(g?{id:DS(),message:"Fellow human(s) detected...",toastType:Ko.SUCCESS,payload:{},isActive:!0,headerText:"TensorFlow",timestamp:new Date().toString(),toastOwner:"Tensor Flow"}:{id:DS(),message:"Fellow human(s) not detected...",toastType:Ko.WARNING,payload:{},isActive:!0,headerText:"TensorFlow",timestamp:new Date().toString(),toastOwner:"Tensor Flow"}))}catch(x){console.error(x)}},y=()=>{l(i),n(!1),a(""),s(!1),p(Dg({toastId:t.id}))};return X.createElement("section",{id:"skills",className:"min-h-[75vh]"},X.createElement("div",{className:"container flex flex-col px-4 mx-auto mt-10 space-y-12 md:space-y-0 md:flex-row"},X.createElement("div",{className:"flex flex-col space-y-8 md:w-1/2"},X.createElement("h2",{className:"max-w-md md:text-4xl text-2xl font-bold text-center md:text-left"},"What is TensorFlow.js?"),X.createElement("p",{className:"text-center pt-4 text-gray-500 md:text-left"},"TensorFlow.js is a library for Machine Learning(ML) in JavaScript.",X.createElement("br",null)," It allows development of ML models in JavaScript, and the use of ML directly in the browser or in Node.js."))),X.createElement("div",{className:"container px-4 mx-auto mt-5 w-full"},X.createElement("h2",{className:"text-2xl font-medium text-left"},"Image Prediction:"),X.createElement("div",{className:"w-full mb-3"},X.createElement(Pfe,{toastType:t.toastType,id:t.id,message:t.message,payload:t.payload,isActive:t.isActive,toastOwner:t.toastOwner,headerText:t.headerText,timestamp:t.timestamp}),X.createElement("br",null),X.createElement(Wfe,{predictions:u})),o?X.createElement(X.Fragment,null,e?X.createElement("div",{className:"m-3"},X.createElement(m_,{size:50,color:"blue"})):X.createElement(X.Fragment,null,u.length>0?null:X.createElement(Ix,{className:`cursor-pointer p-3 px-6 mt-2 w-[150px] text-white bg-blue-600 
            rounded-full baseline hover:bg-blue-700 md:block`,label:"Predict Image",onclickButton:f,disabled:u.length>0}),X.createElement(Ix,{className:`cursor-pointer p-3 mt-3 px-6 w-[150px] text-white bg-red-600 
          rounded-full baseline hover:bg-red-700 md:block`,label:"Clear",onclickButton:y})),X.createElement("img",{alt:"referenceImage",className:"w-[200px] p-2",id:"uploadedImage",src:o,crossOrigin:"anonymous"})):X.createElement(X.Fragment,null,X.createElement("p",{className:"text-blue-500 p-2"},"Pssst! Use an image with a human and another without one.."),X.createElement("input",{className:"p-2",id:"fileInput",type:"file",accept:"image/*",onChange:h}))))},Gfe=()=>{const t=[{id:0,name:"Home",selected:!1,icon:{},linkTo:"/"},{id:1,name:"Menu 2",selected:!1,icon:{},linkTo:"/"},{id:2,name:"Menu 3",selected:!1,icon:{},linkTo:"/"}],[e,n]=oe.exports.useState(!0);return oe.exports.useEffect(()=>{e&&n(!1)}),X.createElement(X.Fragment,null,X.createElement(BA,{menuItems:t}),X.createElement(Ufe,null),X.createElement(MA,null))};function Hfe(){return X.createElement("div",null,X.createElement(OA,null,X.createElement(EA,null,X.createElement(uk,{path:"/",element:X.createElement(Gfe,null)}))))}const jfe="modulepreload",AS={},Kfe="/react-ts-tensorflow/",qfe=function(e,n){return!n||n.length===0?e():Promise.all(n.map(r=>{if(r=`${Kfe}${r}`,r in AS)return;AS[r]=!0;const s=r.endsWith(".css"),o=s?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${r}"]${o}`))return;const a=document.createElement("link");if(a.rel=s?"stylesheet":jfe,s||(a.as="script",a.crossOrigin=""),a.href=r,document.head.appendChild(a),s)return new Promise((i,u)=>{a.addEventListener("load",i),a.addEventListener("error",()=>u(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>e())},Xfe=t=>{t&&t instanceof Function&&qfe(()=>import("./web-vitals.67dce932.js"),[]).then(({getCLS:e,getFID:n,getFCP:r,getLCP:s,getTTFB:o})=>{e(t),n(t),r(t),s(t),o(t)})};function Th(t){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Th=function(n){return typeof n}:Th=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Th(t)}function Yfe(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function OS(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Qfe(t,e,n){return e&&OS(t.prototype,e),n&&OS(t,n),t}function Zfe(t,e){return e&&(Th(e)==="object"||typeof e=="function")?e:Eh(t)}function $0(t){return $0=Object.setPrototypeOf?Object.getPrototypeOf:function(n){return n.__proto__||Object.getPrototypeOf(n)},$0(t)}function Eh(t){if(t===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}function Jfe(t,e){if(typeof e!="function"&&e!==null)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&k0(t,e)}function k0(t,e){return k0=Object.setPrototypeOf||function(r,s){return r.__proto__=s,r},k0(t,e)}function Rh(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var g_=function(t){Jfe(e,t);function e(){var n,r;Yfe(this,e);for(var s=arguments.length,o=new Array(s),a=0;a<s;a++)o[a]=arguments[a];return r=Zfe(this,(n=$0(e)).call.apply(n,[this].concat(o))),Rh(Eh(r),"state",{bootstrapped:!1}),Rh(Eh(r),"_unsubscribe",void 0),Rh(Eh(r),"handlePersistorState",function(){var i=r.props.persistor,u=i.getState(),l=u.bootstrapped;l&&(r.props.onBeforeLift?Promise.resolve(r.props.onBeforeLift()).finally(function(){return r.setState({bootstrapped:!0})}):r.setState({bootstrapped:!0}),r._unsubscribe&&r._unsubscribe())}),r}return Qfe(e,[{key:"componentDidMount",value:function(){this._unsubscribe=this.props.persistor.subscribe(this.handlePersistorState),this.handlePersistorState()}},{key:"componentWillUnmount",value:function(){this._unsubscribe&&this._unsubscribe()}},{key:"render",value:function(){return typeof this.props.children=="function"?this.props.children(this.state.bootstrapped):this.state.bootstrapped?this.props.children:this.props.loading}}]),e}(oe.exports.PureComponent);Rh(g_,"defaultProps",{children:null,loading:null});var fv={},mv={};mv.__esModule=!0;mv.default=nme;function _h(t){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?_h=function(n){return typeof n}:_h=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},_h(t)}function Ey(){}var eme={getItem:Ey,setItem:Ey,removeItem:Ey};function tme(t){if((typeof self=="undefined"?"undefined":_h(self))!=="object"||!(t in self))return!1;try{var e=self[t],n="redux-persist ".concat(t," test");e.setItem(n,"test"),e.getItem(n),e.removeItem(n)}catch{return!1}return!0}function nme(t){var e="".concat(t,"Storage");return tme(e)?self[e]:eme}fv.__esModule=!0;fv.default=ome;var rme=sme(mv);function sme(t){return t&&t.__esModule?t:{default:t}}function ome(t){var e=(0,rme.default)(t);return{getItem:function(r){return new Promise(function(s,o){s(e.getItem(r))})},setItem:function(r,s){return new Promise(function(o,a){o(e.setItem(r,s))})},removeItem:function(r){return new Promise(function(s,o){s(e.removeItem(r))})}}}var y_=void 0,ame=ime(fv);function ime(t){return t&&t.__esModule?t:{default:t}}var ume=(0,ame.default)("local");y_=ume;var gv="persist:",yv="persist/FLUSH",Og="persist/REHYDRATE",xv="persist/PAUSE",wv="persist/PERSIST",vv="persist/PURGE",bv="persist/REGISTER",lme=-1;function Dh(t){return typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Dh=function(n){return typeof n}:Dh=function(n){return n&&typeof Symbol=="function"&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},Dh(t)}function FS(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(s){return Object.getOwnPropertyDescriptor(t,s).enumerable})),n.push.apply(n,r)}return n}function cme(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?FS(n,!0).forEach(function(r){dme(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):FS(n).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function dme(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function pme(t,e,n,r){r.debug;var s=cme({},n);return t&&Dh(t)==="object"&&Object.keys(t).forEach(function(o){o!=="_persist"&&e[o]===n[o]&&(s[o]=t[o])}),s}function hme(t){var e=t.blacklist||null,n=t.whitelist||null,r=t.transforms||[],s=t.throttle||0,o="".concat(t.keyPrefix!==void 0?t.keyPrefix:gv).concat(t.key),a=t.storage,i;t.serialize===!1?i=function(b){return b}:typeof t.serialize=="function"?i=t.serialize:i=fme;var u=t.writeFailHandler||null,l={},c={},d=[],p=null,h=null,f=function(b){Object.keys(b).forEach(function(S){!g(S)||l[S]!==b[S]&&d.indexOf(S)===-1&&d.push(S)}),Object.keys(l).forEach(function(S){b[S]===void 0&&g(S)&&d.indexOf(S)===-1&&l[S]!==void 0&&d.push(S)}),p===null&&(p=setInterval(m,s)),l=b};function m(){if(d.length===0){p&&clearInterval(p),p=null;return}var v=d.shift(),b=r.reduce(function(S,$){return $.in(S,v,l)},l[v]);if(b!==void 0)try{c[v]=i(b)}catch(S){console.error("redux-persist/createPersistoid: error serializing state",S)}else delete c[v];d.length===0&&y()}function y(){Object.keys(c).forEach(function(v){l[v]===void 0&&delete c[v]}),h=a.setItem(o,i(c)).catch(x)}function g(v){return!(n&&n.indexOf(v)===-1&&v!=="_persist"||e&&e.indexOf(v)!==-1)}function x(v){u&&u(v)}var w=function(){for(;d.length!==0;)m();return h||Promise.resolve()};return{update:f,flush:w}}function fme(t){return JSON.stringify(t)}function mme(t){var e=t.transforms||[],n="".concat(t.keyPrefix!==void 0?t.keyPrefix:gv).concat(t.key),r=t.storage;t.debug;var s;return t.deserialize===!1?s=function(a){return a}:typeof t.deserialize=="function"?s=t.deserialize:s=gme,r.getItem(n).then(function(o){if(o)try{var a={},i=s(o);return Object.keys(i).forEach(function(u){a[u]=e.reduceRight(function(l,c){return c.out(l,u,i)},s(i[u]))}),a}catch(u){throw u}else return})}function gme(t){return JSON.parse(t)}function yme(t){var e=t.storage,n="".concat(t.keyPrefix!==void 0?t.keyPrefix:gv).concat(t.key);return e.removeItem(n,xme)}function xme(t){}function LS(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(s){return Object.getOwnPropertyDescriptor(t,s).enumerable})),n.push.apply(n,r)}return n}function os(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?LS(n,!0).forEach(function(r){wme(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):LS(n).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function wme(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function vme(t,e){if(t==null)return{};var n=bme(t,e),r,s;if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(s=0;s<o.length;s++)r=o[s],!(e.indexOf(r)>=0)&&(!Object.prototype.propertyIsEnumerable.call(t,r)||(n[r]=t[r]))}return n}function bme(t,e){if(t==null)return{};var n={},r=Object.keys(t),s,o;for(o=0;o<r.length;o++)s=r[o],!(e.indexOf(s)>=0)&&(n[s]=t[s]);return n}var Cme=5e3;function Sme(t,e){var n=t.version!==void 0?t.version:lme;t.debug;var r=t.stateReconciler===void 0?pme:t.stateReconciler,s=t.getStoredState||mme,o=t.timeout!==void 0?t.timeout:Cme,a=null,i=!1,u=!0,l=function(d){return d._persist.rehydrated&&a&&!u&&a.update(d),d};return function(c,d){var p=c||{},h=p._persist,f=vme(p,["_persist"]),m=f;if(d.type===wv){var y=!1,g=function(N,E){y||(d.rehydrate(t.key,N,E),y=!0)};if(o&&setTimeout(function(){!y&&g(void 0,new Error('redux-persist: persist timed out for persist key "'.concat(t.key,'"')))},o),u=!1,a||(a=hme(t)),h)return os({},e(m,d),{_persist:h});if(typeof d.rehydrate!="function"||typeof d.register!="function")throw new Error("redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.");return d.register(t.key),s(t).then(function($){var N=t.migrate||function(E,R){return Promise.resolve(E)};N($,n).then(function(E){g(E)},function(E){g(void 0,E)})},function($){g(void 0,$)}),os({},e(m,d),{_persist:{version:n,rehydrated:!1}})}else{if(d.type===vv)return i=!0,d.result(yme(t)),os({},e(m,d),{_persist:h});if(d.type===yv)return d.result(a&&a.flush()),os({},e(m,d),{_persist:h});if(d.type===xv)u=!0;else if(d.type===Og){if(i)return os({},m,{_persist:os({},h,{rehydrated:!0})});if(d.key===t.key){var x=e(m,d),w=d.payload,v=r!==!1&&w!==void 0?r(w,c,x,t):x,b=os({},v,{_persist:os({},h,{rehydrated:!0})});return l(b)}}}if(!h)return e(c,d);var S=e(m,d);return S===m?c:l(os({},S,{_persist:h}))}}function zS(t){return Ime(t)||kme(t)||$me()}function $me(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function kme(t){if(Symbol.iterator in Object(t)||Object.prototype.toString.call(t)==="[object Arguments]")return Array.from(t)}function Ime(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}function BS(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(s){return Object.getOwnPropertyDescriptor(t,s).enumerable})),n.push.apply(n,r)}return n}function I0(t){for(var e=1;e<arguments.length;e++){var n=arguments[e]!=null?arguments[e]:{};e%2?BS(n,!0).forEach(function(r){Nme(t,r,n[r])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):BS(n).forEach(function(r){Object.defineProperty(t,r,Object.getOwnPropertyDescriptor(n,r))})}return t}function Nme(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var x_={registry:[],bootstrapped:!1},Tme=function(){var e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:x_,n=arguments.length>1?arguments[1]:void 0;switch(n.type){case bv:return I0({},e,{registry:[].concat(zS(e.registry),[n.key])});case Og:var r=e.registry.indexOf(n.key),s=zS(e.registry);return s.splice(r,1),I0({},e,{registry:s,bootstrapped:s.length===0});default:return e}};function Eme(t,e,n){var r=n||!1,s=uv(Tme,x_,e&&e.enhancer?e.enhancer:void 0),o=function(l){s.dispatch({type:bv,key:l})},a=function(l,c,d){var p={type:Og,payload:c,err:d,key:l};t.dispatch(p),s.dispatch(p),r&&i.getState().bootstrapped&&(r(),r=!1)},i=I0({},s,{purge:function(){var l=[];return t.dispatch({type:vv,result:function(d){l.push(d)}}),Promise.all(l)},flush:function(){var l=[];return t.dispatch({type:yv,result:function(d){l.push(d)}}),Promise.all(l)},pause:function(){t.dispatch({type:xv})},persist:function(){t.dispatch({type:wv,register:o,rehydrate:a})}});return e&&e.manualPersist||i.persist(),i}var N0={exports:{}};(function(t,e){(function(n,r){r(e)})(Ln,function(n){function r(T,A){T.super_=A,T.prototype=Object.create(A.prototype,{constructor:{value:T,enumerable:!1,writable:!0,configurable:!0}})}function s(T,A){Object.defineProperty(this,"kind",{value:T,enumerable:!0}),A&&A.length&&Object.defineProperty(this,"path",{value:A,enumerable:!0})}function o(T,A,_){o.super_.call(this,"E",T),Object.defineProperty(this,"lhs",{value:A,enumerable:!0}),Object.defineProperty(this,"rhs",{value:_,enumerable:!0})}function a(T,A){a.super_.call(this,"N",T),Object.defineProperty(this,"rhs",{value:A,enumerable:!0})}function i(T,A){i.super_.call(this,"D",T),Object.defineProperty(this,"lhs",{value:A,enumerable:!0})}function u(T,A,_){u.super_.call(this,"A",T),Object.defineProperty(this,"index",{value:A,enumerable:!0}),Object.defineProperty(this,"item",{value:_,enumerable:!0})}function l(T,A,_){var G=T.slice((_||A)+1||T.length);return T.length=A<0?T.length+A:A,T.push.apply(T,G),T}function c(T){var A=typeof T=="undefined"?"undefined":W(T);return A!=="object"?A:T===Math?"math":T===null?"null":Array.isArray(T)?"array":Object.prototype.toString.call(T)==="[object Date]"?"date":typeof T.toString=="function"&&/^\/.*\//.test(T.toString())?"regexp":"object"}function d(T,A,_,G,K,Q,Z){K=K||[],Z=Z||[];var ne=K.slice(0);if(typeof Q!="undefined"){if(G){if(typeof G=="function"&&G(ne,Q))return;if((typeof G=="undefined"?"undefined":W(G))==="object"){if(G.prefilter&&G.prefilter(ne,Q))return;if(G.normalize){var de=G.normalize(ne,Q,T,A);de&&(T=de[0],A=de[1])}}}ne.push(Q)}c(T)==="regexp"&&c(A)==="regexp"&&(T=T.toString(),A=A.toString());var ye=typeof T=="undefined"?"undefined":W(T),ge=typeof A=="undefined"?"undefined":W(A),Ce=ye!=="undefined"||Z&&Z[Z.length-1].lhs&&Z[Z.length-1].lhs.hasOwnProperty(Q),Te=ge!=="undefined"||Z&&Z[Z.length-1].rhs&&Z[Z.length-1].rhs.hasOwnProperty(Q);if(!Ce&&Te)_(new a(ne,A));else if(!Te&&Ce)_(new i(ne,T));else if(c(T)!==c(A))_(new o(ne,T,A));else if(c(T)==="date"&&T-A!==0)_(new o(ne,T,A));else if(ye==="object"&&T!==null&&A!==null)if(Z.filter(function(Se){return Se.lhs===T}).length)T!==A&&_(new o(ne,T,A));else{if(Z.push({lhs:T,rhs:A}),Array.isArray(T)){var xe;for(T.length,xe=0;xe<T.length;xe++)xe>=A.length?_(new u(ne,xe,new i(void 0,T[xe]))):d(T[xe],A[xe],_,G,ne,xe,Z);for(;xe<A.length;)_(new u(ne,xe,new a(void 0,A[xe++])))}else{var De=Object.keys(T),Ee=Object.keys(A);De.forEach(function(Se,ze){var on=Ee.indexOf(Se);on>=0?(d(T[Se],A[Se],_,G,ne,Se,Z),Ee=l(Ee,on)):d(T[Se],void 0,_,G,ne,Se,Z)}),Ee.forEach(function(Se){d(void 0,A[Se],_,G,ne,Se,Z)})}Z.length=Z.length-1}else T!==A&&(ye==="number"&&isNaN(T)&&isNaN(A)||_(new o(ne,T,A)))}function p(T,A,_,G){return G=G||[],d(T,A,function(K){K&&G.push(K)},_),G.length?G:void 0}function h(T,A,_){if(_.path&&_.path.length){var G,K=T[A],Q=_.path.length-1;for(G=0;G<Q;G++)K=K[_.path[G]];switch(_.kind){case"A":h(K[_.path[G]],_.index,_.item);break;case"D":delete K[_.path[G]];break;case"E":case"N":K[_.path[G]]=_.rhs}}else switch(_.kind){case"A":h(T[A],_.index,_.item);break;case"D":T=l(T,A);break;case"E":case"N":T[A]=_.rhs}return T}function f(T,A,_){if(T&&A&&_&&_.kind){for(var G=T,K=-1,Q=_.path?_.path.length-1:0;++K<Q;)typeof G[_.path[K]]=="undefined"&&(G[_.path[K]]=typeof _.path[K]=="number"?[]:{}),G=G[_.path[K]];switch(_.kind){case"A":h(_.path?G[_.path[K]]:G,_.index,_.item);break;case"D":delete G[_.path[K]];break;case"E":case"N":G[_.path[K]]=_.rhs}}}function m(T,A,_){if(_.path&&_.path.length){var G,K=T[A],Q=_.path.length-1;for(G=0;G<Q;G++)K=K[_.path[G]];switch(_.kind){case"A":m(K[_.path[G]],_.index,_.item);break;case"D":K[_.path[G]]=_.lhs;break;case"E":K[_.path[G]]=_.lhs;break;case"N":delete K[_.path[G]]}}else switch(_.kind){case"A":m(T[A],_.index,_.item);break;case"D":T[A]=_.lhs;break;case"E":T[A]=_.lhs;break;case"N":T=l(T,A)}return T}function y(T,A,_){if(T&&A&&_&&_.kind){var G,K,Q=T;for(K=_.path.length-1,G=0;G<K;G++)typeof Q[_.path[G]]=="undefined"&&(Q[_.path[G]]={}),Q=Q[_.path[G]];switch(_.kind){case"A":m(Q[_.path[G]],_.index,_.item);break;case"D":Q[_.path[G]]=_.lhs;break;case"E":Q[_.path[G]]=_.lhs;break;case"N":delete Q[_.path[G]]}}}function g(T,A,_){if(T&&A){var G=function(K){_&&!_(T,A,K)||f(T,A,K)};d(T,A,G)}}function x(T){return"color: "+O[T].color+"; font-weight: bold"}function w(T){var A=T.kind,_=T.path,G=T.lhs,K=T.rhs,Q=T.index,Z=T.item;switch(A){case"E":return[_.join("."),G,"\u2192",K];case"N":return[_.join("."),K];case"D":return[_.join(".")];case"A":return[_.join(".")+"["+Q+"]",Z];default:return[]}}function v(T,A,_,G){var K=p(T,A);try{G?_.groupCollapsed("diff"):_.group("diff")}catch{_.log("diff")}K?K.forEach(function(Q){var Z=Q.kind,ne=w(Q);_.log.apply(_,["%c "+O[Z].text,x(Z)].concat(H(ne)))}):_.log("\u2014\u2014 no diff \u2014\u2014");try{_.groupEnd()}catch{_.log("\u2014\u2014 diff end \u2014\u2014 ")}}function b(T,A,_,G){switch(typeof T=="undefined"?"undefined":W(T)){case"object":return typeof T[G]=="function"?T[G].apply(T,H(_)):T[G];case"function":return T(A);default:return T}}function S(T){var A=T.timestamp,_=T.duration;return function(G,K,Q){var Z=["action"];return Z.push("%c"+String(G.type)),A&&Z.push("%c@ "+K),_&&Z.push("%c(in "+Q.toFixed(2)+" ms)"),Z.join(" ")}}function $(T,A){var _=A.logger,G=A.actionTransformer,K=A.titleFormatter,Q=K===void 0?S(A):K,Z=A.collapsed,ne=A.colors,de=A.level,ye=A.diff,ge=typeof A.titleFormatter=="undefined";T.forEach(function(Ce,Te){var xe=Ce.started,De=Ce.startedTime,Ee=Ce.action,Se=Ce.prevState,ze=Ce.error,on=Ce.took,Ze=Ce.nextState,Zn=T[Te+1];Zn&&(Ze=Zn.prevState,on=Zn.started-xe);var st=G(Ee),Ur=typeof Z=="function"?Z(function(){return Ze},Ee,Ce):Z,On=M(De),xr=ne.title?"color: "+ne.title(st)+";":"",mn=["color: gray; font-weight: lighter;"];mn.push(xr),A.timestamp&&mn.push("color: gray; font-weight: lighter;"),A.duration&&mn.push("color: gray; font-weight: lighter;");var gn=Q(st,On,on);try{Ur?ne.title&&ge?_.groupCollapsed.apply(_,["%c "+gn].concat(mn)):_.groupCollapsed(gn):ne.title&&ge?_.group.apply(_,["%c "+gn].concat(mn)):_.group(gn)}catch{_.log(gn)}var Jn=b(de,st,[Se],"prevState"),ss=b(de,st,[st],"action"),Io=b(de,st,[ze,Se],"error"),No=b(de,st,[Ze],"nextState");if(Jn)if(ne.prevState){var Fg="color: "+ne.prevState(Se)+"; font-weight: bold";_[Jn]("%c prev state",Fg,Se)}else _[Jn]("prev state",Se);if(ss)if(ne.action){var La="color: "+ne.action(st)+"; font-weight: bold";_[ss]("%c action    ",La,st)}else _[ss]("action    ",st);if(ze&&Io)if(ne.error){var Lg="color: "+ne.error(ze,Se)+"; font-weight: bold;";_[Io]("%c error     ",Lg,ze)}else _[Io]("error     ",ze);if(No)if(ne.nextState){var zg="color: "+ne.nextState(Ze)+"; font-weight: bold";_[No]("%c next state",zg,Ze)}else _[No]("next state",Ze);ye&&v(Se,Ze,_,Ur);try{_.groupEnd()}catch{_.log("\u2014\u2014 log end \u2014\u2014")}})}function N(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},A=Object.assign({},U,T),_=A.logger,G=A.stateTransformer,K=A.errorTransformer,Q=A.predicate,Z=A.logErrors,ne=A.diffPredicate;if(typeof _=="undefined")return function(){return function(ye){return function(ge){return ye(ge)}}};if(T.getState&&T.dispatch)return console.error(`[redux-logger] redux-logger not installed. Make sure to pass logger instance as middleware:
// Logger with default options
import { logger } from 'redux-logger'
const store = createStore(
  reducer,
  applyMiddleware(logger)
)
// Or you can create your own logger with custom options http://bit.ly/redux-logger-options
import createLogger from 'redux-logger'
const logger = createLogger({
  // ...options
});
const store = createStore(
  reducer,
  applyMiddleware(logger)
)
`),function(){return function(ye){return function(ge){return ye(ge)}}};var de=[];return function(ye){var ge=ye.getState;return function(Ce){return function(Te){if(typeof Q=="function"&&!Q(ge,Te))return Ce(Te);var xe={};de.push(xe),xe.started=V.now(),xe.startedTime=new Date,xe.prevState=G(ge()),xe.action=Te;var De=void 0;if(Z)try{De=Ce(Te)}catch(Se){xe.error=K(Se)}else De=Ce(Te);xe.took=V.now()-xe.started,xe.nextState=G(ge());var Ee=A.diff&&typeof ne=="function"?ne(ge,Te):A.diff;if($(de,Object.assign({},A,{diff:Ee})),de.length=0,xe.error)throw xe.error;return De}}}}var E,R,F=function(T,A){return new Array(A+1).join(T)},B=function(T,A){return F("0",A-T.toString().length)+T},M=function(T){return B(T.getHours(),2)+":"+B(T.getMinutes(),2)+":"+B(T.getSeconds(),2)+"."+B(T.getMilliseconds(),3)},V=typeof performance!="undefined"&&performance!==null&&typeof performance.now=="function"?performance:Date,W=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(T){return typeof T}:function(T){return T&&typeof Symbol=="function"&&T.constructor===Symbol&&T!==Symbol.prototype?"symbol":typeof T},H=function(T){if(Array.isArray(T)){for(var A=0,_=Array(T.length);A<T.length;A++)_[A]=T[A];return _}return Array.from(T)},q=[];E=(typeof Ln=="undefined"?"undefined":W(Ln))==="object"&&Ln?Ln:typeof window!="undefined"?window:{},R=E.DeepDiff,R&&q.push(function(){typeof R!="undefined"&&E.DeepDiff===p&&(E.DeepDiff=R,R=void 0)}),r(o,s),r(a,s),r(i,s),r(u,s),Object.defineProperties(p,{diff:{value:p,enumerable:!0},observableDiff:{value:d,enumerable:!0},applyDiff:{value:g,enumerable:!0},applyChange:{value:f,enumerable:!0},revertChange:{value:y,enumerable:!0},isConflict:{value:function(){return typeof R!="undefined"},enumerable:!0},noConflict:{value:function(){return q&&(q.forEach(function(T){T()}),q=null),p},enumerable:!0}});var O={E:{color:"#2196F3",text:"CHANGED:"},N:{color:"#4CAF50",text:"ADDED:"},D:{color:"#F44336",text:"DELETED:"},A:{color:"#2196F3",text:"ARRAY:"}},U={level:"log",logger:console,logErrors:!0,collapsed:void 0,predicate:void 0,duration:!1,timestamp:!0,stateTransformer:function(T){return T},actionTransformer:function(T){return T},errorTransformer:function(T){return T},colors:{title:function(){return"inherit"},prevState:function(){return"#9E9E9E"},action:function(){return"#03A9F4"},nextState:function(){return"#4CAF50"},error:function(){return"#F20404"}},diff:!1,diffPredicate:void 0,transformer:void 0},j=function(){var T=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},A=T.dispatch,_=T.getState;return typeof A=="function"||typeof _=="function"?N()({dispatch:A,getState:_}):void console.error(`
[redux-logger v3] BREAKING CHANGE
[redux-logger v3] Since 3.0.0 redux-logger exports by default logger with default settings.
[redux-logger v3] Change
[redux-logger v3] import createLogger from 'redux-logger'
[redux-logger v3] to
[redux-logger v3] import { createLogger } from 'redux-logger'
`)};n.defaults=U,n.createLogger=N,n.logger=j,n.default=j,Object.defineProperty(n,"__esModule",{value:!0})})})(N0,N0.exports);var MS=C_(N0.exports);const Rme={key:"root",version:1,storage:y_},_me=Sme(Rme,qhe),w_=Ohe({reducer:{homePersistedReducer:_me},middleware:t=>t({serializableCheck:{ignoredActions:[yv,Og,xv,wv,vv,bv]},logger:MS}).concat(MS)}),Dme=Eme(w_),Pme=()=>X.createElement("div",{className:"flex justify-center h-[100vh]"},X.createElement(m_,{size:50,color:"white"})),Ame=Ry.createRoot(document.getElementById("root"));Ame.render(X.createElement(X.StrictMode,null,X.createElement(ffe,{store:w_},X.createElement(g_,{loading:X.createElement(Pme,null),persistor:Dme},X.createElement(Hfe,null)))));Xfe();
